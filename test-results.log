compdef:153: _comps: assignment to invalid subscript range
bun test v1.2.19 (aad3abea)
DOM environment not available, skipping DOM tests
DOM not available in this environment

lib/telemetry.test.ts:
94 | 			process.env.OTEL_ENABLED = "true";
95 | 			process.env.OTEL_EXPORTER_OTLP_ENDPOINT = "http://localhost:4317";
96 | 
97 | 			const config = getTelemetryConfig();
98 | 
99 | 			expect(config.headers).toBeUndefined();
                               ^
error: expect(received).toBeUndefined()

Received: {
  Authorization: "Bearer token123",
}

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/telemetry.test.ts:99:27)
(fail) telemetry > getTelemetryConfig > should not include headers when OTEL_AUTH_HEADER is not set [4.79ms]
205 | 			process.env.NODE_ENV = "development";
206 | 			const config: TelemetryConfig = { isEnabled: false };
207 | 
208 | 			logTelemetryConfig(config);
209 | 
210 | 			expect(consoleSpy).toHaveBeenCalledWith("Telemetry:", "disabled");
                          ^
ReferenceError: consoleSpy is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/telemetry.test.ts:210:21)
(fail) telemetry > logTelemetryConfig > should log disabled message when telemetry is disabled [0.17ms]
220 | 				samplingRatio: 0.75,
221 | 			};
222 | 
223 | 			logTelemetryConfig(config);
224 | 
225 | 			expect(consoleSpy).toHaveBeenCalledWith("Telemetry:", "enabled");
                          ^
ReferenceError: consoleSpy is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/telemetry.test.ts:225:21)
(fail) telemetry > logTelemetryConfig > should log enabled configuration [0.16ms]
234 | 				serviceVersion: "1.0.0",
235 | 			};
236 | 
237 | 			logTelemetryConfig(config);
238 | 
239 | 			expect(consoleSpy).toHaveBeenCalledWith("Telemetry:", "enabled");
                          ^
ReferenceError: consoleSpy is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/telemetry.test.ts:239:21)
(fail) telemetry > logTelemetryConfig > should use default sampling ratio of 1 when not specified [0.05ms]
252 | 				},
253 | 			};
254 | 
255 | 			logTelemetryConfig(config);
256 | 
257 | 			expect(consoleSpy).toHaveBeenCalledWith("Telemetry:", "enabled");
                          ^
ReferenceError: consoleSpy is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/telemetry.test.ts:257:21)
(fail) telemetry > logTelemetryConfig > should log headers when present
266 | 				serviceVersion: "1.0.0",
267 | 			};
268 | 
269 | 			logTelemetryConfig(config);
270 | 
271 | 			expect(consoleSpy).toHaveBeenCalledWith("Telemetry:", "enabled");
                          ^
ReferenceError: consoleSpy is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/telemetry.test.ts:271:21)
(fail) telemetry > logTelemetryConfig > should not log headers when not present
279 | 				{ ratio: 0.333 },
280 | 				{ ratio: 0.999 },
281 | 			];
282 | 
283 | 			for (const { ratio } of testCases) {
284 | 				consoleSpy.mockClear();
          ^
ReferenceError: consoleSpy is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/telemetry.test.ts:284:5)
(fail) telemetry > logTelemetryConfig > should handle edge case sampling ratios [0.23ms]
Unknown message type: unknown-type

lib/metrics/prometheus-client.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
2 | 
3 | // Mock the prom-client module BEFORE imports to fix hoisting
4 | vi.mock("prom-client", () => {
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("prom-client", () => {
  const createMockMetric = (methodNames) => {
    const mockMetric = {};
    for (const methodName of methodNames) {
      mockMetric[methodName] = vi.fn();
    }
    mockMetric.labels = vi.fn(() => {
      const labeled = {};
      for (const methodName of methodNames) {
        labeled[methodName] = vi.fn();
      }
      return labeled;
    });
    return mockMetric;
  };
  return {
    Summary: vi.fn(() => createMockMetric(["observe"])),
    Histogram: vi.fn(() => createMockMetric(["observe"])),
    Counter: vi.fn(() => createMockMetric(["inc"])),
    Gauge: vi.fn(() => createMockMetric(["set", "inc", "dec"])),
    register: {
      clear: vi.fn(() => {}),
      metrics: vi.fn(() => Promise.resolve(`# Mock metrics
agent_operations_total{agent_id="agent-1",agent_type="code-gen",operation="execute",provider="openai",status="success"} 1`))
    }
  };
})', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/lib/metrics/prometheus-client.test.ts:4:4
-------------------------------


lib/metrics/opentelemetry-integration.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'Resource' not found in module '/Users/neo/Developer/experiments/vibex-app/node_modules/@opentelemetry/resources/build/src/index.js'.
      at loadAndEvaluateModule (1:11)
-------------------------------


lib/metrics/integration.test.ts:
70 | 			collector.setActiveAgents("code-review", "openai", 1);
71 | 
72 | 			const metrics = await collector.getMetrics();
73 | 
74 | 			// Verify metrics exist for dashboard queries
75 | 			expect(metrics).toContain("agent_operations_total");
                        ^
error: expect(received).toContain(expected)

Expected to contain: "agent_operations_total"
Received: "\n"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:75:20)
(fail) Metrics Integration > End-to-End Metric Collection and Dashboard Correlation > should collect agent metrics that correlate with dashboard queries [1.06ms]
 98 | 			);
 99 | 		});
100 | 
101 | 		it("should collect system metrics that correlate with system health dashboard", async () => {
102 | 			// Record system metrics
103 | 			collector.recordHttpRequest("GET", "/api/agents", 200, 0.125);
                   ^
TypeError: collector.recordHttpRequest is not a function. (In 'collector.recordHttpRequest("GET", "/api/agents", 200, 0.125)', 'collector.recordHttpRequest' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:103:14)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:101:83)
(fail) Metrics Integration > End-to-End Metric Collection and Dashboard Correlation > should collect system metrics that correlate with system health dashboard [0.45ms]
132 | 			expect(dbPanel?.targets[0].expr).toBe("database_connections_active");
133 | 		});
134 | 
135 | 		it("should collect business metrics that correlate with business dashboard", async () => {
136 | 			// Record business metrics
137 | 			collector.setActiveUserSessions(42);
                   ^
TypeError: collector.setActiveUserSessions is not a function. (In 'collector.setActiveUserSessions(42)', 'collector.setActiveUserSessions' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:137:14)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:135:80)
(fail) Metrics Integration > End-to-End Metric Collection and Dashboard Correlation > should collect business metrics that correlate with business dashboard [0.14ms]
259 | 			expect(tokenAlert?.expr).toContain(
260 | 				"rate(agent_token_usage_total[1h]) > 100000",
261 | 			);
262 | 
263 | 			// Verify metrics contain the data that would trigger these alerts
264 | 			expect(metrics).toContain("agent_operations_total");
                         ^
error: expect(received).toContain(expected)

Expected to contain: "agent_operations_total"
Received: "\n"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:264:20)
(fail) Metrics Integration > Alert Rules and Metric Correlation > should trigger agent alerts based on collected metrics [0.30ms]
271 | 		it("should trigger system alerts based on collected metrics", async () => {
272 | 			// Generate metrics that would trigger system alerts
273 | 
274 | 			// High HTTP error rate
275 | 			for (let i = 0; i < 6; i++) {
276 | 				collector.recordHttpRequest("GET", "/api/agents", 500, 0.5);
                    ^
TypeError: collector.recordHttpRequest is not a function. (In 'collector.recordHttpRequest("GET", "/api/agents", 500, 0.5)', 'collector.recordHttpRequest' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:276:15)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:271:65)
(fail) Metrics Integration > Alert Rules and Metric Correlation > should trigger system alerts based on collected metrics [0.04ms]
322 | 
323 | 		it("should trigger business alerts based on collected metrics", async () => {
324 | 			// Generate metrics that would trigger business alerts
325 | 
326 | 			// Low user engagement
327 | 			collector.setActiveUserSessions(5);
                   ^
TypeError: collector.setActiveUserSessions is not a function. (In 'collector.setActiveUserSessions(5)', 'collector.setActiveUserSessions' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:327:14)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:323:67)
(fail) Metrics Integration > Alert Rules and Metric Correlation > should trigger business alerts based on collected metrics
373 | 			);
374 | 			collector.recordTokenUsage("agent-1", "code-gen", "openai", "total", 200);
375 | 			collector.recordAgentCost("agent-1", "code-gen", "openai", 0.03);
376 | 			collector.setActiveAgents("code-gen", "openai", 1);
377 | 
378 | 			collector.recordHttpRequest("GET", "/api/agents", 200, 0.1);
                   ^
TypeError: collector.recordHttpRequest is not a function. (In 'collector.recordHttpRequest("GET", "/api/agents", 200, 0.1)', 'collector.recordHttpRequest' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:378:14)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:358:79)
(fail) Metrics Integration > Metric Lifecycle and Consistency > should maintain metric consistency across dashboard and alert queries [0.12ms]
450 | 				"success",
451 | 			);
452 | 			collector.setActiveAgents("code-gen", "openai", 1);
453 | 
454 | 			let metrics = await collector.getMetrics();
455 | 			expect(metrics).toContain("agent_operations_total");
                         ^
error: expect(received).toContain(expected)

Expected to contain: "agent_operations_total"
Received: "\n"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/metrics/integration.test.ts:455:20)
(fail) Metrics Integration > Metric Lifecycle and Consistency > should handle metric updates and maintain data integrity [0.14ms]

lib/redis/mock-redis.test.ts:
149 | 
150 | 	test("should verify LockService class definition", async () => {
151 | 		const { LockService } = await import("./lock-service");
152 | 
153 | 		expect(LockService).toBeDefined();
154 | 		expect(typeof LockService.getInstance).toBe("function");
                                               ^
error: expect(received).toBe(expected)

Expected: "function"
Received: "undefined"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/mock-redis.test.ts:154:42)
(fail) Redis Services with Mock > should verify LockService class definition [7.92ms]
161 | 
162 | 	test("should verify RateLimitService class definition", async () => {
163 | 		const { RateLimitService } = await import("./rate-limit-service");
164 | 
165 | 		expect(RateLimitService).toBeDefined();
166 | 		expect(typeof RateLimitService.getInstance).toBe("function");
                                                    ^
error: expect(received).toBe(expected)

Expected: "function"
Received: "undefined"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/mock-redis.test.ts:166:47)
(fail) Redis Services with Mock > should verify RateLimitService class definition [0.78ms]
173 | 
174 | 	test("should verify JobQueueService class definition", async () => {
175 | 		const { JobQueueService } = await import("./job-queue-service");
176 | 
177 | 		expect(JobQueueService).toBeDefined();
178 | 		expect(typeof JobQueueService.getInstance).toBe("function");
                                                   ^
error: expect(received).toBe(expected)

Expected: "function"
Received: "undefined"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/mock-redis.test.ts:178:46)
(fail) Redis Services with Mock > should verify JobQueueService class definition [1.53ms]
Import test completed with expected dependency issues
226 | 			"job-queue-service.ts",
227 | 		];
228 | 
229 | 		for (const file of serviceFiles) {
230 | 			const path = `/root/repo/lib/redis/${file}`;
231 | 			expect(fs.existsSync(path)).toBe(true);
                                     ^
error: expect(received).toBe(expected)

Expected: true
Received: false

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/mock-redis.test.ts:231:32)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/mock-redis.test.ts:216:54)
(fail) Redis Services with Mock > should have comprehensive service structure [0.87ms]
251 | 			"job-queue-service.test.ts",
252 | 		];
253 | 
254 | 		for (const file of testFiles) {
255 | 			const path = `/root/repo/lib/redis/${file}`;
256 | 			expect(fs.existsSync(path)).toBe(true);
                                     ^
error: expect(received).toBe(expected)

Expected: true
Received: false

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/mock-redis.test.ts:256:32)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/mock-redis.test.ts:241:51)
(fail) Redis Services with Mock > should have comprehensive test structure

lib/redis/simple-integration.test.ts:
72 | 			"mock-redis.ts",
73 | 		];
74 | 
75 | 		for (const file of expectedFiles) {
76 | 			const filePath = path.join(redisDir, file);
77 | 			expect(fs.existsSync(filePath)).toBe(true);
                                        ^
error: expect(received).toBe(expected)

Expected: true
Received: false

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/simple-integration.test.ts:77:36)
(fail) Redis/Valkey Core Implementation > should have all required service files [1.83ms]
92 | 			"session-service.test.ts",
93 | 		];
94 | 
95 | 		for (const file of expectedTestFiles) {
96 | 			const filePath = path.join(redisDir, file);
97 | 			expect(fs.existsSync(filePath)).toBe(true);
                                        ^
error: expect(received).toBe(expected)

Expected: true
Received: false

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/simple-integration.test.ts:97:36)
(fail) Redis/Valkey Core Implementation > should have comprehensive test coverage [0.14ms]
103 | 	});
104 | 
105 | 	test("should export correct TypeScript types", () => {
106 | 		// Read the types file and verify it contains expected interfaces
107 | 		const fs = require("fs");
108 | 		const typesContent = fs.readFileSync(
                                ^
error: ENOENT: no such file or directory, open '/root/repo/lib/redis/types.ts'
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/simple-integration.test.ts:108:27)
(fail) Redis/Valkey Core Implementation > should export correct TypeScript types [3.95ms]
134 | 			{ file: "metrics-service.ts", class: "MetricsService" },
135 | 			{ file: "session-service.ts", class: "SessionService" },
136 | 		];
137 | 
138 | 		for (const service of services) {
139 | 			const content = fs.readFileSync(
                            ^
error: ENOENT: no such file or directory, open '/root/repo/lib/redis/pubsub-service.ts'
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/simple-integration.test.ts:139:23)
(fail) Redis/Valkey Core Implementation > should have proper service class structure [0.33ms]
166 | 			"metrics-service.test.ts",
167 | 			"session-service.test.ts",
168 | 		];
169 | 
170 | 		for (const testFile of testFiles) {
171 | 			const content = fs.readFileSync(
                            ^
error: ENOENT: no such file or directory, open '/root/repo/lib/redis/pubsub-service.test.ts'
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/simple-integration.test.ts:171:23)
(fail) Redis/Valkey Core Implementation > should have comprehensive test scenarios [0.19ms]
232 | 				scenarios: ["session", "create", "expiration", "user"],
233 | 			},
234 | 		];
235 | 
236 | 		for (const { file, scenarios } of testScenarios) {
237 | 			const content = fs.readFileSync(`/root/repo/lib/redis/${file}`, "utf8");
                            ^
error: ENOENT: no such file or directory, open '/root/repo/lib/redis/pubsub-service.test.ts'
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/simple-integration.test.ts:237:23)
(fail) Redis/Valkey Core Implementation > should follow TDD approach with comprehensive scenarios [0.14ms]
Redis client 'primary' connected
Redis client 'primary' ready
Redis/Valkey clients initialized successfully

lib/redis/session-service.test.ts:
48 | 			};
49 | 
50 | 			// Create session
51 | 			const sessionId = await sessionService.createSession(sessionData);
52 | 			expect(sessionId).toBeDefined();
53 | 			expect(typeof sessionId).toBe("string");
                                 ^
error: expect(received).toBe(expected)

Expected: "string"
Received: "object"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:53:29)
(fail) SessionService > Basic Session Operations > should create and retrieve a session [42.23ms]
82 | 			const updates = {
83 | 				role: "admin" as const,
84 | 				lastLoginAt: new Date(),
85 | 			};
86 | 
87 | 			const updated = await sessionService.updateSession(sessionId, updates);
                                             ^
TypeError: sessionService.updateSession is not a function. (In 'sessionService.updateSession(sessionId, updates)', 'sessionService.updateSession' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:87:41)
(fail) SessionService > Basic Session Operations > should update session data [31.87ms]
102 | 			const sessionData: SessionData = { userId: "user-789" };
103 | 			const sessionId = await sessionService.createSession(sessionData);
104 | 
105 | 			// Verify session exists
106 | 			const session = await sessionService.getSession(sessionId);
107 | 			expect(session).not.toBeNull();
                             ^
error: expect(received).not.toBeNull()

Received: null

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:107:24)
(fail) SessionService > Basic Session Operations > should delete sessions [2.55ms]
133 | 			// Wait for expiration
134 | 			await new Promise((resolve) => setTimeout(resolve, 2500));
135 | 
136 | 			// Session should be expired
137 | 			const expiredSession = await sessionService.getSession(sessionId);
138 | 			expect(expiredSession).toBeNull();
                                ^
error: expect(received).toBeNull()

Received: {
  ttl: 2,
}

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:138:27)
(fail) SessionService > Session Expiration > should handle session expiration [2507.02ms]
error: Test "should extend session TTL" timed out after 5002ms
(fail) SessionService > Session Expiration > should extend session TTL [5002.14ms]
error: Test "should handle sliding expiration" timed out after 5001ms
(fail) SessionService > Session Expiration > should handle sliding expiration [5002.12ms]
195 | 			};
196 | 
197 | 			const sessionId = await sessionService.createSession(sessionData);
198 | 
199 | 			// Session ID should be cryptographically secure
200 | 			expect(sessionId.length).toBeGreaterThan(20);
                                  ^
error: Expected and actual values must be numbers or bigints
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:200:29)
(fail) SessionService > Session Security > should handle secure session tokens [4.21ms]
209 | 		test("should validate session ownership", async () => {
210 | 			const sessionData: SessionData = { userId: "user-ownership" };
211 | 			const sessionId = await sessionService.createSession(sessionData);
212 | 
213 | 			// Verify session belongs to correct user
214 | 			const isValid = await sessionService.validateSessionForUser(
                                              ^
TypeError: sessionService.validateSessionForUser is not a function. (In 'sessionService.validateSessionForUser(sessionId, "user-ownership")', 'sessionService.validateSessionForUser' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:214:41)
(fail) SessionService > Session Security > should validate session ownership [1.97ms]
232 | 			};
233 | 			const originalSessionId = await sessionService.createSession(sessionData);
234 | 
235 | 			// Rotate session (create new session, invalidate old)
236 | 			const newSessionId =
237 | 				await sessionService.rotateSession(originalSessionId);
                               ^
TypeError: sessionService.rotateSession is not a function. (In 'sessionService.rotateSession(originalSessionId)', 'sessionService.rotateSession' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:237:26)
(fail) SessionService > Session Security > should implement session rotation [0.38ms]
266 | 				device: "mobile",
267 | 				userAgent: "Mozilla/5.0 (iPhone; CPU iPhone OS 14_0 like Mac OS X)",
268 | 			});
269 | 
270 | 			// Get all sessions for user
271 | 			const userSessions = await sessionService.getUserSessions(userId);
                                                   ^
TypeError: sessionService.getUserSessions is not a function. (In 'sessionService.getUserSessions("user-multidevice")', 'sessionService.getUserSessions' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:271:46)
(fail) SessionService > Multi-Device Sessions > should handle multiple sessions per user [0.53ms]
288 | 				});
289 | 				sessionIds.push(sessionId);
290 | 			}
291 | 
292 | 			// Revoke all sessions for user
293 | 			const revokedCount = await sessionService.revokeAllUserSessions(userId);
                                                   ^
TypeError: sessionService.revokeAllUserSessions is not a function. (In 'sessionService.revokeAllUserSessions("user-revoke-all")', 'sessionService.revokeAllUserSessions' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:293:46)
(fail) SessionService > Multi-Device Sessions > should revoke all user sessions [0.38ms]
302 | 
303 | 		test("should limit concurrent sessions per user", async () => {
304 | 			const userId = "user-limit-sessions";
305 | 			const maxSessions = 2;
306 | 
307 | 			await sessionService.setUserSessionLimit(userId, maxSessions);
                              ^
TypeError: sessionService.setUserSessionLimit is not a function. (In 'sessionService.setUserSessionLimit("user-limit-sessions", 2)', 'sessionService.setUserSessionLimit' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:307:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:303:53)
(fail) SessionService > Multi-Device Sessions > should limit concurrent sessions per user [0.12ms]
339 | 		test("should track session activity", async () => {
340 | 			const sessionData: SessionData = { userId: "user-analytics" };
341 | 			const sessionId = await sessionService.createSession(sessionData);
342 | 
343 | 			// Record some activity
344 | 			await sessionService.recordSessionActivity(sessionId, "page_view", {
                              ^
TypeError: sessionService.recordSessionActivity is not a function. (In 'sessionService.recordSessionActivity(sessionId, "page_view", {
        page: "/dashboard"
      })', 'sessionService.recordSessionActivity' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:344:25)
(fail) SessionService > Session Analytics > should track session activity [0.21ms]
371 | 			await new Promise((resolve) => setTimeout(resolve, 200));
372 | 			await sessionService.deleteSession(session2Id);
373 | 
374 | 			const session3Id = await sessionService.createSession({ userId });
375 | 
376 | 			const stats = await sessionService.getUserSessionStats(userId);
                                            ^
TypeError: sessionService.getUserSessionStats is not a function. (In 'sessionService.getUserSessionStats("user-stats")', 'sessionService.getUserSessionStats' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:376:39)
(fail) SessionService > Session Analytics > should provide session statistics [345.79ms]
386 | 			};
387 | 			const sessionId = await sessionService.createSession(sessionData);
388 | 
389 | 			// Simulate suspicious activity
390 | 			for (let i = 0; i < 10; i++) {
391 | 				await sessionService.recordSessionActivity(
                               ^
TypeError: sessionService.recordSessionActivity is not a function. (In 'sessionService.recordSessionActivity(sessionId, "failed_login_attempt", {
          attempt: i + 1,
          timestamp: Date.now()
        })', 'sessionService.recordSessionActivity' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:391:26)
(fail) SessionService > Session Analytics > should detect suspicious session activity [4.12ms]
419 | 
420 | 			// Wait for expiration
421 | 			await new Promise((resolve) => setTimeout(resolve, 1500));
422 | 
423 | 			// Run cleanup
424 | 			const cleanedCount = await sessionService.cleanupExpiredSessions();
                                                   ^
TypeError: sessionService.cleanupExpiredSessions is not a function. (In 'sessionService.cleanupExpiredSessions()', 'sessionService.cleanupExpiredSessions' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:424:46)
(fail) SessionService > Session Cleanup and Maintenance > should cleanup expired sessions [1507.40ms]
429 | 			// Create some sessions
430 | 			for (let i = 0; i < 3; i++) {
431 | 				await sessionService.createSession({ userId: `user-health-${i}` });
432 | 			}
433 | 
434 | 			const healthMetrics = await sessionService.getHealthMetrics();
                                                    ^
TypeError: sessionService.getHealthMetrics is not a function. (In 'sessionService.getHealthMetrics()', 'sessionService.getHealthMetrics' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:434:47)
(fail) SessionService > Session Cleanup and Maintenance > should get session health metrics [2.93ms]
446 | 			};
447 | 
448 | 			const sessionId = await sessionService.createSession(sessionData);
449 | 
450 | 			// Optimize session storage (compress, remove unnecessary data, etc.)
451 | 			const optimized = await sessionService.optimizeSessionStorage(sessionId);
                                                ^
TypeError: sessionService.optimizeSessionStorage is not a function. (In 'sessionService.optimizeSessionStorage(sessionId)', 'sessionService.optimizeSessionStorage' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:451:43)
(fail) SessionService > Session Cleanup and Maintenance > should handle session storage optimization [0.84ms]
463 | 			const invalidSessionId = "invalid-session-id";
464 | 
465 | 			const session = await sessionService.getSession(invalidSessionId);
466 | 			expect(session).toBeNull();
467 | 
468 | 			const updated = await sessionService.updateSession(invalidSessionId, {
                                              ^
TypeError: sessionService.updateSession is not a function. (In 'sessionService.updateSession("invalid-session-id", {
        test: "data"
      })', 'sessionService.updateSession' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:468:41)
(fail) SessionService > Error Handling > should handle invalid session IDs [2.78ms]
480 | 				userId: "user-malformed",
481 | 			});
482 | 
483 | 			// Session should be retrievable
484 | 			const session = await sessionService.getSession(sessionId);
485 | 			expect(session).not.toBeNull();
                             ^
error: expect(received).not.toBeNull()

Received: null

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:485:24)
(fail) SessionService > Error Handling > should handle malformed session data [1.04ms]
488 | 		test("should handle connection failures gracefully", async () => {
489 | 			// This would test Redis connection failures - implementation specific
490 | 			const sessionData: SessionData = { userId: "user-connection-test" };
491 | 
492 | 			const sessionId = await sessionService.createSession(sessionData);
493 | 			expect(typeof sessionId).toBe("string");
                                  ^
error: expect(received).toBe(expected)

Expected: "string"
Received: "object"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:493:29)
(fail) SessionService > Error Handling > should handle connection failures gracefully [0.57ms]
506 | 			};
507 | 
508 | 			const sessionId = await sessionService.createSession(oauthSessionData);
509 | 			const session = await sessionService.getSession<SessionData>(sessionId);
510 | 
511 | 			expect(session!.provider).toBe("google");
                ^
TypeError: null is not an object (evaluating 'session.provider')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:511:11)
(fail) SessionService > Integration with Authentication > should integrate with OAuth sessions [1.17ms]
541 | 			};
542 | 
543 | 			const sessionId = await sessionService.createSession(ssoSessionData);
544 | 
545 | 			// Verify SSO session
546 | 			const isSSOValid = await sessionService.validateSSOSession(
                                                 ^
TypeError: sessionService.validateSSOSession is not a function. (In 'sessionService.validateSSOSession(sessionId, "saml-session-123")', 'sessionService.validateSSOSession' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/session-service.test.ts:546:44)
(fail) SessionService > Integration with Authentication > should handle SSO session federation [0.28ms]
Shutting down Redis clients...
Redis client 'primary' shut down successfully
Redis client 'primary' connection closed
Redis client 'primary' connected
Redis client 'primary' ready
Redis/Valkey clients initialized successfully

lib/redis/job-queue-service.test.ts:
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Basic Job Operations > should add and process jobs [1.74ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Basic Job Operations > should add and process jobs
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Basic Job Operations > should handle job with options

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Basic Job Operations > should handle job with options
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Basic Job Operations > should handle job priorities [0.03ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > should handle job priorities
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Job Failure and Retry > should retry failed jobs

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Job Failure and Retry > should retry failed jobs
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Job Failure and Retry > should move job to failed queue after max attempts

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Job Failure and Retry > should move job to failed queue after max attempts
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Job Failure and Retry > should implement exponential backoff for retries

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > should implement exponential backoff for retries
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Queue Management > should get queue statistics

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Queue Management > should get queue statistics
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Queue Management > should pause and resume queues [0.02ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Queue Management > should pause and resume queues
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Queue Management > should clean up old jobs

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > should clean up old jobs
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Job Scheduling > should schedule jobs for future execution

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Job Scheduling > should schedule jobs for future execution
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Job Scheduling > should support cron-like recurring jobs [0.01ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > should support cron-like recurring jobs
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Job Progress Tracking > should track job progress [0.13ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Job Progress Tracking > should track job progress
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Job Progress Tracking > should provide job history and logs

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > should provide job history and logs
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Worker Management > should register and manage workers [0.03ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Worker Management > should register and manage workers
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Worker Management > should handle worker failures and cleanup [0.02ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > should handle worker failures and cleanup
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Error Handling > should handle invalid job data [0.03ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Error Handling > should handle invalid job data
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Error Handling > should handle invalid job options [0.02ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Error Handling > should handle invalid job options
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Error Handling > should handle queue operation failures gracefully [0.02ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > should handle queue operation failures gracefully
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Integration Features > should integrate with Inngest for workflow orchestration [0.02ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Integration Features > should integrate with Inngest for workflow orchestration
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Integration Features > should support batch job processing [0.08ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > Integration Features > should support batch job processing
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
                                         ^
TypeError: JobQueueService.getInstance is not a function. (In 'JobQueueService.getInstance()', 'JobQueueService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:31:37)
(fail) JobQueueService > Integration Features > should support distributed job processing across multiple instances [0.34ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		jobQueueService = JobQueueService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await jobQueueService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'jobQueueService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/job-queue-service.test.ts:34:12)
-------------------------------

(fail) JobQueueService > should support distributed job processing across multiple instances
Shutting down Redis clients...
Redis client 'primary' shut down successfully
Redis client 'primary' connection closed
Redis client 'primary' connected
Redis client 'primary' ready
Redis/Valkey clients initialized successfully

lib/redis/lock-service.test.ts:
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Basic Lock Operations > should acquire and release a distributed lock [2.04ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Basic Lock Operations > should acquire and release a distributed lock
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Basic Lock Operations > should prevent duplicate lock acquisition [0.03ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Basic Lock Operations > should prevent duplicate lock acquisition
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Basic Lock Operations > should handle lock expiration [0.05ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > should handle lock expiration
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Lock Retry Mechanisms > should retry lock acquisition with specified options [0.10ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Lock Retry Mechanisms > should retry lock acquisition with specified options
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Lock Retry Mechanisms > should fail after max retries exceeded

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > should fail after max retries exceeded
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Lock Renewal > should renew lock before expiration

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Lock Renewal > should renew lock before expiration
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Lock Renewal > should fail to renew expired lock [0.02ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Lock Renewal > should fail to renew expired lock
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Lock Renewal > should fail to renew lock with wrong value [0.06ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > should fail to renew lock with wrong value
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Deadlock Prevention > should detect potential deadlocks

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Deadlock Prevention > should detect potential deadlocks
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Deadlock Prevention > should force release locks on deadlock detection [0.07ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > should force release locks on deadlock detection
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Lock Monitoring > should list all active locks

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Lock Monitoring > should list all active locks
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Lock Monitoring > should provide lock statistics [0.11ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Lock Monitoring > should provide lock statistics
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Lock Monitoring > should track lock hold times [0.02ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > should track lock hold times
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Multi-Resource Locks > should acquire multiple locks atomically

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Multi-Resource Locks > should acquire multiple locks atomically
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Multi-Resource Locks > should fail atomic acquisition if any lock is unavailable [0.01ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > should fail atomic acquisition if any lock is unavailable
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Error Handling > should handle invalid lock keys [0.03ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Error Handling > should handle invalid lock keys
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Error Handling > should handle invalid TTL values [0.01ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > Error Handling > should handle invalid TTL values
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
                                 ^
TypeError: LockService.getInstance is not a function. (In 'LockService.getInstance()', 'LockService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:31:29)
(fail) LockService > Error Handling > should handle connection failures gracefully [0.01ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		lockService = LockService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await lockService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'lockService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/lock-service.test.ts:34:12)
-------------------------------

(fail) LockService > should handle connection failures gracefully
Shutting down Redis clients...
Redis client 'primary' shut down successfully

lib/redis/metrics-service.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'MetricsService' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/redis/metrics-service.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------

Redis client 'primary' connection closed
Redis client 'primary' connected
Redis client 'primary' ready
Redis/Valkey clients initialized successfully

lib/redis/rate-limit-service.test.ts:
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Fixed Window Rate Limiting > should allow requests within the limit [2.99ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Fixed Window Rate Limiting > should allow requests within the limit
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Fixed Window Rate Limiting > should block requests exceeding the limit

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Fixed Window Rate Limiting > should block requests exceeding the limit
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Fixed Window Rate Limiting > should reset window after expiration

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should reset window after expiration
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Sliding Window Rate Limiting > should implement sliding window correctly

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Sliding Window Rate Limiting > should implement sliding window correctly
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Sliding Window Rate Limiting > should allow requests as time slides forward

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should allow requests as time slides forward
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Token Bucket Rate Limiting > should implement token bucket algorithm [0.12ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Token Bucket Rate Limiting > should implement token bucket algorithm
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Token Bucket Rate Limiting > should refill tokens over time [0.19ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Token Bucket Rate Limiting > should refill tokens over time
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Token Bucket Rate Limiting > should handle burst consumption

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should handle burst consumption
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Multi-tier Rate Limiting > should enforce multiple rate limit tiers [0.03ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Multi-tier Rate Limiting > should enforce multiple rate limit tiers
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Multi-tier Rate Limiting > should apply different limits for different user tiers [0.06ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should apply different limits for different user tiers
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Adaptive Rate Limiting > should adjust limits based on system load [0.12ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Adaptive Rate Limiting > should adjust limits based on system load
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Adaptive Rate Limiting > should relax limits during low load

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should relax limits during low load
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Cost-based Rate Limiting > should implement cost-aware rate limiting

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Cost-based Rate Limiting > should implement cost-aware rate limiting
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Cost-based Rate Limiting > should handle different cost tiers for LLM providers [0.03ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should handle different cost tiers for LLM providers
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Rate Limit Statistics > should track rate limiting statistics

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Rate Limit Statistics > should track rate limiting statistics
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Rate Limit Statistics > should provide per-key statistics [0.04ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should provide per-key statistics
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Error Handling > should handle invalid rate limit options

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Error Handling > should handle invalid rate limit options
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Error Handling > should handle empty or invalid keys [0.05ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Error Handling > should handle empty or invalid keys
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Error Handling > should handle Redis connection failures gracefully [0.04ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should handle Redis connection failures gracefully
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Integration with Other Services > should integrate with API gateway rate limiting [0.08ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > Integration with Other Services > should integrate with API gateway rate limiting
26 | 		redisManager = RedisClientManager.getInstance(testRedisConfig);
27 | 		await redisManager.initialize();
28 | 	});
29 | 
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
                                           ^
TypeError: RateLimitService.getInstance is not a function. (In 'RateLimitService.getInstance()', 'RateLimitService.getInstance' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:31:39)
(fail) RateLimitService > Integration with Other Services > should support WebSocket connection rate limiting [0.18ms]

# Unhandled error between tests
-------------------------------
30 | 	beforeEach(() => {
31 | 		rateLimitService = RateLimitService.getInstance();
32 | 	});
33 | 
34 | 	afterEach(async () => {
35 | 		await rateLimitService.cleanup();
             ^
TypeError: undefined is not an object (evaluating 'rateLimitService.cleanup')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:35:9)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/rate-limit-service.test.ts:34:12)
-------------------------------

(fail) RateLimitService > should support WebSocket connection rate limiting
Shutting down Redis clients...
Redis client 'primary' shut down successfully

lib/redis/integration.test.ts:
SyntaxError: export 'MockRedisService' not found in './mock-redis'
      at link (unknown:1:11)
      at linkAndEvaluateModule (unknown:1:11)
      at requestImportModule (unknown:2:1)
      at processTicksAndRejections (unknown:7:39)
(fail) Redis/Valkey Integration > should export all Redis services [3.21ms]
Redis client 'primary' connection closed
SyntaxError: export 'MockRedisService' not found in './mock-redis'
      at link (unknown:1:11)
      at linkAndEvaluateModule (unknown:1:11)
      at requestImportModule (unknown:2:1)
      at processTicksAndRejections (unknown:7:39)
(fail) Redis/Valkey Integration > should provide service instances via singleton pattern [0.22ms]
SyntaxError: export 'MockRedisService' not found in './mock-redis'
      at link (unknown:1:11)
      at linkAndEvaluateModule (unknown:1:11)
      at requestImportModule (unknown:2:1)
      at processTicksAndRejections (unknown:7:39)
(fail) Redis/Valkey Integration > should expose service configuration [0.07ms]
SyntaxError: export 'MockRedisService' not found in './mock-redis'
      at link (unknown:1:11)
      at linkAndEvaluateModule (unknown:1:11)
      at requestImportModule (unknown:2:1)
      at processTicksAndRejections (unknown:7:39)
(fail) Redis/Valkey Integration > should handle service cleanup gracefully
155 | 	});
156 | 
157 | 	test("should provide mock Redis fallback capability", async () => {
158 | 		const { MockRedisService, MockRedisCache } = await import("./mock-redis");
159 | 
160 | 		expect(MockRedisService).toBeDefined();
                                 ^
error: expect(received).toBeDefined()

Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/integration.test.ts:160:28)
(fail) Redis/Valkey Integration > should provide mock Redis fallback capability
182 | 			testRedisConfig,
183 | 			redisFeatures,
184 | 		} = await import("./config");
185 | 
186 | 		expect(getRedisConfig).toBeDefined();
187 | 		expect(getRedisServiceConfig).toBeDefined();
                                      ^
error: expect(received).toBeDefined()

Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/integration.test.ts:187:33)
(fail) Redis/Valkey Integration > should provide Redis configuration utilities [0.46ms]
Redis client 'primary' connected
Redis client 'primary' ready
Redis/Valkey clients initialized successfully

lib/redis/pubsub-service.test.ts:
49 | 			// Subscribe to channel
50 | 			const subscription = await pubsubService.subscribe(channel, (message) => {
51 | 				messages.push(message);
52 | 			});
53 | 
54 | 			expect(subscription.id).toBeDefined();
               ^
TypeError: undefined is not an object (evaluating 'subscription.id')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:54:11)
(fail) PubSubService > Basic Pub/Sub Operations > should publish and receive messages on a channel [0.80ms]
76 | 			const messages: PubSubMessage[] = [];
77 | 			const pattern = "test:pattern:*";
78 | 			const channels = ["test:pattern:one", "test:pattern:two", "test:other"];
79 | 
80 | 			// Subscribe to pattern
81 | 			const subscription = await pubsubService.subscribePattern(
                                                 ^
TypeError: pubsubService.subscribePattern is not a function. (In 'pubsubService.subscribePattern("test:pattern:*", (message) => {
        messages.push(message);
      })', 'pubsubService.subscribePattern' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:81:45)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:75:47)
(fail) PubSubService > Basic Pub/Sub Operations > should handle pattern subscriptions [0.10ms]
118 | 			// Publish first message
119 | 			await pubsubService.publish(channel, { data: "first" });
120 | 			await new Promise((resolve) => setTimeout(resolve, 50));
121 | 
122 | 			// Unsubscribe
123 | 			const unsubscribed = await pubsubService.unsubscribe(subscription.id);
                                                              ^
TypeError: undefined is not an object (evaluating 'subscription.id')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:123:57)
(fail) PubSubService > Basic Pub/Sub Operations > should unsubscribe from channels [155.63ms]
153 | 			// Publish message
154 | 			await pubsubService.publish(channel, testData);
155 | 			await new Promise((resolve) => setTimeout(resolve, 100));
156 | 
157 | 			// Both subscribers should receive the message
158 | 			expect(messages1).toHaveLength(1);
                           ^
error: expect(received).toHaveLength(expected)

Expected length: 1
Received length: 0

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:158:22)
(fail) PubSubService > Multiple Subscribers > should deliver messages to all subscribers on the same channel [248.23ms]
174 | 			);
175 | 
176 | 			await new Promise((resolve) => setTimeout(resolve, 100));
177 | 
178 | 			// Unsubscribe only first subscriber
179 | 			await pubsubService.unsubscribe(sub1.id);
                                         ^
TypeError: undefined is not an object (evaluating 'sub1.id')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:179:36)
(fail) PubSubService > Multiple Subscribers > should handle selective unsubscription [102.54ms]
206 | 				await pubsubService.publish("test:error", { data: "test" });
207 | 				await new Promise((resolve) => setTimeout(resolve, 100));
208 | 			}).not.toThrow();
209 | 
210 | 			// Subscription should still be active
211 | 			expect(subscription.isActive).toBe(true);
                ^
TypeError: undefined is not an object (evaluating 'subscription.isActive')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:211:11)
(fail) PubSubService > Error Handling > should handle subscription errors gracefully [205.04ms]
212 | 		});
213 | 
214 | 		test("should handle invalid channel names", async () => {
215 | 			expect(async () => {
216 | 				await pubsubService.subscribe("", () => {});
217 | 			}).rejects.toThrow("Channel name cannot be empty");
                    ^
error: 

Expected promise
Received: [AsyncFunction]

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:217:15)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:214:47)
(fail) PubSubService > Error Handling > should handle invalid channel names [7.96ms]
224 | 		test("should handle connection failures", async () => {
225 | 			// This would test Redis connection failures - implementation specific
226 | 			const published = await pubsubService.publish("test:unreachable", {
227 | 				data: "test",
228 | 			});
229 | 			expect(typeof published).toBe("boolean");
                                  ^
error: expect(received).toBe(expected)

Expected: "boolean"
Received: "number"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:229:29)
(fail) PubSubService > Error Handling > should handle connection failures [0.63ms]
254 | 
255 | 			await pubsubService.publish("test:retry", { data: "test" });
256 | 			await new Promise((resolve) => setTimeout(resolve, 300));
257 | 
258 | 			// Should have retried 3 times
259 | 			expect(attempts).toBe(3);
                          ^
error: expect(received).toBe(expected)

Expected: 3
Received: 0

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:259:21)
(fail) PubSubService > Message Delivery Options > should support retry on error when configured [406.30ms]
274 | 				await pubsubService.publish(channel, { order: i });
275 | 			}
276 | 
277 | 			await new Promise((resolve) => setTimeout(resolve, 200));
278 | 
279 | 			expect(receivedMessages).toEqual([1, 2, 3, 4, 5]);
                                  ^
error: expect(received).toEqual(expected)

+ []
- [
-   1,
-   2,
-   3,
-   4,
-   5
- ]

- Expected  - 7
+ Received  + 1

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:279:29)
(fail) PubSubService > Message Delivery Options > should respect message ordering [317.99ms]
286 | 			const channel2 = "test:list:2";
287 | 			const pattern = "test:list:*";
288 | 
289 | 			await pubsubService.subscribe(channel1, () => {});
290 | 			await pubsubService.subscribe(channel2, () => {});
291 | 			await pubsubService.subscribePattern(pattern, () => {});
                             ^
TypeError: pubsubService.subscribePattern is not a function. (In 'pubsubService.subscribePattern("test:list:*", () => {})', 'pubsubService.subscribePattern' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:291:24)
(fail) PubSubService > Subscription Management > should list active subscriptions [0.26ms]
299 | 		});
300 | 
301 | 		test("should get subscription statistics", async () => {
302 | 			await pubsubService.subscribe("test:stats:1", () => {});
303 | 			await pubsubService.subscribe("test:stats:2", () => {});
304 | 			await pubsubService.subscribePattern("test:stats:*", () => {});
                             ^
TypeError: pubsubService.subscribePattern is not a function. (In 'pubsubService.subscribePattern("test:stats:*", () => {})', 'pubsubService.subscribePattern' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:304:24)
(fail) PubSubService > Subscription Management > should get subscription statistics [0.10ms]
313 | 
314 | 		test("should handle cleanup on service shutdown", async () => {
315 | 			await pubsubService.subscribe("test:cleanup:1", () => {});
316 | 			await pubsubService.subscribe("test:cleanup:2", () => {});
317 | 
318 | 			expect(pubsubService.getActiveSubscriptions()).toHaveLength(2);
                              ^
TypeError: pubsubService.getActiveSubscriptions is not a function. (In 'pubsubService.getActiveSubscriptions()', 'pubsubService.getActiveSubscriptions' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:318:25)
(fail) PubSubService > Subscription Management > should handle cleanup on service shutdown [0.08ms]
345 | 				});
346 | 			}
347 | 
348 | 			await new Promise((resolve) => setTimeout(resolve, 100));
349 | 
350 | 			expect(events).toHaveLength(3);
                        ^
error: expect(received).toHaveLength(expected)

Expected length: 3
Received length: 0

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:350:19)
(fail) PubSubService > Real-time Features > should support WebSocket-style events [219.03ms]
371 | 				},
372 | 			});
373 | 
374 | 			await new Promise((resolve) => setTimeout(resolve, 100));
375 | 
376 | 			expect(dashboardUpdates).toHaveLength(1);
                                  ^
error: expect(received).toHaveLength(expected)

Expected length: 1
Received length: 0

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/redis/pubsub-service.test.ts:376:29)
(fail) PubSubService > Real-time Features > should support dashboard real-time updates [235.13ms]
Shutting down Redis clients...
Redis client 'primary' shut down successfully
Redis client 'primary' connection closed

lib/auth/index.test.ts:

# Unhandled error between tests
-------------------------------
2 | import path from "node:path";
3 | import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
4 | import { Auth, type AuthInfo } from "./index";
5 | 
6 | // Mock fs/promises module
7 | vi.mock("node:fs/promises", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("node:fs/promises", () => ({
  default: {
    mkdir: vi.fn(),
    readFile: vi.fn(),
    writeFile: vi.fn(),
    chmod: vi.fn()
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/lib/auth/index.test.ts:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


lib/auth/openai-codex.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'revokeCodexToken' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/auth/openai-codex.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


lib/auth/anthropic.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'generateAuthUrl' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/auth/anthropic.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


lib/wasm/integration.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'createVectorSearchInstance' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/wasm/modules/vector-search-loader.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


lib/workflow/workflow.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'snapshotManager' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/time-travel/execution-snapshots.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


lib/neon/branching.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'createNeonTestUtils' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/neon/branching.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


lib/agent-memory/repository.test.ts:

# Unhandled error between tests
-------------------------------
 7 | import { db } from "../../db/config";
 8 | import { MemoryRepository } from "./repository";
 9 | import type { CreateMemoryInput, MemoryEntry } from "./types";
10 | 
11 | // Mock database
12 | vi.mock("@/db/config", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/db/config", () => ({
  db: {
    insert: vi.fn(),
    update: vi.fn(),
    select: vi.fn(),
    delete: vi.fn()
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/lib/agent-memory/repository.test.ts:12:4
      at loadAndEvaluateModule (2:1)
-------------------------------


lib/letta/multi-agent-system.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'OrchestratorAgent' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/letta/agents/orchestrator.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


lib/letta/client.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'MessageSchema' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/letta/client.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


src/schemas/complex-examples.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'ProductSchema' not found in module '/Users/neo/Developer/experiments/vibex-app/src/schemas/complex-examples.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


src/schemas/api-routes.test.ts:
340 | 				});
341 | 
342 | 				it("should require owner and repo", () => {
343 | 					expect(() =>
344 | 						GitHubBranchesRequestSchema.parse({ owner: "test" }),
345 | 					).toThrow(/required/);
             ^
error: expect(received).toThrow(expected)

Expected pattern: /required/
Received message: "[\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"repo\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:345:8)
(fail) API Routes Schemas > GitHub OAuth Schemas > Request schemas > GitHubBranchesRequestSchema > should require owner and repo [7.29ms]
349 | 				});
350 | 
351 | 				it("should enforce non-empty owner and repo", () => {
352 | 					expect(() =>
353 | 						GitHubBranchesRequestSchema.parse({ owner: "", repo: "test" }),
354 | 					).toThrow(/required/);
             ^
error: expect(received).toThrow(expected)

Expected pattern: /required/

Received function did not throw
Received value: {
  owner: "",
  repo: "test",
  per_page: 30,
  page: 1,
}

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:354:8)
(fail) API Routes Schemas > GitHub OAuth Schemas > Request schemas > GitHubBranchesRequestSchema > should enforce non-empty owner and repo [0.44ms]
403 | 				expect(() => TaskSchema.parse({ ...baseTask, title: "" })).toThrow(
404 | 					/required/,
405 | 				);
406 | 				expect(() =>
407 | 					TaskSchema.parse({ ...baseTask, title: "a".repeat(201) }),
408 | 				).toThrow(/less than 200/);
            ^
error: expect(received).toThrow(expected)

Expected pattern: /less than 200/
Received message: "[\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"created_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  },\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"updated_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:408:7)
(fail) API Routes Schemas > Task Management Schemas > TaskSchema > should enforce title constraints [0.31ms]
421 | 					"in_progress",
422 | 					"completed",
423 | 					"cancelled",
424 | 				];
425 | 				validStatuses.forEach((status) => {
426 | 					expect(() => TaskSchema.parse({ ...baseTask, status })).not.toThrow();
                                                                       ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"code\": \"invalid_value\",\n    \"values\": [\n      \"todo\",\n      \"in_progress\",\n      \"done\"\n    ],\n    \"path\": [\n      \"status\"\n    ],\n    \"message\": \"Invalid option: expected one of \\\"todo\\\"|\\\"in_progress\\\"|\\\"done\\\"\"\n  },\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"created_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  },\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"updated_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:426:66)
      at forEach (1:11)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:425:19)
(fail) API Routes Schemas > Task Management Schemas > TaskSchema > should validate enum values [0.47ms]
445 | 					assignee: "user123",
446 | 					due_date: "2023-12-31T23:59:59Z",
447 | 					metadata: { source: "web" },
448 | 				};
449 | 
450 | 				expect(() => CreateTaskSchema.parse(validCreateTask)).not.toThrow();
                                                                    ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"due_date\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:450:63)
(fail) API Routes Schemas > Task Management Schemas > CreateTaskSchema > should validate task creation [0.39ms]
464 | 					title: "Updated Task",
465 | 					status: "completed" as const,
466 | 					priority: "low" as const,
467 | 				};
468 | 
469 | 				expect(() => UpdateTaskSchema.parse(validUpdate)).not.toThrow();
                                                                ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"code\": \"invalid_value\",\n    \"values\": [\n      \"todo\",\n      \"in_progress\",\n      \"done\"\n    ],\n    \"path\": [\n      \"status\"\n    ],\n    \"message\": \"Invalid option: expected one of \\\"todo\\\"|\\\"in_progress\\\"|\\\"done\\\"\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:469:59)
(fail) API Routes Schemas > Task Management Schemas > UpdateTaskSchema > should validate task updates [1.12ms]
489 | 					search: "bug fix",
490 | 					page: 1,
491 | 					limit: 20,
492 | 				};
493 | 
494 | 				expect(() => TasksRequestSchema.parse(validRequest)).not.toThrow();
                                                                   ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"code\": \"invalid_value\",\n    \"values\": [\n      \"todo\",\n      \"in_progress\",\n      \"done\"\n    ],\n    \"path\": [\n      \"status\"\n    ],\n    \"message\": \"Invalid option: expected one of \\\"todo\\\"|\\\"in_progress\\\"|\\\"done\\\"\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:494:62)
(fail) API Routes Schemas > Task Management Schemas > TasksRequestSchema > should validate tasks request [0.82ms]
513 | 					variables: { API_KEY: "prod-key" },
514 | 					created_at: "2023-01-01T00:00:00Z",
515 | 					updated_at: "2023-01-01T00:00:00Z",
516 | 				};
517 | 
518 | 				expect(() => EnvironmentSchema.parse(validEnvironment)).not.toThrow();
                                                                      ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"created_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  },\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"updated_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:518:65)
(fail) API Routes Schemas > Environment Management Schemas > EnvironmentSchema > should validate complete environment [1.25ms]
 8 |         throw new core.$ZodAsyncError();
 9 |     }
10 |     if (result.issues.length) {
11 |         const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));
12 |         util.captureStackTrace(e, _params?.callee);
13 |         throw e;
                   ^
ZodError: [
  {
    "expected": "date",
    "code": "invalid_type",
    "path": [
      "created_at"
    ],
    "message": "Invalid input: expected date, received string"
  },
  {
    "expected": "date",
    "code": "invalid_type",
    "path": [
      "updated_at"
    ],
    "message": "Invalid input: expected date, received string"
  }
]
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/zod/v4/core/parse.js:13:15)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:529:38)
(fail) API Routes Schemas > Environment Management Schemas > EnvironmentSchema > should apply default values [0.41ms]
542 | 
543 | 				const validTypes = ["development", "staging", "production", "testing"];
544 | 				validTypes.forEach((type) => {
545 | 					expect(() =>
546 | 						EnvironmentSchema.parse({ ...baseEnv, type }),
547 | 					).not.toThrow();
                 ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"created_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  },\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"updated_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:547:12)
      at forEach (1:11)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:544:16)
(fail) API Routes Schemas > Environment Management Schemas > EnvironmentSchema > should validate environment types [0.34ms]
592 | 			});
593 | 
594 | 			it("should apply default data", () => {
595 | 				const minimalEvent = { name: "test.event" };
596 | 				const result = InngestEventSchema.parse(minimalEvent);
597 | 				expect(result.data).toEqual({});
                              ^
error: expect(received).toEqual(expected)

Expected: [32m{}[0m
Received: [31mundefined[0m

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:597:25)
(fail) API Routes Schemas > Inngest Schemas > InngestEventSchema > should apply default data [0.12ms]
615 | 							period: "1m",
616 | 						},
617 | 					},
618 | 				};
619 | 
620 | 				expect(() => InngestFunctionSchema.parse(validFunction)).not.toThrow();
                                                                       ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"code\": \"invalid_value\",\n    \"values\": [\n      \"active\",\n      \"paused\",\n      \"disabled\"\n    ],\n    \"path\": [\n      \"status\"\n    ],\n    \"message\": \"Invalid option: expected one of \\\"active\\\"|\\\"paused\\\"|\\\"disabled\\\"\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:620:66)
(fail) API Routes Schemas > Inngest Schemas > InngestFunctionSchema > should validate Inngest function [0.43ms]
 8 |         throw new core.$ZodAsyncError();
 9 |     }
10 |     if (result.issues.length) {
11 |         const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));
12 |         util.captureStackTrace(e, _params?.callee);
13 |         throw e;
                   ^
ZodError: [
  {
    "code": "invalid_value",
    "values": [
      "active",
      "paused",
      "disabled"
    ],
    "path": [
      "status"
    ],
    "message": "Invalid option: expected one of \"active\"|\"paused\"|\"disabled\""
  }
]
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/zod/v4/core/parse.js:13:15)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:630:42)
(fail) API Routes Schemas > Inngest Schemas > InngestFunctionSchema > should apply default config values [0.15ms]
644 | 					source: "api",
645 | 					version: "1.0",
646 | 					signature: "sha256=abc123",
647 | 				};
648 | 
649 | 				expect(() => WebhookPayloadSchema.parse(validPayload)).not.toThrow();
                                                                     ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"timestamp\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:649:64)
(fail) API Routes Schemas > Webhook Schemas > WebhookPayloadSchema > should validate webhook payload [0.25ms]
648 | 
649 | 				expect(() => WebhookPayloadSchema.parse(validPayload)).not.toThrow();
650 | 			});
651 | 
652 | 			it("should require event and timestamp", () => {
653 | 				expect(() => WebhookPayloadSchema.parse({ event: "" })).toThrow(
                                                                  ^
error: expect(received).toThrow(expected)

Expected pattern: /required/
Received message: "[\n  {\n    \"origin\": \"string\",\n    \"code\": \"too_small\",\n    \"minimum\": 1,\n    \"inclusive\": true,\n    \"path\": [\n      \"event\"\n    ],\n    \"message\": \"Too small: expected string to have >=1 characters\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:653:61)
(fail) API Routes Schemas > Webhook Schemas > WebhookPayloadSchema > should require event and timestamp [0.22ms]
695 | 					file: validFile,
696 | 					category: "avatar" as const,
697 | 					description: "Profile picture",
698 | 				};
699 | 
700 | 				expect(() => FileUploadRequestSchema.parse(validRequest)).not.toThrow();
                                                                        ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"filename\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  },\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"content_type\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  },\n  {\n    \"expected\": \"number\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"size\"\n    ],\n    \"message\": \"Invalid input: expected number, received undefined\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:700:67)
(fail) API Routes Schemas > File Upload Schemas > FileUploadRequestSchema > should validate file upload request [4.51ms]
709 | 					},
710 | 				);
711 | 
712 | 				expect(() =>
713 | 					FileUploadRequestSchema.parse({ file: largeFile }),
714 | 				).toThrow(/10MB/);
            ^
error: expect(received).toThrow(expected)

Expected pattern: /10MB/
Received message: "[\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"filename\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  },\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"content_type\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  },\n  {\n    \"expected\": \"number\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"size\"\n    ],\n    \"message\": \"Invalid input: expected number, received undefined\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:714:7)
(fail) API Routes Schemas > File Upload Schemas > FileUploadRequestSchema > should reject files that are too large [3.89ms]
719 | 					type: "application/exe",
720 | 				});
721 | 
722 | 				expect(() =>
723 | 					FileUploadRequestSchema.parse({ file: unsupportedFile }),
724 | 				).toThrow(/not supported/);
            ^
error: expect(received).toThrow(expected)

Expected pattern: /not supported/
Received message: "[\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"filename\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  },\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"content_type\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  },\n  {\n    \"expected\": \"number\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"size\"\n    ],\n    \"message\": \"Invalid input: expected number, received undefined\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:724:7)
(fail) API Routes Schemas > File Upload Schemas > FileUploadRequestSchema > should reject unsupported file types [0.24ms]
 8 |         throw new core.$ZodAsyncError();
 9 |     }
10 |     if (result.issues.length) {
11 |         const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));
12 |         util.captureStackTrace(e, _params?.callee);
13 |         throw e;
                   ^
ZodError: [
  {
    "expected": "string",
    "code": "invalid_type",
    "path": [
      "filename"
    ],
    "message": "Invalid input: expected string, received undefined"
  },
  {
    "expected": "string",
    "code": "invalid_type",
    "path": [
      "content_type"
    ],
    "message": "Invalid input: expected string, received undefined"
  },
  {
    "expected": "number",
    "code": "invalid_type",
    "path": [
      "size"
    ],
    "message": "Invalid input: expected number, received undefined"
  }
]
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/zod/v4/core/parse.js:13:15)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:731:44)
(fail) API Routes Schemas > File Upload Schemas > FileUploadRequestSchema > should apply default category [0.32ms]
745 | 					uploaded_at: "2023-01-01T00:00:00Z",
746 | 				};
747 | 
748 | 				expect(() =>
749 | 					FileUploadResponseSchema.parse(validResponse),
750 | 				).not.toThrow();
                ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"upload_url\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  },\n  {\n    \"expected\": \"string\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"file_id\"\n    ],\n    \"message\": \"Invalid input: expected string, received undefined\"\n  },\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"expires_at\"\n    ],\n    \"message\": \"Invalid input: expected date, received undefined\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:750:11)
(fail) API Routes Schemas > File Upload Schemas > FileUploadResponseSchema > should validate file upload response [5.11ms]
773 | 					field: "email",
774 | 					message: "Invalid email format",
775 | 					code: "invalid_email",
776 | 				};
777 | 
778 | 				expect(() => ValidationErrorSchema.parse(validError)).not.toThrow();
                                                                    ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"code\": \"invalid_value\",\n    \"values\": [\n      false\n    ],\n    \"path\": [\n      \"success\"\n    ],\n    \"message\": \"Invalid input: expected false\"\n  },\n  {\n    \"expected\": \"object\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"error\"\n    ],\n    \"message\": \"Invalid input: expected object, received undefined\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:778:63)
(fail) API Routes Schemas > Error Response Schemas > ValidationErrorSchema > should validate validation error [0.28ms]
784 | 					message: "Invalid email format",
785 | 				};
786 | 
787 | 				expect(() =>
788 | 					ValidationErrorSchema.parse(errorWithoutCode),
789 | 				).not.toThrow();
                ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"code\": \"invalid_value\",\n    \"values\": [\n      false\n    ],\n    \"path\": [\n      \"success\"\n    ],\n    \"message\": \"Invalid input: expected false\"\n  },\n  {\n    \"expected\": \"object\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"error\"\n    ],\n    \"message\": \"Invalid input: expected object, received undefined\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:789:11)
(fail) API Routes Schemas > Error Response Schemas > ValidationErrorSchema > should make code optional [0.13ms]
802 | 					validationErrors: [
803 | 						{ field: "email", message: "Invalid email format" },
804 | 					],
805 | 				};
806 | 
807 | 				expect(() => ApiErrorResponseSchema.parse(validError)).not.toThrow();
                                                                     ^
error: expect(received).not.toThrow()

Error name: "ZodError"
Error message: "[\n  {\n    \"expected\": \"object\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"error\"\n    ],\n    \"message\": \"Invalid input: expected object, received string\"\n  },\n  {\n    \"expected\": \"date\",\n    \"code\": \"invalid_type\",\n    \"path\": [\n      \"timestamp\"\n    ],\n    \"message\": \"Invalid input: expected date, received string\"\n  }\n]"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:807:64)
(fail) API Routes Schemas > Error Response Schemas > ApiErrorResponseSchema > should validate API error response [0.20ms]
823 | 
824 | 	describe("Success Response Schemas", () => {
825 | 		describe("ApiSuccessResponseSchema", () => {
826 | 			it("should validate API success response", () => {
827 | 				const userSchema = z.object({ id: z.string(), name: z.string() });
828 | 				const successSchema = ApiSuccessResponseSchema(userSchema);
                                ^
TypeError: ApiSuccessResponseSchema is not a function. (In 'ApiSuccessResponseSchema(userSchema)', 'ApiSuccessResponseSchema' is an instance of _)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:828:27)
(fail) API Routes Schemas > Success Response Schemas > ApiSuccessResponseSchema > should validate API success response [0.21ms]
841 | 				expect(() => successSchema.parse(validResponse)).not.toThrow();
842 | 			});
843 | 
844 | 			it("should require success to be true", () => {
845 | 				const userSchema = z.object({ id: z.string(), name: z.string() });
846 | 				const successSchema = ApiSuccessResponseSchema(userSchema);
                                ^
TypeError: ApiSuccessResponseSchema is not a function. (In 'ApiSuccessResponseSchema(userSchema)', 'ApiSuccessResponseSchema' is an instance of _)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:846:27)
(fail) API Routes Schemas > Success Response Schemas > ApiSuccessResponseSchema > should require success to be true [0.10ms]
855 | 		});
856 | 
857 | 		describe("PaginatedResponseSchema", () => {
858 | 			it("should validate paginated response", () => {
859 | 				const userSchema = z.object({ id: z.string(), name: z.string() });
860 | 				const paginatedSchema = PaginatedResponseSchema(userSchema);
                                  ^
TypeError: PaginatedResponseSchema is not a function. (In 'PaginatedResponseSchema(userSchema)', 'PaginatedResponseSchema' is an instance of _)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:860:29)
(fail) API Routes Schemas > Success Response Schemas > PaginatedResponseSchema > should validate paginated response [2.05ms]
879 | 				expect(() => paginatedSchema.parse(validResponse)).not.toThrow();
880 | 			});
881 | 
882 | 			it("should validate pagination constraints", () => {
883 | 				const userSchema = z.object({ id: z.string(), name: z.string() });
884 | 				const paginatedSchema = PaginatedResponseSchema(userSchema);
                                  ^
TypeError: PaginatedResponseSchema is not a function. (In 'PaginatedResponseSchema(userSchema)', 'PaginatedResponseSchema' is an instance of _)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:884:29)
(fail) API Routes Schemas > Success Response Schemas > PaginatedResponseSchema > should validate pagination constraints [0.55ms]
905 | 		describe("validateApiRequest", () => {
906 | 			it("should return success for valid data", () => {
907 | 				const schema = z.object({ name: z.string() });
908 | 				const result = validateApiRequest(schema, { name: "Test" });
909 | 
910 | 				expect(result.success).toBe(true);
                                 ^
error: expect(received).toBe(expected)

Expected: true
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:910:28)
(fail) API Routes Schemas > Utility Functions > validateApiRequest > should return success for valid data [0.69ms]
916 | 
917 | 			it("should return error for invalid data", () => {
918 | 				const schema = z.object({ name: z.string() });
919 | 				const result = validateApiRequest(schema, { name: 123 });
920 | 
921 | 				expect(result.success).toBe(false);
                                 ^
error: expect(received).toBe(expected)

Expected: false
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:921:28)
(fail) API Routes Schemas > Utility Functions > validateApiRequest > should return error for invalid data [0.18ms]
932 | 						throw new Error("Generic error");
933 | 					},
934 | 				};
935 | 
936 | 				const result = validateApiRequest(mockSchema as any, {});
937 | 				expect(result.success).toBe(false);
                                 ^
error: expect(received).toBe(expected)

Expected: false
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:937:28)
(fail) API Routes Schemas > Utility Functions > validateApiRequest > should handle non-Zod errors [0.12ms]
947 | 				const response = createApiSuccessResponse(data, "Success message");
948 | 
949 | 				expect(response.success).toBe(true);
950 | 				expect(response.data).toEqual(data);
951 | 				expect(response.message).toBe("Success message");
952 | 				expect(response.meta).toBeDefined();
                                ^
error: expect(received).toBeDefined()

Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:952:27)
(fail) API Routes Schemas > Utility Functions > createApiSuccessResponse > should create success response with data [0.14ms]
968 | 		describe("createApiErrorResponse", () => {
969 | 			it("should create error response with defaults", () => {
970 | 				const response = createApiErrorResponse("Test error");
971 | 
972 | 				expect(response.success).toBe(false);
973 | 				expect(response.error).toBe("Test error");
                                 ^
error: expect(received).toBe(expected)

Expected: "Test error"
Received: {
  code: "HTTP_400",
  message: "Test error",
  details: undefined,
}

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:973:28)
(fail) API Routes Schemas > Utility Functions > createApiErrorResponse > should create error response with defaults [0.12ms]
984 | 					422,
985 | 					validationErrors,
986 | 				);
987 | 
988 | 				expect(response.success).toBe(false);
989 | 				expect(response.error).toBe("Validation failed");
                                 ^
error: expect(received).toBe(expected)

Expected: "Validation failed"
Received: {
  code: "HTTP_422",
  message: "Validation failed",
  details: [
    {
      field: "email",
      message: "Invalid email",
    }
  ],
}

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:989:28)
(fail) API Routes Schemas > Utility Functions > createApiErrorResponse > should create error response with custom values [0.22ms]
1005 | 				expect(response.data).toEqual(data);
1006 | 				expect(response.pagination.page).toBe(1);
1007 | 				expect(response.pagination.limit).toBe(10);
1008 | 				expect(response.pagination.total).toBe(25);
1009 | 				expect(response.pagination.totalPages).toBe(3);
1010 | 				expect(response.pagination.hasNext).toBe(true);
                                               ^
error: expect(received).toBe(expected)

Expected: true
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:1010:41)
(fail) API Routes Schemas > Utility Functions > createPaginatedResponse > should create paginated response [1.00ms]
1015 | 				const data = [{ id: "1", name: "User 1" }];
1016 | 				const pagination = { page: 3, limit: 10, total: 25 };
1017 | 				const response = createPaginatedResponse(data, pagination);
1018 | 
1019 | 				expect(response.pagination.totalPages).toBe(3);
1020 | 				expect(response.pagination.hasNext).toBe(false);
                                               ^
error: expect(received).toBe(expected)

Expected: false
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:1020:41)
(fail) API Routes Schemas > Utility Functions > createPaginatedResponse > should calculate pagination correctly for last page [0.19ms]
1025 | 				const data = [{ id: "1", name: "User 1" }];
1026 | 				const pagination = { page: 2, limit: 10, total: 20 };
1027 | 				const response = createPaginatedResponse(data, pagination);
1028 | 
1029 | 				expect(response.pagination.totalPages).toBe(2);
1030 | 				expect(response.pagination.hasNext).toBe(false);
                                               ^
error: expect(received).toBe(expected)

Expected: false
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/schemas/api-routes.test.ts:1030:41)
(fail) API Routes Schemas > Utility Functions > createPaginatedResponse > should handle exact page divisions [0.11ms]

src/hooks/useClaudeAuth.test.ts:

# Unhandled error between tests
-------------------------------
11 | } from "vitest";
12 | import { ClaudeAuthClient } from "@/lib/auth/claude-auth";
13 | import { useClaudeAuth } from "./useClaudeAuth";
14 | 
15 | // Mock ClaudeAuthClient
16 | vi.mock("@/lib/auth/claude-auth");
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/auth/claude-auth")', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/hooks/useClaudeAuth.test.ts:16:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/hooks/useZodForm.test.ts:

# Unhandled error between tests
-------------------------------
 8 | 	useZodFormPersistence,
 9 | 	useZodFormValidation,
10 | } from "./useZodForm";
11 | 
12 | // Mock react-hook-form
13 | vi.mock("react-hook-form", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("react-hook-form", () => ({
  useForm: vi.fn(() => ({
    register: vi.fn(),
    handleSubmit: vi.fn((fn) => fn),
    formState: {
      errors: {},
      isSubmitting: false,
      isDirty: false,
      dirtyFields: {},
      touchedFields: {},
      defaultValues: {}
    },
    getValues: vi.fn(() => ({})),
    setValue: vi.fn(),
    setError: vi.fn(),
    clearErrors: vi.fn(),
    reset: vi.fn(),
    watch: vi.fn(() => ({ unsubscribe: vi.fn() })),
    trigger: vi.fn(() => Promise.resolve(true)),
    control: {}
  }))
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm.test.ts:13:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/theme-toggle.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'ThemeToggle' not found in module '/Users/neo/Developer/experiments/vibex-app/components/ui/theme-toggle.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/ui/button.test.tsx:
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:9:4)
(fail) Button > Rendering > renders with default props [2.15ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:18:4)
(fail) Button > Rendering > renders with custom className [0.27ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:24:4)
(fail) Button > Rendering > renders as child element when asChild is true
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:35:4)
(fail) Button > Rendering > has correct data-slot attribute
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:43:4)
(fail) Button > Variants > applies default variant classes
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:50:4)
(fail) Button > Variants > applies destructive variant classes
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:57:4)
(fail) Button > Variants > applies outline variant classes [0.01ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:64:4)
(fail) Button > Variants > applies secondary variant classes [0.31ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:71:4)
(fail) Button > Variants > applies ghost variant classes [0.10ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:78:4)
(fail) Button > Variants > applies link variant classes
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:87:4)
(fail) Button > Sizes > applies default size classes [0.25ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:94:4)
(fail) Button > Sizes > applies small size classes [0.02ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:101:4)
(fail) Button > Sizes > applies large size classes [0.07ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:108:4)
(fail) Button > Sizes > applies icon size classes [0.16ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:117:4)
(fail) Button > Interactions > calls onClick handler when clicked [0.07ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:127:4)
(fail) Button > Interactions > does not call onClick when disabled [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:140:4)
(fail) Button > Interactions > applies disabled styles [0.08ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:150:4)
(fail) Button > Accessibility > supports aria-label [0.68ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:156:4)
(fail) Button > Accessibility > supports aria-describedby [0.66ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:167:4)
(fail) Button > Accessibility > supports aria-invalid styling [0.20ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:173:4)
(fail) Button > Accessibility > supports focus-visible styling [0.24ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:182:4)
(fail) Button > Icon Support > applies icon-specific classes [0.17ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:193:4)
(fail) Button > Icon Support > applies size-specific icon padding [0.13ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:205:4)
(fail) Button > Forwarded Props > forwards HTML button props [0.17ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.test.tsx:217:4)
(fail) Button > Forwarded Props > forwards data attributes [0.07ms]

components/ui/dialog.test.tsx:

# Unhandled error between tests
-------------------------------
13 | 	DialogTitle,
14 | 	DialogTrigger,
15 | } from "./dialog";
16 | 
17 | // Mock Radix UI components
18 | vi.mock("@radix-ui/react-dialog", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@radix-ui/react-dialog", () => ({
  Root: ({ children, ...props }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "dialog-root",
    ...props,
    children
  }, undefined, false, undefined, this),
  Trigger: ({ children, ...props }) => jsxDEV_7x81h0kn("button", {
    "data-testid": "dialog-trigger",
    ...props,
    children
  }, undefined, false, undefined, this),
  Portal: ({ children, ...props }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "dialog-portal",
    ...props,
    children
  }, undefined, false, undefined, this),
  Close: ({ children, ...props }) => jsxDEV_7x81h0kn("button", {
    "data-testid": "dialog-close",
    ...props,
    children
  }, undefined, false, undefined, this),
  Overlay: ({ className, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "dialog-overlay",
    ...props
  }, undefined, false, undefined, this),
  Content: ({ children, className, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "dialog-content",
    ...props,
    children
  }, undefined, false, undefined, this),
  Title: ({ children, className, ...props }) => jsxDEV_7x81h0kn("h2", {
    className,
    "data-testid": "dialog-title",
    ...props,
    children
  }, undefined, false, undefined, this),
  Description: ({ children, className, ...props }) => jsxDEV_7x81h0kn("p", {
    className,
    "data-testid": "dialog-description",
    ...props,
    children
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ui/dialog.test.tsx:18:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/progress.test.tsx:
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/progress.test.tsx:8:3)
(fail) Progress > renders progress bar with default value [1.38ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/progress.test.tsx:18:3)
(fail) Progress > renders progress bar with custom value [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/progress.test.tsx:25:3)
(fail) Progress > renders progress bar with custom max value [0.12ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/progress.test.tsx:33:3)
(fail) Progress > handles 100% completion correctly [0.02ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/progress.test.tsx:40:3)
(fail) Progress > applies custom className [0.08ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/progress.test.tsx:47:3)
(fail) Progress > handles edge case values correctly
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/progress.test.tsx:55:3)
(fail) Progress > handles undefined value correctly [0.05ms]

components/ui/scroll-area.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import React from "react";
3 | import { vi } from "vitest";
4 | import { ScrollArea, ScrollBar } from "./scroll-area";
5 | 
6 | // Mock Radix UI ScrollArea components
7 | vi.mock("@radix-ui/react-scroll-area", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@radix-ui/react-scroll-area", () => ({
  Root: ({ children, className, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "scroll-area-root-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  Viewport: ({ children, className, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "scroll-area-viewport-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  ScrollAreaScrollbar: ({
    children,
    className,
    orientation,
    ...props
  }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-orientation": orientation,
    "data-testid": "scroll-area-scrollbar-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  ScrollAreaThumb: ({ className, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "scroll-area-thumb-primitive",
    ...props
  }, undefined, false, undefined, this),
  Corner: ({ ...props }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "scroll-area-corner-primitive",
    ...props
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ui/scroll-area.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/input.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { fireEvent, render, screen } from "@testing-library/react";
2 | import React from "react";
3 | import { vi } from "vitest";
4 | import { Input } from "./input";
5 | 
6 | describe("Input", () => {
    ^
ReferenceError: describe is not defined
      at /Users/neo/Developer/experiments/vibex-app/components/ui/input.test.tsx:6:1
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/card.test.tsx:
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:16:4)
(fail) Card Components > Card > should render card with default classes [1.86ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:31:4)
(fail) Card Components > Card > should merge custom className [0.30ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:44:4)
(fail) Card Components > Card > should forward ref [0.11ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:50:4)
(fail) Card Components > Card > should pass through other props [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:64:4)
(fail) Card Components > CardHeader > should render header with default classes [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:73:4)
(fail) Card Components > CardHeader > should merge custom className [0.06ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:86:4)
(fail) Card Components > CardHeader > should forward ref [0.06ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:94:4)
(fail) Card Components > CardTitle > should render title as h3 with default classes [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:109:4)
(fail) Card Components > CardTitle > should merge custom className [0.10ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:122:4)
(fail) Card Components > CardTitle > should forward ref [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:130:4)
(fail) Card Components > CardDescription > should render description with default classes [0.10ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:142:4)
(fail) Card Components > CardDescription > should merge custom className
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:155:4)
(fail) Card Components > CardDescription > should forward ref [0.06ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:163:4)
(fail) Card Components > CardContent > should render content with default classes [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:172:4)
(fail) Card Components > CardContent > should merge custom className [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:185:4)
(fail) Card Components > CardContent > should forward ref
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:193:4)
(fail) Card Components > CardFooter > should render footer with default classes [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:202:4)
(fail) Card Components > CardFooter > should merge custom className [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:215:4)
(fail) Card Components > CardFooter > should forward ref [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/card.test.tsx:223:4)
(fail) Card Components > Card composition > should render a complete card with all subcomponents [0.04ms]

components/ui/select.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import React from "react";
2 | import { vi } from "vitest";
3 | import { SelectValue } from "./select";
4 | 
5 | // Mock Radix UI Select components
6 | vi.mock("@radix-ui/react-select", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@radix-ui/react-select", () => ({
  Root: ({ children, ...props }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "select-root",
    ...props,
    children
  }, undefined, false, undefined, this),
  Group: ({ children, ...props }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "select-group-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  Value: ({ children, placeholder, ...props }) => jsxDEV_7x81h0kn("span", {
    "data-testid": "select-value-primitive",
    ...props,
    children: children || placeholder
  }, undefined, false, undefined, this),
  Trigger: ({ children, className, ...props }) => jsxDEV_7x81h0kn("button", {
    className,
    "data-testid": "select-trigger-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  Icon: ({ children, asChild }) => asChild ? children : jsxDEV_7x81h0kn("span", {
    children
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ui/select.test.tsx:6:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/textarea.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { fireEvent, render, screen } from "@testing-library/react";
2 | import React from "react";
3 | import { vi } from "vitest";
4 | import { Textarea } from "./textarea";
5 | 
6 | describe("Textarea", () => {
    ^
ReferenceError: describe is not defined
      at /Users/neo/Developer/experiments/vibex-app/components/ui/textarea.test.tsx:6:1
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/badge.test.tsx:
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:8:3)
(fail) Badge > should render badge with default variant [1.55ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:20:3)
(fail) Badge > should render with secondary variant [0.13ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:32:3)
(fail) Badge > should render with destructive variant
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:44:3)
(fail) Badge > should render with outline variant [0.13ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:52:3)
(fail) Badge > should merge custom className [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:60:3)
(fail) Badge > should pass through other HTML div props [0.09ms]
75 | 		expect(badge.id).toBe("test-badge");
76 | 		expect(badge.getAttribute("aria-label")).toBe("Status badge");
77 | 	});
78 | 
79 | 	it("should handle onClick events", () => {
80 | 		const handleClick = vi.fn();
                           ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:80:23)
(fail) Badge > should handle onClick events
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:90:3)
(fail) Badge > should render with complex children [0.16ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:105:3)
(fail) Badge > should handle empty badge [0.23ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:113:3)
(fail) Badge > should have focus styles [0.08ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:126:3)
(fail) Badge > should forward ref [0.13ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:132:3)
(fail) Badge > should render with numeric content [0.59ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:139:3)
(fail) Badge > should render as inline element [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:150:3)
(fail) Badge > should support title attribute [0.12ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/badge.test.tsx:157:3)
(fail) Badge > should handle style prop [0.04ms]

components/ui/tabs.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import React from "react";
3 | import { vi } from "vitest";
4 | import { Tabs, TabsContent, TabsList, TabsTrigger } from "./tabs";
5 | 
6 | // Mock Radix UI Tabs components
7 | vi.mock("@radix-ui/react-tabs", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@radix-ui/react-tabs", () => ({
  Root: ({ children, className, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "tabs-root-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  List: ({ children, className, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "tabs-list-primitive",
    role: "tablist",
    ...props,
    children
  }, undefined, false, undefined, this),
  Trigger: ({ children, className, value, ...props }) => jsxDEV_7x81h0kn("button", {
    className,
    "data-testid": "tabs-trigger-primitive",
    "data-value": value,
    role: "tab",
    ...props,
    children
  }, undefined, false, undefined, this),
  Content: ({ children, className, value, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "tabs-content-primitive",
    "data-value": value,
    role: "tabpanel",
    ...props,
    children
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ui/tabs.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/separator.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import React from "react";
3 | import { vi } from "vitest";
4 | import { Separator } from "./separator";
5 | 
6 | // Mock Radix UI Separator
7 | vi.mock("@radix-ui/react-separator", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@radix-ui/react-separator", () => ({
  Root: ({ className, orientation, decorative, ...props }) => jsxDEV_7x81h0kn("div", {
    "aria-orientation": orientation,
    className,
    "data-decorative": decorative,
    "data-orientation": orientation,
    "data-testid": "separator-root",
    role: decorative ? "none" : "separator",
    ...props
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ui/separator.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/button.integration.test.tsx:
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:12:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:9:42)
(fail) Button Integration Tests > Form Integration > submits form when type is submit [1.31ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:28:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:25:50)
(fail) Button Integration Tests > Form Integration > does not submit form when type is button [0.15ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:44:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:43:37)
(fail) Button Integration Tests > Keyboard Navigation > focuses button with Tab key [0.11ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:64:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:61:41)
(fail) Button Integration Tests > Keyboard Navigation > activates button with Enter key [0.07ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:76:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:73:41)
(fail) Button Integration Tests > Keyboard Navigation > activates button with Space key [0.06ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:86:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:85:44)
(fail) Button Integration Tests > Keyboard Navigation > skips disabled button in tab order [0.08ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:109:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:106:35)
(fail) Button Integration Tests > AsChild Integration > works with Link component [0.12ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:135:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:125:38)
(fail) Button Integration Tests > AsChild Integration > works with custom components [0.09ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:155:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:148:38)
(fail) Button Integration Tests > Event Handling > handles multiple event types [0.12ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:189:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:185:45)
(fail) Button Integration Tests > Event Handling > prevents event bubbling when needed [0.46ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:215:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:204:39)
(fail) Button Integration Tests > State Management > handles dynamic state changes [0.75ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:243:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:229:39)
(fail) Button Integration Tests > State Management > handles conditional rendering [0.61ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:256:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:255:35)
(fail) Button Integration Tests > Accessibility Integration > works with screen readers [0.36ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:284:4)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/button.integration.test.tsx:273:51)
(fail) Button Integration Tests > Accessibility Integration > announces state changes to screen readers [0.54ms]

components/ui/skeleton.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { render, screen } from "@testing-library/react";
2 | import React from "react";
3 | import { vi } from "vitest";
4 | import { Skeleton } from "./skeleton";
5 | 
6 | describe("Skeleton", () => {
    ^
ReferenceError: describe is not defined
      at /Users/neo/Developer/experiments/vibex-app/components/ui/skeleton.test.tsx:6:1
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/label.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import React from "react";
3 | import { vi } from "vitest";
4 | import { Label } from "./label";
5 | 
6 | // Mock Radix UI Label
7 | vi.mock("@radix-ui/react-label", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@radix-ui/react-label", () => ({
  Root: ({ children, className, ...props }) => jsxDEV_7x81h0kn("label", {
    className,
    "data-testid": "label-root",
    ...props,
    children
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ui/label.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ui/table.test.tsx:
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:18:4)
(fail) Table Components > Table > should render table with container [4.85ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:39:4)
(fail) Table Components > Table > should merge custom className [0.15ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:55:4)
(fail) Table Components > Table > should pass through table props [0.08ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:73:4)
(fail) Table Components > TableHeader > should render thead element [0.06ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:90:4)
(fail) Table Components > TableHeader > should merge custom className [0.06ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:107:4)
(fail) Table Components > TableBody > should render tbody element [0.07ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:124:4)
(fail) Table Components > TableBody > should merge custom className [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:141:4)
(fail) Table Components > TableFooter > should render tfoot element [0.06ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:158:4)
(fail) Table Components > TableFooter > should merge custom className [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:175:4)
(fail) Table Components > TableRow > should render tr element [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:196:4)
(fail) Table Components > TableRow > should handle selected state [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:212:4)
(fail) Table Components > TableRow > should merge custom className [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:228:4)
(fail) Table Components > TableRow > should handle onClick events [0.05ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:247:4)
(fail) Table Components > TableHead > should render th element
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:272:4)
(fail) Table Components > TableHead > should merge custom className
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:287:4)
(fail) Table Components > TableHead > should handle scope attribute [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:304:4)
(fail) Table Components > TableCell > should render td element [0.01ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:322:4)
(fail) Table Components > TableCell > should merge custom className [0.07ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:337:4)
(fail) Table Components > TableCell > should handle colspan and rowspan
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:357:4)
(fail) Table Components > TableCaption > should render caption element [0.04ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:375:4)
(fail) Table Components > TableCaption > should merge custom className
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:393:4)
(fail) Table Components > Table composition > should render a complete table
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:432:4)
(fail) Table Components > Table composition > should handle responsive overflow
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/components/ui/table.test.tsx:451:4)
(fail) Table Components > Table composition > should handle checkbox columns [0.06ms]

components/ui/tooltip.test.tsx:

# Unhandled error between tests
-------------------------------
 6 | 	TooltipProvider,
 7 | 	TooltipTrigger,
 8 | } from "./tooltip";
 9 | 
10 | // Mock Radix UI Tooltip components
11 | vi.mock("@radix-ui/react-tooltip", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@radix-ui/react-tooltip", () => ({
  Provider: ({ children, delayDuration, ...props }) => jsxDEV_7x81h0kn("div", {
    "data-delay": delayDuration,
    "data-testid": "tooltip-provider-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  Root: ({ children, ...props }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "tooltip-root-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  Trigger: ({ children, ...props }) => jsxDEV_7x81h0kn("button", {
    "data-testid": "tooltip-trigger-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  Portal: ({ children }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "tooltip-portal",
    children
  }, undefined, false, undefined, this),
  Content: ({ children, className, sideOffset, ...props }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-side-offset": sideOffset,
    "data-testid": "tooltip-content-primitive",
    ...props,
    children
  }, undefined, false, undefined, this),
  Arrow: ({ className }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "tooltip-arrow"
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ui/tooltip.test.tsx:11:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/forms/contact-form.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { render, screen, waitFor } from "@testing-library/react";
2 | import userEvent from "@testing-library/user-event";
3 | import { vi } from "vitest";
4 | import { ContactForm } from "./contact-form";
5 | 
6 | describe("ContactForm", () => {
    ^
ReferenceError: describe is not defined
      at /Users/neo/Developer/experiments/vibex-app/components/forms/contact-form.test.tsx:6:1
      at loadAndEvaluateModule (2:1)
-------------------------------


components/forms/new-task-form.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import React from "react";
3 | import { mocked, vi } from "vitest";
4 | import NewTaskForm from "./new-task-form";
5 | 
6 | // Mock functions at the top level
7 | vi.mock("@/app/actions/inngest", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/app/actions/inngest", () => ({
  createTaskAction: vi.fn()
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/forms/new-task-form.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/forms/form-field.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { fireEvent, render, screen } from "@testing-library/react";
2 | import { vi } from "vitest";
3 | import { FormField } from "./form-field";
4 | 
5 | describe("FormField", () => {
    ^
ReferenceError: describe is not defined
      at /Users/neo/Developer/experiments/vibex-app/components/forms/form-field.test.tsx:5:1
      at loadAndEvaluateModule (2:1)
-------------------------------


components/auth/anthropic-auth-provider.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'useAuth' not found in module '/Users/neo/Developer/experiments/vibex-app/components/auth/anthropic-auth-provider.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/auth/openai-auth-status.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'OpenAIAuthStatus' not found in module '/Users/neo/Developer/experiments/vibex-app/components/auth/openai-auth-status.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/auth/anthropic-auth-card.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'AnthropicAuthCard' not found in module '/Users/neo/Developer/experiments/vibex-app/components/auth/anthropic-auth-card.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/auth/anthropic-auth-button.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'AnthropicAuthButton' not found in module '/Users/neo/Developer/experiments/vibex-app/components/auth/anthropic-auth-button.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/auth/auth-card-base.bun.test.tsx:

# Unhandled error between tests
-------------------------------
10 | 	return "30 minutes";
11 | });
12 | 
13 | // Mock window.location.reload
14 | const mockReload = vi.fn();
15 | Object.defineProperty(window, "location", {
            ^
TypeError: Properties can only be defined on Objects.
      at /Users/neo/Developer/experiments/vibex-app/components/auth/auth-card-base.bun.test.tsx:15:8
      at loadAndEvaluateModule (2:1)
-------------------------------


components/auth/auth-card-base.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import React from "react";
3 | import { vi } from "vitest";
4 | import { AuthCardBase } from "./auth-card-base";
5 | 
6 | // Mock date-fns
7 | vi.mock("date-fns", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("date-fns", () => ({
  formatDistanceToNow: vi.fn((_date, options) => {
    if (options?.addSuffix) {
      return "in 30 minutes";
    }
    return "30 minutes";
  })
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/auth/auth-card-base.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/auth/openai-auth-button.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'OpenAIAuthButton' not found in module '/Users/neo/Developer/experiments/vibex-app/components/auth/openai-auth-button.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/auth/anthropic-auth-status.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'AnthropicAuthStatus' not found in module '/Users/neo/Developer/experiments/vibex-app/components/auth/anthropic-auth-status.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/auth/openai-auth-card.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'OpenAIAuthCard' not found in module '/Users/neo/Developer/experiments/vibex-app/components/auth/openai-auth-card.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/navigation/navbar.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { render, screen } from "@testing-library/react";
2 | import { vi } from "vitest";
3 | import Navbar from "./navbar";
4 | 
5 | // Mock Lucide React icons
6 | vi.mock("lucide-react", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("lucide-react", () => ({
  Dot: ({ className, ...props }) => jsxDEV_7x81h0kn("svg", {
    className,
    "data-testid": "dot-icon",
    ...props
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/navigation/navbar.test.tsx:6:4
      at loadAndEvaluateModule (2:1)
-------------------------------


components/ai/gemini-audio-chat.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'GeminiAudioChat' not found in module '/Users/neo/Developer/experiments/vibex-app/components/ai/gemini-audio-chat.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/unit/example.test.tsx:
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/unit/example.test.tsx:8:25)
(fail) Button Component > renders button with text [8.92ms]
252 |     throw error;
253 |   }
254 |   if (!baseElement) {
255 |     // default to document.body instead of documentElement to avoid output of potentially-large
256 |     // head elements (such as JSS style blocks) in debug output
257 |     baseElement = document.body;
                        ^
ReferenceError: document is not defined
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:257:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/unit/example.test.tsx:17:25)
(fail) Button Component > applies variant styles correctly [0.40ms]
 5 | import '@testing-library/dom';
 6 | import { prepareValueInterceptor, prepareSelectionInterceptor, prepareRangeTextInterceptor } from './interceptor.js';
 7 | 
 8 | const isPrepared = Symbol('Node prepared with document state workarounds');
 9 | function prepareDocument(document) {
10 |     if (document[isPrepared]) {
             ^
TypeError: undefined is not an object (evaluating 'document[isPrepared]')
      at prepareDocument (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/user-event/dist/esm/document/prepareDocument.js:10:9)
      at setupMain (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/user-event/dist/esm/setup/setup.js:52:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/unit/example.test.tsx:25:26)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/unit/example.test.tsx:24:29)
(fail) Button Component > handles click events [1.28ms]

tests/integration/performance-integration.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: export 'useResetMigration' not found in './use-migration'
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/redis-valkey-comprehensive.test.ts:

# Unhandled error between tests
-------------------------------
1 | import Redis from "ioredis";
2 | import { afterEach, beforeEach, describe, expect, test, vi } from "vitest";
3 | 
4 | // Mock Redis/IORedis client
5 | vi.mock("ioredis", () => {
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("ioredis", () => {
  return {
    default: vi.fn().mockImplementation(() => ({
      connect: vi.fn().mockResolvedValue(undefined),
      disconnect: vi.fn().mockResolvedValue(undefined),
      get: vi.fn().mockImplementation(async (key) => {
        if (key === "existing-key")
          return "existing-value";
        if (key.startsWith("session:"))
          return JSON.stringify({ userId: "test-user" });
        return null;
      }),
      set: vi.fn().mockResolvedValue("OK"),
      del: vi.fn().mockResolvedValue(1),
      exists: vi.fn().mockImplementation(async (key) => {
        return key === "existing-key" ? 1 : 0;
      }),
      expire: vi.fn().mockResolvedValue(1),
      ttl: vi.fn().mockResolvedValue(3600),
      ping: vi.fn().mockResolvedValue("PONG"),
      flushdb: vi.fn().mockResolvedValue("OK"),
      keys: vi.fn().mockResolvedValue(["key1", "key2", "key3"]),
      mget: vi.fn().mockResolvedValue(["value1", "value2", null]),
      mset: vi.fn().mockResolvedValue("OK"),
      incr: vi.fn().mockResolvedValue(1),
      decr: vi.fn().mockResolvedValue(0),
      hget: vi.fn().mockResolvedValue("hash-value"),
      hset: vi.fn().mockResolvedValue(1),
      hgetall: vi.fn().mockResolvedValue({ field1: "value1", field2: "value2" }),
      lpush: vi.fn().mockResolvedValue(1),
      rpop: vi.fn().mockResolvedValue("list-item"),
      llen: vi.fn().mockResolvedValue(5),
      sadd: vi.fn().mockResolvedValue(1),
      smembers: vi.fn().mockResolvedValue(["member1", "member2"]),
      zadd: vi.fn().mockResolvedValue(1),
      zrange: vi.fn().mockResolvedValue(["item1", "item2"]),
      pipeline: vi.fn().mockReturnValue({
        get: vi.fn().mockReturnThis(),
        set: vi.fn().mockReturnThis(),
        exec: vi.fn().mockResolvedValue([
          [null, "value1"],
          [null, "OK"]
        ])
      }),
      multi: vi.fn().mockReturnValue({
        get: vi.fn().mockReturnThis(),
        set: vi.fn().mockReturnThis(),
        exec: vi.fn().mockResolvedValue([
          [null, "value1"],
          [null, "OK"]
        ])
      }),
      on: vi.fn(),
      off: vi.fn(),
      status: "ready"
    }))
  };
})', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/redis-valkey-comprehensive.test.ts:5:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/integration/performance-load-testing.test.ts:
219 | 			expect(result.avgTime).toBeLessThan(100); // Average response under 100ms
220 | 			expect(result.throughput).toBeGreaterThan(500); // At least 500 req/s
221 | 			expect(result.successRate).toBeGreaterThan(94); // Account for 5% simulated errors
222 | 
223 | 			// Record metrics
224 | 			metricsCollector.recordHttpRequest(
                          ^
TypeError: metricsCollector.recordHttpRequest is not a function. (In 'metricsCollector.recordHttpRequest("GET", "/api/test", 200, result.avgTime / 1000)', 'metricsCollector.recordHttpRequest' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:224:21)
(fail) Performance and Load Testing > 1. API Endpoint Load Testing > should handle 100 concurrent API requests [705.61ms]
error: Test "should maintain performance under sustained load" timed out after 5002ms
(fail) Performance and Load Testing > 1. API Endpoint Load Testing > should maintain performance under sustained load [5002.18ms]
277 | 			const avgThroughput =
278 | 				throughputs.reduce((a, b) => a + b) / throughputs.length;
279 | 
280 | 			// Throughput shouldn't vary more than 20%
281 | 			throughputs.forEach((t) => {
282 | 				expect(Math.abs(t - avgThroughput) / avgThroughput).toBeLessThan(0.2);
                                                              ^
error: expect(received).toBeLessThan(expected)

Expected: < 0.2
Received: 1.4289460568068735

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:282:57)
      at forEach (1:11)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:281:16)
(fail) Performance and Load Testing > 2. Database Performance Testing > should handle concurrent database operations [9.31ms]
311 | 				50, // 50 concurrent connections
312 | 				500, // 500 total queries
313 | 				mockDbQuery,
314 | 			);
315 | 
316 | 			expect(result.successRate).toBe(100);
                                    ^
error: expect(received).toBe(expected)

Expected: 100
Received: 0

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:316:31)
(fail) Performance and Load Testing > 2. Database Performance Testing > should detect slow queries under load [348.54ms]
486 | 				4, // Limit concurrency for CPU-bound work
487 | 				20,
488 | 				cpuIntensiveOperation,
489 | 			);
490 | 
491 | 			expect(result.successRate).toBe(100);
                                    ^
error: expect(received).toBe(expected)

Expected: 100
Received: 0

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:491:31)
(fail) Performance and Load Testing > 4. Resource Utilization > should monitor CPU usage patterns [22.83ms]
534 | 				400,
535 | 				mixedOperation,
536 | 			);
537 | 
538 | 			expect(result.successRate).toBe(100);
539 | 			expect(result.throughput).toBeGreaterThan(100); // Should handle mixed load well
                                   ^
error: expect(received).toBeGreaterThan(expected)

Expected: > 100
Received: 54.362598532209844

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:539:30)
(fail) Performance and Load Testing > 4. Resource Utilization > should handle mixed workload efficiently [454.04ms]
563 | 					avgLatency: result.avgTime,
564 | 					efficiency: result.throughput / concurrency,
565 | 				});
566 | 
567 | 				// Record metrics
568 | 				metricsCollector.gauge(
                           ^
TypeError: metricsCollector.gauge is not a function. (In 'metricsCollector.gauge("scalability_test_throughput", result.throughput, {
          concurrency: String(concurrency)
        })', 'metricsCollector.gauge' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:568:22)
(fail) Performance and Load Testing > 5. Scalability Analysis > should measure scalability with increasing load [113.26ms]
638 | 			}
639 | 
640 | 			expect(optimalConcurrency).toBeGreaterThan(0);
641 | 			expect(maxThroughput).toBeGreaterThan(0);
642 | 
643 | 			observability.performance.recordMetric("system_limits", {
                       ^
TypeError: undefined is not an object (evaluating 'observability.performance.recordMetric')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:643:18)
(fail) Performance and Load Testing > 5. Scalability Analysis > should identify system limits [191.28ms]
680 | 			// Detect regression
681 | 			const performanceRatio = degraded.avgTime / baseline.avgTime;
682 | 			const throughputRatio = degraded.throughput / baseline.throughput;
683 | 
684 | 			expect(performanceRatio).toBeGreaterThan(1.2); // 20% slower
685 | 			expect(throughputRatio).toBeLessThan(0.9); // 10% less throughput
                                 ^
error: expect(received).toBeLessThan(expected)

Expected: < 0.9
Received: 0.9504841279568574

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/performance-load-testing.test.ts:685:28)
(fail) Performance and Load Testing > 6. Performance Regression Detection > should detect performance degradation [496.56ms]
error: Test "should handle realistic user behavior patterns" timed out after 5002ms
(fail) Performance and Load Testing > 7. Real-world Scenario Testing > should handle realistic user behavior patterns [5002.65ms]

=== Performance Test Report ===
Load Test Results:
{
  "API Endpoint Test": {
    "runs": 1,
    "avgThroughput": 1300.5464480874318,
    "avgResponseTime": 60.92857142857143,
    "totalErrors": 48,
    "avgSuccessRate": 95.19999999999999
  },
  "Sustained Load Test": {
    "runs": 5,
    "avgThroughput": 109.05991984025275,
    "avgResponseTime": 17.609,
    "totalErrors": 0,
    "avgSuccessRate": 100
  },
  "Database Operations": {
    "runs": 1,
    "avgThroughput": 0,
    "avgResponseTime": 0,
    "totalErrors": 500,
    "avgSuccessRate": 0
  },
  "Memory Leak Test": {
    "runs": 1,
    "avgThroughput": 148.14814814814815,
    "avgResponseTime": 6.481,
    "totalErrors": 0,
    "avgSuccessRate": 100
  },
  "Warmup": {
    "runs": 1,
    "avgThroughput": 14.734050390452335,
    "avgResponseTime": 3.52,
    "totalErrors": 0,
    "avgSuccessRate": 100
  },
  "Stable Memory Test": {
    "runs": 1,
    "avgThroughput": 72.65329845975008,
    "avgResponseTime": 3.708,
    "totalErrors": 0,
    "avgSuccessRate": 100
  },
  "CPU Intensive Test": {
    "runs": 1,
    "avgThroughput": 0,
    "avgResponseTime": 0,
    "totalErrors": 20,
    "avgSuccessRate": 0
  },
  "Mixed Workload Test": {
    "runs": 1,
    "avgThroughput": 54.362598532209844,
    "avgResponseTime": 23.46,
    "totalErrors": 0,
    "avgSuccessRate": 100
  },
  "Scalability Test 10": {
    "runs": 1,
    "avgThroughput": 13.383297644539613,
    "avgResponseTime": 11.24,
    "totalErrors": 0,
    "avgSuccessRate": 100
  },
  "Limit Test 50": {
    "runs": 1,
    "avgThroughput": 32.52899613384882,
    "avgResponseTime": 5.795081967213115,
    "totalErrors": 6,
    "avgSuccessRate": 97.6
  },
  "Limit Test 100": {
    "runs": 1,
    "avgThroughput": 65.45406266595857,
    "avgResponseTime": 5.782961460446248,
    "totalErrors": 7,
    "avgSuccessRate": 98.6
  },
  "Limit Test 150": {
    "runs": 1,
    "avgThroughput": 97.30301427815971,
    "avgResponseTime": 6.400815217391305,
    "totalErrors": 14,
    "avgSuccessRate": 98.13333333333333
  },
  "Limit Test 200": {
    "runs": 1,
    "avgThroughput": 129.5248124259576,
    "avgResponseTime": 6.288617886178862,
    "totalErrors": 16,
    "avgSuccessRate": 98.4
  },
  "Limit Test 250": {
    "runs": 1,
    "avgThroughput": 160.28833551769333,
    "avgResponseTime": 5.883074407195421,
    "totalErrors": 27,
    "avgSuccessRate": 97.84
  },
  "Limit Test 300": {
    "runs": 1,
    "avgThroughput": 192.61385880203574,
    "avgResponseTime": 6.2682926829268295,
    "totalErrors": 24,
    "avgSuccessRate": 98.4
  },
  "Performance Baseline": {
    "runs": 1,
    "avgThroughput": 25.789813023855576,
    "avgResponseTime": 22.785,
    "totalErrors": 0,
    "avgSuccessRate": 100
  },
  "Performance Degraded": {
    "runs": 1,
    "avgThroughput": 24.51280794214977,
    "avgResponseTime": 41.745,
    "totalErrors": 0,
    "avgSuccessRate": 100
  },
  "Complex Query Test": {
    "runs": 1,
    "avgThroughput": 0,
    "avgResponseTime": 0,
    "totalErrors": 100,
    "avgSuccessRate": 0
  }
}

Memory Analysis:
{
  "initialHeap": 29070576,
  "finalHeap": 33832472,
  "peakHeap": 33832472,
  "avgHeap": 31460750.384615384,
  "heapGrowth": 4761896,
  "growthRate": 396032.6014637392,
  "possibleLeak": false
}

tests/integration/tanstack-query-hooks.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: export 'useResetMigration' not found in './use-migration'
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/api-tanstack-integration.test.ts:
114 | 				createMockTask({ id: "1", title: "Task 1" }),
115 | 				createMockTask({ id: "2", title: "Task 2" }),
116 | 			];
117 | 
118 | 			server.use(
119 | 				http.get("/api/tasks", () => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:119:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:112:37)
(fail) API Integration Tests > Task Management > should fetch tasks from API [3.47ms]
148 | 				...newTaskData,
149 | 				id: "created-task-id",
150 | 			});
151 | 
152 | 			server.use(
153 | 				http.post("/api/tasks", async ({ request }) => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:153:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:140:34)
(fail) API Integration Tests > Task Management > should create a new task [0.27ms]
183 | 				...updates,
184 | 				updatedAt: new Date(),
185 | 			});
186 | 
187 | 			server.use(
188 | 				http.patch("/api/tasks/:id", async ({ params, request }) => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:188:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:174:40)
(fail) API Integration Tests > Task Management > should update an existing task [0.37ms]
206 | 
207 | 		it("should delete a task", async () => {
208 | 			const taskId = "task-to-delete";
209 | 
210 | 			server.use(
211 | 				http.delete("/api/tasks/:id", ({ params }) => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:211:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:207:30)
(fail) API Integration Tests > Task Management > should delete a task [0.32ms]
221 | 			await expect(deleteTask(taskId)).resolves.not.toThrow();
222 | 		});
223 | 
224 | 		it("should handle API errors gracefully", async () => {
225 | 			server.use(
226 | 				http.get("/api/tasks", () => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:226:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:224:45)
(fail) API Integration Tests > Task Management > should handle API errors gracefully [0.08ms]
238 | 			await expect(fetchTasks()).rejects.toThrow("Failed to fetch tasks");
239 | 		});
240 | 
241 | 		it("should handle network errors", async () => {
242 | 			server.use(
243 | 				http.get("/api/tasks", () => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:243:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:241:38)
(fail) API Integration Tests > Task Management > should handle network errors [0.25ms]
249 | 		});
250 | 	});
251 | 
252 | 	describe("Query Client Integration", () => {
253 | 		it("should work with TanStack Query client", async () => {
254 | 			const queryClient = new QueryClient({
                                 ^
ReferenceError: QueryClient is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:254:28)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:253:48)
(fail) API Integration Tests > Query Client Integration > should work with TanStack Query client [0.23ms]
286 | 			const cachedData = queryClient.getQueryData(["tasks"]);
287 | 			expect(cachedData).toEqual(result);
288 | 		});
289 | 
290 | 		it("should handle query invalidation", async () => {
291 | 			const queryClient = new QueryClient({
                                 ^
ReferenceError: QueryClient is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:291:28)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:290:42)
(fail) API Integration Tests > Query Client Integration > should handle query invalidation [0.34ms]
312 | 	});
313 | 
314 | 	describe("Error Scenarios", () => {
315 | 		it("should handle validation errors", async () => {
316 | 			server.use(
317 | 				http.post("/api/tasks", () => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:317:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:315:41)
(fail) API Integration Tests > Error Scenarios > should handle validation errors [0.29ms]
332 | 			await expect(createTask({})).rejects.toThrow("Failed to create task");
333 | 		});
334 | 
335 | 		it("should handle authentication errors", async () => {
336 | 			server.use(
337 | 				http.get("/api/tasks", () => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:337:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:335:45)
(fail) API Integration Tests > Error Scenarios > should handle authentication errors [0.30ms]
349 | 			await expect(fetchTasks()).rejects.toThrow("Failed to fetch tasks");
350 | 		});
351 | 
352 | 		it("should handle rate limiting", async () => {
353 | 			server.use(
354 | 				http.post("/api/tasks", () => {
          ^
ReferenceError: http is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:354:5)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/api-tanstack-integration.test.ts:352:37)
(fail) API Integration Tests > Error Scenarios > should handle rate limiting [0.13ms]

tests/integration/inngest-workflow-testing.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { Inngest } from "inngest";
2 | import { afterEach, beforeEach, describe, expect, test, vi } from "vitest";
3 | 
4 | // Mock Inngest client
5 | vi.mock("inngest", () => ({
6 | 	Inngest: vi.fn().mockImplementation(() => ({
                                                ^
TypeError: vi.mock is not a function. (In 'vi.mock("inngest", () => ({
  Inngest: vi.fn().mockImplementation(() => ({
    send: vi.fn().mockResolvedValue({ ids: ["test-event-id"] }),
    createFunction: vi.fn().mockReturnValue({
      name: "test-function",
      fn: vi.fn()
    }),
    serve: vi.fn().mockReturnValue({
      GET: vi.fn(),
      POST: vi.fn(),
      PUT: vi.fn()
    })
  }))
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/inngest-workflow-testing.test.ts:6:45
-------------------------------


tests/integration/inngest-simple-bun.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { beforeEach, describe, expect, it, vi } from "vitest";
2 | 
3 | // Mock the inngest modules
4 | vi.mock("@/lib/inngest", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/inngest", () => ({
  inngest: {
    id: "clonedex",
    send: vi.fn(() => Promise.resolve({ ids: ["test-id"] }))
  },
  taskChannel: vi.fn(() => {
    const channel = vi.fn();
    channel.status = vi.fn();
    channel.update = vi.fn();
    channel.control = vi.fn();
    return channel;
  }),
  taskControl: {
    id: "task-control",
    trigger: { event: "clonedx/task.control" },
    handler: vi.fn(() => Promise.resolve({ success: true }))
  },
  createTask: {
    id: "create-task",
    trigger: { event: "clonedx/create.task" },
    handler: vi.fn(() => Promise.resolve({ message: "Task created" }))
  },
  getInngestApp: vi.fn(() => ({
    id: "server",
    send: vi.fn(() => Promise.resolve({ ids: ["test-id"] }))
  }))
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/inngest-simple-bun.test.ts:4:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/integration/realtime-sync-integration.test.ts:

# Unhandled error between tests
-------------------------------
error: Cannot find module '../../hooks/use-electric-sync' from '/Users/neo/Developer/experiments/vibex-app/tests/integration/realtime-sync-integration.test.ts'
-------------------------------


tests/integration/optimistic-updates-workflow.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: export 'useResetMigration' not found in './use-migration'
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/external-api-comprehensive.test.ts:

# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


# Unhandled error between tests
-------------------------------
 9 | 		vi.clearAllMocks();
10 | 	});
11 | 
12 | 	afterEach(() => {
13 | 		// Clean up after each test
14 | 		vi.resetAllMocks();
          ^
TypeError: vi.resetAllMocks is not a function. (In 'vi.resetAllMocks()', 'vi.resetAllMocks' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/external-api-comprehensive.test.ts:14:6)
-------------------------------


tests/integration/cache-invalidation.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: export 'useResetMigration' not found in './use-migration'
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/database-observability-comprehensive.test.ts:
198 | 				}
199 | 			}
200 | 
201 | 			// Verify metrics collection
202 | 			const metrics = await metricsCollector.getMetrics();
203 | 			expect(metrics).toContain("database_query_duration_seconds");
                         ^
error: expect(received).toContain(expected)

Expected to contain: "database_query_duration_seconds"
Received: "\n"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:203:20)
(fail) Database Observability Comprehensive Integration > 1. Query Performance Tracking > should track query execution times by type [54.92ms]
214 | 
215 | 		test("should detect and track slow queries", async () => {
216 | 			const slowQueries = [];
217 | 
218 | 			// Set up slow query tracking
219 | 			observability.database.onSlowQuery((query) => {
                       ^
TypeError: undefined is not an object (evaluating 'observability.database.onSlowQuery')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:219:18)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:215:48)
(fail) Database Observability Comprehensive Integration > 1. Query Performance Tracking > should detect and track slow queries [0.29ms]
274 | 
275 | 				const start = Date.now();
276 | 				await mockDb.query(query).catch(() => {});
277 | 				const duration = Date.now() - start;
278 | 
279 | 				observability.database.recordQuery(
                        ^
TypeError: undefined is not an object (evaluating 'observability.database.recordQuery')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:279:19)
(fail) Database Observability Comprehensive Integration > 1. Query Performance Tracking > should track query patterns and statistics [10.83ms]
304 | 			for (let i = 0; i < 20; i++) {
305 | 				const conn = await mockDb.connect();
306 | 				connections.push(conn);
307 | 
308 | 				const stats = mockDb.getStats();
309 | 				metricsCollector.setDatabaseConnections(
                           ^
TypeError: metricsCollector.setDatabaseConnections is not a function. (In 'metricsCollector.setDatabaseConnections("postgres", "main", stats.activeConnections)', 'metricsCollector.setDatabaseConnections' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:309:22)
(fail) Database Observability Comprehensive Integration > 2. Connection Pool Monitoring > should monitor connection pool usage [0.49ms]
371 | 							message: `Connection pool usage high: ${usage.toFixed(1)}%`,
372 | 						});
373 | 					}
374 | 				}
375 | 			} catch (error: any) {
376 | 				expect(error.message).toContain("Connection pool exhausted");
                                ^
error: expect(received).toContain(expected)

Expected to contain: "Connection pool exhausted"
Received: "metricsCollector.setDatabaseConnections is not a function. (In 'metricsCollector.setDatabaseConnections(\"postgres\", \"main\", stats.activeConnections)', 'metricsCollector.setDatabaseConnections' is undefined)"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:376:27)
(fail) Database Observability Comprehensive Integration > 2. Connection Pool Monitoring > should alert on connection pool exhaustion [1.68ms]
395 | 		test("should track transaction lifecycle", async () => {
396 | 			// Simulate transaction
397 | 			const transactionId = `tx_${Date.now()}`;
398 | 			const transactionStart = Date.now();
399 | 
400 | 			observability.database.startTransaction(transactionId);
                       ^
TypeError: undefined is not an object (evaluating 'observability.database.startTransaction')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:400:18)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:395:46)
(fail) Database Observability Comprehensive Integration > 3. Transaction Monitoring > should track transaction lifecycle [0.31ms]
439 | 		});
440 | 
441 | 		test("should handle transaction rollbacks", async () => {
442 | 			const transactionId = `tx_rollback_${Date.now()}`;
443 | 
444 | 			observability.database.startTransaction(transactionId);
                       ^
TypeError: undefined is not an object (evaluating 'observability.database.startTransaction')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:444:18)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:441:47)
(fail) Database Observability Comprehensive Integration > 3. Transaction Monitoring > should handle transaction rollbacks [0.47ms]
484 | 
485 | 			for (const { sql, errorType } of errorQueries) {
486 | 				try {
487 | 					await mockDb.query(sql);
488 | 				} catch (error: any) {
489 | 					observability.database.recordError(errorType, error);
                         ^
TypeError: undefined is not an object (evaluating 'observability.database.recordError')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:489:20)
(fail) Database Observability Comprehensive Integration > 4. Error Rate Monitoring > should track database errors by type [29.20ms]
510 | 
511 | 				for (let i = 0; i < errorCount; i++) {
512 | 					try {
513 | 						await mockDb.query("SELECT * FROM error_table");
514 | 					} catch (error: any) {
515 | 						observability.database.recordError("query_error", error);
                          ^
TypeError: undefined is not an object (evaluating 'observability.database.recordError')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:515:21)
(fail) Database Observability Comprehensive Integration > 4. Error Rate Monitoring > should calculate error rates over time windows [7.21ms]
563 | 			const results: any = {};
564 | 			for (const [check, fn] of Object.entries(healthChecks)) {
565 | 				results[check] = await fn();
566 | 
567 | 				// Record health metrics
568 | 				metricsCollector.gauge(
                           ^
TypeError: metricsCollector.gauge is not a function. (In 'metricsCollector.gauge(`database_health_${check}`, results[check].status === "healthy" ? 1 : 0)', 'metricsCollector.gauge' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:568:22)
(fail) Database Observability Comprehensive Integration > 5. Database Health Checks > should perform comprehensive health checks [12.58ms]
599 | 			];
600 | 
601 | 			for (const op of operations) {
602 | 				for (let i = 0; i < op.count; i++) {
603 | 					if (op.type === "query") {
604 | 						metricsCollector.recordDatabaseQuery(
                             ^
TypeError: metricsCollector.recordDatabaseQuery is not a function. (In 'metricsCollector.recordDatabaseQuery("SELECT", "various", Math.random() * 0.1)', 'metricsCollector.recordDatabaseQuery' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:604:24)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:592:55)
(fail) Database Observability Comprehensive Integration > 5. Database Health Checks > should integrate with monitoring dashboards [0.41ms]
677 | 						suggestion: pattern.optimization,
678 | 						potentialImprovement: `${((1 - pattern.optimizedTime / pattern.currentTime) * 100).toFixed(0)}%`,
679 | 					});
680 | 				}
681 | 
682 | 				observability.database.recordQuery("select", pattern.query, duration);
                        ^
TypeError: undefined is not an object (evaluating 'observability.database.recordQuery')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:682:19)
(fail) Database Observability Comprehensive Integration > 6. Query Optimization Insights > should identify optimization opportunities [11.91ms]
750 | 				true,
751 | 			);
752 | 
753 | 			// Check Prometheus format
754 | 			const prometheusMetrics = await metricsCollector.getMetrics();
755 | 			expect(prometheusMetrics).toContain("database_query_duration_seconds");
                                   ^
error: expect(received).toContain(expected)

Expected to contain: "database_query_duration_seconds"
Received: "\n"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/database-observability-comprehensive.test.ts:755:30)
(fail) Database Observability Comprehensive Integration > 7. Real-time Monitoring Integration > should stream metrics in real-time format [1097.17ms]

=== Database Observability Performance Report ===
{
  "errors": {
    "simple_select": 1,
    "join": 1,
    "insert": 1,
    "update": 1,
    "delete": 1
  }
}

tests/integration/system-integration-validation.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'validateRedisEnvironment' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/redis/config.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/electric-sync-scenarios.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: export 'pgliteConfig' not found in './simple-config'
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/ai-chat-testing.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'createErrorTestChatModel' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/ai/testing/mock-language-model.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/gemini-audio.integration.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
2 | import { GeminiRealtimeSession } from "../../lib/ai/gemini-realtime";
3 | 
4 | // Mock the @google/genai module
5 | vi.mock("@google/genai", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@google/genai", () => ({
  GoogleGenAI: vi.fn(() => ({
    startChat: vi.fn()
  })),
  LiveSession: vi.fn(() => ({
    connect: vi.fn(),
    disconnect: vi.fn(),
    send: vi.fn(),
    on: vi.fn(),
    off: vi.fn()
  })),
  Modality: {
    AUDIO: "audio",
    TEXT: "text"
  },
  MediaResolution: {
    MEDIUM: "medium",
    HIGH: "high"
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/gemini-audio.integration.test.ts:5:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/integration/gemini-audio-hooks.integration.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'useAudioRecorder' not found in module '/Users/neo/Developer/experiments/vibex-app/hooks/use-audio-recorder.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/optimistic-updates.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: export 'useResetMigration' not found in './use-migration'
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/alerts/alert-manager.test.ts:
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > processAlert > should process alert successfully when enabled [6.35ms]
(fail) AlertManager > processAlert > should process alert successfully when enabled
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > processAlert > should skip processing when alerts are disabled [0.02ms]
(fail) AlertManager > processAlert > should skip processing when alerts are disabled
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > processAlert > should deduplicate similar alerts [0.03ms]
(fail) AlertManager > processAlert > should deduplicate similar alerts
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > processAlert > should respect rate limiting [0.02ms]
(fail) AlertManager > processAlert > should respect rate limiting
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > processAlert > should handle transport failures gracefully [0.03ms]
(fail) AlertManager > processAlert > should handle transport failures gracefully
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > processAlert > should send notifications to multiple channels
(fail) AlertManager > processAlert > should send notifications to multiple channels
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > processAlert > should filter channels by error type [0.03ms]
(fail) AlertManager > should filter channels by error type
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > resolveAlert > should resolve existing alert
(fail) AlertManager > resolveAlert > should resolve existing alert
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > resolveAlert > should return false for non-existent alert [0.05ms]
(fail) AlertManager > should return false for non-existent alert
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > getActiveAlerts > should return only unresolved alerts
(fail) AlertManager > should return only unresolved alerts
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > getAlertHistory > should return alert history from Redis [0.04ms]
(fail) AlertManager > getAlertHistory > should return alert history from Redis
 6 | 	private readonly transportService: AlertTransportService;
 7 | 	private readonly defaultConfig: AlertConfig;
 8 | 	private alerts: Map<string, CriticalError> = new Map();
 9 | 
10 | 	constructor(redis: Redis, transportService: AlertTransportService) {
11 | 		this.logger = new ComponentLogger("AlertManager");
                         ^
ReferenceError: ComponentLogger is not defined
      at new AlertManager (/Users/neo/Developer/experiments/vibex-app/lib/alerts/alert-manager.ts:11:21)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/alerts/alert-manager.test.ts:47:18)
(fail) AlertManager > getAlertHistory > should handle missing alert data gracefully [0.02ms]
(fail) AlertManager > should handle missing alert data gracefully

tests/api/tasks.test.ts:

# Unhandled error between tests
-------------------------------
error: Cannot find package 'node-mocks-http' from '/Users/neo/Developer/experiments/vibex-app/tests/api/tasks.test.ts'
-------------------------------


tests/api/electric-query.test.ts:

# Unhandled error between tests
-------------------------------
error: Cannot find package 'node-mocks-http' from '/Users/neo/Developer/experiments/vibex-app/tests/api/electric-query.test.ts'
-------------------------------


tests/sentry/sentry-integration.test.ts:

# Unhandled error between tests
-------------------------------
error: Cannot find package 'winston' from '/Users/neo/Developer/experiments/vibex-app/lib/logging/logger-factory.ts'
-------------------------------


tests/sentry/enhanced-observability.test.ts:

# Unhandled error between tests
-------------------------------
SyntaxError: Export named 'enhancedObservability' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/observability/enhanced.ts'.
      at link (unknown:1:11)
      at linkAndEvaluateModule (unknown:1:11)
      at loadAndEvaluateModule (unknown:2:1)
      at processTicksAndRejections (unknown:7:39)
-------------------------------


tests/e2e/example.spec.ts:

# Unhandled error between tests
-------------------------------
69 |     this.test = test;
70 |   }
71 |   _currentSuite(location, title) {
72 |     const suite = (0, import_globals.currentlyLoadingFileSuite)();
73 |     if (!suite) {
74 |       throw new Error([
                 ^
error: Playwright Test did not expect test.describe() to be called here.
Most common reasons include:
- You are calling test.describe() in a configuration file.
- You are calling test.describe() in a file that is imported by the configuration file.
- You have two different versions of @playwright/test. This usually happens
  when one of the dependencies in your package.json depends on @playwright/test.
      at _currentSuite (/Users/neo/Developer/experiments/vibex-app/node_modules/playwright/lib/common/testType.js:74:13)
      at _describe (/Users/neo/Developer/experiments/vibex-app/node_modules/playwright/lib/common/testType.js:114:24)
      at /Users/neo/Developer/experiments/vibex-app/tests/e2e/example.spec.ts:3:6
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/e2e/app-structure.spec.ts:

# Unhandled error between tests
-------------------------------
69 |     this.test = test;
70 |   }
71 |   _currentSuite(location, title) {
72 |     const suite = (0, import_globals.currentlyLoadingFileSuite)();
73 |     if (!suite) {
74 |       throw new Error([
                     ^
error: Playwright Test did not expect test.describe() to be called here.
Most common reasons include:
- You are calling test.describe() in a configuration file.
- You are calling test.describe() in a file that is imported by the configuration file.
- You have two different versions of @playwright/test. This usually happens
  when one of the dependencies in your package.json depends on @playwright/test.
      at _currentSuite (/Users/neo/Developer/experiments/vibex-app/node_modules/playwright/lib/common/testType.js:74:17)
-------------------------------


tests/e2e/ai-powered-advanced.spec.ts:

# Unhandled error between tests
-------------------------------
69 |     this.test = test;
70 |   }
71 |   _currentSuite(location, title) {
72 |     const suite = (0, import_globals.currentlyLoadingFileSuite)();
73 |     if (!suite) {
74 |       throw new Error([
                 ^
error: Playwright Test did not expect test.describe() to be called here.
Most common reasons include:
- You are calling test.describe() in a configuration file.
- You are calling test.describe() in a file that is imported by the configuration file.
- You have two different versions of @playwright/test. This usually happens
  when one of the dependencies in your package.json depends on @playwright/test.
      at _currentSuite (/Users/neo/Developer/experiments/vibex-app/node_modules/playwright/lib/common/testType.js:74:13)
      at _describe (/Users/neo/Developer/experiments/vibex-app/node_modules/playwright/lib/common/testType.js:114:24)
      at /Users/neo/Developer/experiments/vibex-app/tests/e2e/ai-powered-advanced.spec.ts:9:6
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/e2e/visual-regression-ai.spec.ts:

# Unhandled error between tests
-------------------------------
69 |     this.test = test;
70 |   }
71 |   _currentSuite(location, title) {
72 |     const suite = (0, import_globals.currentlyLoadingFileSuite)();
73 |     if (!suite) {
74 |       throw new Error([
                 ^
error: Playwright Test did not expect test.describe() to be called here.
Most common reasons include:
- You are calling test.describe() in a configuration file.
- You are calling test.describe() in a file that is imported by the configuration file.
- You have two different versions of @playwright/test. This usually happens
  when one of the dependencies in your package.json depends on @playwright/test.
      at _currentSuite (/Users/neo/Developer/experiments/vibex-app/node_modules/playwright/lib/common/testType.js:74:13)
      at _describe (/Users/neo/Developer/experiments/vibex-app/node_modules/playwright/lib/common/testType.js:114:24)
      at /Users/neo/Developer/experiments/vibex-app/tests/e2e/visual-regression-ai.spec.ts:12:6
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/migration/migration-edge-cases.test.ts:

# Unhandled error between tests
-------------------------------
10 | // Mock localStorage with edge case scenarios
11 | const createMockLocalStorage = () => {
12 | 	let store: Record<string, string> = {};
13 | 
14 | 	return {
15 | 		getItem: vi.fn((key: string) => store[key] || null),
                ^
ReferenceError: vi is not defined
      at createMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-edge-cases.test.ts:15:12)
      at /Users/neo/Developer/experiments/vibex-app/tests/migration/migration-edge-cases.test.ts:32:26
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/migration/migration-system.test.ts:
206 | 		vi.restoreAllMocks();
207 | 	});
208 | 
209 | 	describe("Data Extraction", () => {
210 | 		it("should extract tasks from localStorage", async () => {
211 | 			const result = await dataExtractor.extractTasks();
                              ^
ReferenceError: dataExtractor is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:211:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:210:48)
(fail) Migration System Comprehensive Tests > Data Extraction > should extract tasks from localStorage [0.67ms]
220 | 			expect(task1.status).toBe("pending");
221 | 			expect(task1.tags).toEqual(["urgent", "feature"]);
222 | 		});
223 | 
224 | 		it("should extract environments from localStorage", async () => {
225 | 			const result = await dataExtractor.extractEnvironments();
                              ^
ReferenceError: dataExtractor is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:225:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:224:55)
(fail) Migration System Comprehensive Tests > Data Extraction > should extract environments from localStorage [0.30ms]
235 | 		});
236 | 
237 | 		it("should handle missing localStorage data gracefully", async () => {
238 | 			mockLocalStorage.clear();
239 | 
240 | 			const tasksResult = await dataExtractor.extractTasks();
                                   ^
ReferenceError: dataExtractor is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:240:30)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:237:60)
(fail) Migration System Comprehensive Tests > Data Extraction > should handle missing localStorage data gracefully [0.48ms]
252 | 		});
253 | 
254 | 		it("should handle corrupted localStorage data", async () => {
255 | 			mockLocalStorage.setItem("task-store", "invalid-json");
256 | 
257 | 			const result = await dataExtractor.extractTasks();
                              ^
ReferenceError: dataExtractor is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:257:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:254:51)
(fail) Migration System Comprehensive Tests > Data Extraction > should handle corrupted localStorage data [0.19ms]
260 | 			expect(result.errors).toHaveLength(1);
261 | 			expect(result.errors[0].type).toBe("EXTRACTION_ERROR");
262 | 		});
263 | 
264 | 		it("should extract form data from localStorage", async () => {
265 | 			const result = await dataExtractor.extractAll();
                              ^
ReferenceError: dataExtractor is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:265:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:264:52)
(fail) Migration System Comprehensive Tests > Data Extraction > should extract form data from localStorage [0.11ms]
272 | 				"react-hook-form-env-form",
273 | 			);
274 | 		});
275 | 
276 | 		it("should provide accurate storage statistics", () => {
277 | 			const stats = dataExtractor.getStorageStatistics();
                       ^
ReferenceError: dataExtractor is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:277:18)
(fail) Migration System Comprehensive Tests > Data Extraction > should provide accurate storage statistics [0.06ms]
285 | 
286 | 		it("should clear localStorage with confirmation", async () => {
287 | 			const initialLength = mockLocalStorage.length;
288 | 			expect(initialLength).toBeGreaterThan(0);
289 | 
290 | 			const success = await dataExtractor.clearExtractedData(
                               ^
ReferenceError: dataExtractor is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:290:26)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:286:53)
(fail) Migration System Comprehensive Tests > Data Extraction > should clear localStorage with confirmation [0.38ms]
297 | 
298 | 		it("should refuse to clear localStorage without confirmation", async () => {
299 | 			const initialLength = mockLocalStorage.length;
300 | 
301 | 			const success =
302 | 				await dataExtractor.clearExtractedData("wrong-confirmation");
                ^
ReferenceError: dataExtractor is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:302:11)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:298:66)
(fail) Migration System Comprehensive Tests > Data Extraction > should refuse to clear localStorage without confirmation [0.18ms]
307 | 	});
308 | 
309 | 	describe("Data Transformation", () => {
310 | 		it("should transform tasks correctly", () => {
311 | 			const tasks = createMockTasks();
312 | 			const result = dataMapper.transformTasks(tasks);
                        ^
ReferenceError: dataMapper is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:312:19)
(fail) Migration System Comprehensive Tests > Data Transformation > should transform tasks correctly [0.14ms]
326 | 			});
327 | 		});
328 | 
329 | 		it("should transform environments correctly", () => {
330 | 			const environments = createMockEnvironments();
331 | 			const result = dataMapper.transformEnvironments(environments);
                        ^
ReferenceError: dataMapper is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:331:19)
(fail) Migration System Comprehensive Tests > Data Transformation > should transform environments correctly [0.18ms]
360 | 					title: "Valid Title",
361 | 					status: "pending",
362 | 				},
363 | 			];
364 | 
365 | 			const result = dataMapper.transformTasks(invalidTasks);
                        ^
ReferenceError: dataMapper is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:365:19)
(fail) Migration System Comprehensive Tests > Data Transformation > should handle invalid task data
378 | 					status: "completed",
379 | 				},
380 | 			]);
381 | 
382 | 			const tasks = createMockTasks();
383 | 			const conflicts = await dataMapper.detectConflicts(tasks, []);
                                 ^
ReferenceError: dataMapper is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:383:28)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:372:55)
(fail) Migration System Comprehensive Tests > Data Transformation > should detect conflicts before transformation [0.19ms]
393 | 				...localTask,
394 | 				title: "Remote Title",
395 | 				updatedAt: "2024-01-03T00:00:00.000Z", // Newer
396 | 			};
397 | 
398 | 			const resolved = dataMapper.resolveConflict(
                          ^
ReferenceError: dataMapper is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:398:21)
(fail) Migration System Comprehensive Tests > Data Transformation > should apply conflict resolution strategies [0.23ms]
405 | 			expect(resolved.id).toBe(localTask.id);
406 | 		});
407 | 
408 | 		it("should validate transformed data integrity", () => {
409 | 			const tasks = createMockTasks();
410 | 			const { transformed } = dataMapper.transformTasks(tasks);
                                 ^
ReferenceError: dataMapper is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:410:28)
(fail) Migration System Comprehensive Tests > Data Transformation > should validate transformed data integrity [0.01ms]
418 | 		});
419 | 	});
420 | 
421 | 	describe("Backup System", () => {
422 | 		it("should create localStorage backup", async () => {
423 | 			const result = await backupService.createBackup({
                              ^
ReferenceError: backupService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:423:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:422:43)
(fail) Migration System Comprehensive Tests > Backup System > should create localStorage backup [0.10ms]
433 | 			expect(result.manifest!.dataTypes).toContain("tasks");
434 | 			expect(result.manifest!.dataTypes).toContain("environments");
435 | 		});
436 | 
437 | 		it("should create compressed backup", async () => {
438 | 			const uncompressedResult = await backupService.createBackup({
                                          ^
ReferenceError: backupService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:438:37)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:437:41)
(fail) Migration System Comprehensive Tests > Backup System > should create compressed backup [0.13ms]
475 | 				dataTypes: ["environments"],
476 | 				compressed: true,
477 | 			};
478 | 
479 | 			// Mock the backup storage
480 | 			vi.spyOn(backupService, "listBackups").mockReturnValue([
                  ^
ReferenceError: backupService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:480:13)
(fail) Migration System Comprehensive Tests > Backup System > should list backups correctly [0.09ms]
489 | 			expect(backups[1].id).toBe("backup-1");
490 | 		});
491 | 
492 | 		it("should restore backup correctly", async () => {
493 | 			// First create a backup
494 | 			const createResult = await backupService.createBackup({
                                    ^
ReferenceError: backupService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:494:31)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:492:41)
(fail) Migration System Comprehensive Tests > Backup System > should restore backup correctly [0.04ms]
513 | 			expect(mockLocalStorage.getItem("task-store")).toBeTruthy();
514 | 			expect(mockLocalStorage.getItem("environments")).toBeTruthy();
515 | 		});
516 | 
517 | 		it("should handle backup restore failure", async () => {
518 | 			const result = await backupService.restoreBackup("non-existent-backup");
                              ^
ReferenceError: backupService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:518:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:517:46)
(fail) Migration System Comprehensive Tests > Backup System > should handle backup restore failure [0.10ms]
521 | 			expect(result.error).toContain("Backup not found");
522 | 		});
523 | 
524 | 		it("should export and import backups", async () => {
525 | 			// Create a backup first
526 | 			const createResult = await backupService.createBackup({
                                    ^
ReferenceError: backupService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:526:31)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:524:42)
(fail) Migration System Comprehensive Tests > Backup System > should export and import backups [0.07ms]
549 | 		});
550 | 
551 | 		it("should cleanup old backups", async () => {
552 | 			// Create multiple backups to trigger cleanup
553 | 			for (let i = 0; i < 10; i++) {
554 | 				await backupService.createBackup({
                ^
ReferenceError: backupService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:554:11)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:551:36)
(fail) Migration System Comprehensive Tests > Backup System > should cleanup old backups [0.13ms]
579 | 			conflictResolution: "MERGE_FAVOR_RECENT",
580 | 			validateAfterMigration: true,
581 | 		};
582 | 
583 | 		it("should perform complete migration successfully", async () => {
584 | 			const result = await migrationService.startMigration(defaultConfig);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:584:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:583:56)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should perform complete migration successfully [0.09ms]
596 | 			const config: MigrationConfig = {
597 | 				...defaultConfig,
598 | 				dryRun: true,
599 | 			};
600 | 
601 | 			const result = await migrationService.startMigration(config);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:601:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:595:42)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should perform dry run migration
619 | 					title: "Existing Task",
620 | 					status: "completed",
621 | 				},
622 | 			]);
623 | 
624 | 			const result = await migrationService.startMigration(defaultConfig);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:624:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:614:48)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should handle migration with conflicts [0.18ms]
638 | 			// Mock database error for some operations
639 | 			mockDb.tasks.create
640 | 				.mockResolvedValueOnce({ id: "task-1" })
641 | 				.mockRejectedValueOnce(new Error("Database error"));
642 | 
643 | 			const result = await migrationService.startMigration(config);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:643:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:632:50)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should continue on error when configured

# Unhandled error between tests
-------------------------------
636 | 			};
637 | 
638 | 			// Mock database error for some operations
639 | 			mockDb.tasks.create
640 | 				.mockResolvedValueOnce({ id: "task-1" })
641 | 				.mockRejectedValueOnce(new Error("Database error"));
                                 ^
error: Database error
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:641:28)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:632:50)
-------------------------------


# Unhandled error between tests
-------------------------------
638 | 			// Mock database error for some operations
639 | 			mockDb.tasks.create
640 | 				.mockResolvedValueOnce({ id: "task-1" })
641 | 				.mockRejectedValueOnce(new Error("Database error"));
642 | 
643 | 			const result = await migrationService.startMigration(config);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:643:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:632:50)
-------------------------------

654 | 			};
655 | 
656 | 			// Mock database error
657 | 			mockDb.tasks.create.mockRejectedValue(new Error("Database error"));
658 | 
659 | 			const result = await migrationService.startMigration(config);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:659:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:650:62)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should stop on error when not configured to continue

# Unhandled error between tests
-------------------------------
652 | 				...defaultConfig,
653 | 				continueOnError: false,
654 | 			};
655 | 
656 | 			// Mock database error
657 | 			mockDb.tasks.create.mockRejectedValue(new Error("Database error"));
                                               ^
error: Database error
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:657:42)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:650:62)
-------------------------------


# Unhandled error between tests
-------------------------------
654 | 			};
655 | 
656 | 			// Mock database error
657 | 			mockDb.tasks.create.mockRejectedValue(new Error("Database error"));
658 | 
659 | 			const result = await migrationService.startMigration(config);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:659:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:650:62)
-------------------------------

666 | 			const config: MigrationConfig = {
667 | 				...defaultConfig,
668 | 				batchSize: 1, // Process one item at a time
669 | 			};
670 | 
671 | 			const result = await migrationService.startMigration(config);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:671:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:665:40)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should handle batch processing
674 | 			expect(mockDb.tasks.create).toHaveBeenCalledTimes(2); // Two tasks
675 | 			expect(mockDb.environments.create).toHaveBeenCalledTimes(2); // Two environments
676 | 		});
677 | 
678 | 		it("should validate after migration", async () => {
679 | 			const result = await migrationService.startMigration(defaultConfig);
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:679:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:678:41)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should validate after migration [0.16ms]
681 | 			expect(result.success).toBe(true);
682 | 			// Validation warnings would be in the warnings array if any issues found
683 | 		});
684 | 
685 | 		it("should provide migration statistics", async () => {
686 | 			const stats = await migrationService.getMigrationStatistics();
                             ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:686:24)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:685:45)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should provide migration statistics
702 | 			// Mock progress callback
703 | 			const mockProgressCallback = vi.fn((stage: string, progress: number) => {
704 | 				progressEvents.push({ stage, progress });
705 | 			});
706 | 
707 | 			vi.spyOn(migrationService as any, "notifyProgress").mockImplementation(
                  ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:707:13)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:699:41)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should track migration progress [0.10ms]
714 | 			expect(progressEvents.length).toBeGreaterThan(0);
715 | 		});
716 | 
717 | 		it("should handle user-specific migration", async () => {
718 | 			const userId = "user-123";
719 | 			const result = await migrationService.startMigration(
                              ^
ReferenceError: migrationService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:719:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:717:47)
(fail) Migration System Comprehensive Tests > Migration Service Integration > should handle user-specific migration
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
741 | 			});
742 | 
743 | 			const result = await backupService.createBackup({
                              ^
ReferenceError: backupService is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:743:25)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:737:51)
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle localStorage quota exceeded [0.13ms]
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle invalid JSON in localStorage [0.06ms]
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle invalid JSON in localStorage
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle empty localStorage gracefully [0.12ms]
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle empty localStorage gracefully
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle database connection errors [0.06ms]
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle database connection errors
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle corrupted backup data [0.02ms]
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle corrupted backup data
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle concurrent migration attempts [0.07ms]
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle concurrent migration attempts
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle large datasets efficiently [0.07ms]
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle large datasets efficiently
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Error Handling and Edge Cases > should handle memory constraints during migration
(fail) Migration System Comprehensive Tests > should handle memory constraints during migration
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Performance and Optimization > should complete migration within reasonable time [0.10ms]
(fail) Migration System Comprehensive Tests > Performance and Optimization > should complete migration within reasonable time
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Performance and Optimization > should use efficient batch processing [0.02ms]
(fail) Migration System Comprehensive Tests > Performance and Optimization > should use efficient batch processing
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Performance and Optimization > should handle retry logic correctly [0.08ms]
(fail) Migration System Comprehensive Tests > Performance and Optimization > should handle retry logic correctly
735 | 
736 | 	describe("Error Handling and Edge Cases", () => {
737 | 		it("should handle localStorage quota exceeded", async () => {
738 | 			// Mock localStorage quota exceeded error
739 | 			vi.spyOn(mockLocalStorage, "setItem").mockImplementation(() => {
740 | 				throw new Error("QuotaExceededError");
                                              ^
error: QuotaExceededError
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:740:41)
      at setupMockLocalStorage (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:139:19)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/migration/migration-system.test.ts:202:3)
(fail) Migration System Comprehensive Tests > Performance and Optimization > should optimize backup compression [0.06ms]
(fail) Migration System Comprehensive Tests > should optimize backup compression

test/lib/migration/validation-service.test.ts:

# Unhandled error between tests
-------------------------------
32 | 
33 | const mockEnvironments = {
34 | 	id: "env_id",
35 | };
36 | 
37 | vi.mock("@/lib/db", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/db", () => ({
  db: mockDb,
  tasks: mockTasks,
  environments: mockEnvironments
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/test/lib/migration/validation-service.test.ts:37:4
      at loadAndEvaluateModule (2:1)
-------------------------------


lib/testing/documentation/test-documentation.test.ts:
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Coverage Report Generation > should generate coverage summary [1.40ms]
(fail) CoverageVisualizer > Coverage Report Generation > should generate coverage summary
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Coverage Report Generation > should identify uncovered areas [0.05ms]
(fail) CoverageVisualizer > should identify uncovered areas
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Visual Report Generation > should generate HTML coverage report
(fail) CoverageVisualizer > Visual Report Generation > should generate HTML coverage report
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Visual Report Generation > should generate coverage badge SVG
(fail) CoverageVisualizer > Visual Report Generation > should generate coverage badge SVG
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Visual Report Generation > should generate coverage trend chart
(fail) CoverageVisualizer > should generate coverage trend chart
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Coverage Analysis > should analyze coverage quality [0.02ms]
(fail) CoverageVisualizer > Coverage Analysis > should analyze coverage quality
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Coverage Analysis > should identify coverage gaps [0.04ms]
(fail) CoverageVisualizer > should identify coverage gaps
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Integration with CI/CD > should generate coverage check for PR [0.01ms]
(fail) CoverageVisualizer > Integration with CI/CD > should generate coverage check for PR
202 | 
203 | describe("CoverageVisualizer", () => {
204 | 	let visualizer: CoverageVisualizer;
205 | 
206 | 	beforeEach(() => {
207 | 		visualizer = new CoverageVisualizer();
                         ^
ReferenceError: CoverageVisualizer is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:207:20)
(fail) CoverageVisualizer > Integration with CI/CD > should pass coverage check for improvements
(fail) CoverageVisualizer > should pass coverage check for improvements
362 | 
363 | describe("DocumentationGenerator", () => {
364 | 	let generator: DocumentationGenerator;
365 | 
366 | 	beforeEach(() => {
367 | 		generator = new DocumentationGenerator();
                        ^
ReferenceError: DocumentationGenerator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:367:19)
(fail) DocumentationGenerator > Test Documentation Generation > should generate comprehensive test documentation [0.04ms]
(fail) DocumentationGenerator > Test Documentation Generation > should generate comprehensive test documentation
362 | 
363 | describe("DocumentationGenerator", () => {
364 | 	let generator: DocumentationGenerator;
365 | 
366 | 	beforeEach(() => {
367 | 		generator = new DocumentationGenerator();
                        ^
ReferenceError: DocumentationGenerator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:367:19)
(fail) DocumentationGenerator > Test Documentation Generation > should extract test metadata [0.12ms]
(fail) DocumentationGenerator > should extract test metadata
362 | 
363 | describe("DocumentationGenerator", () => {
364 | 	let generator: DocumentationGenerator;
365 | 
366 | 	beforeEach(() => {
367 | 		generator = new DocumentationGenerator();
                        ^
ReferenceError: DocumentationGenerator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:367:19)
(fail) DocumentationGenerator > API Documentation Generation > should generate API test documentation
(fail) DocumentationGenerator > should generate API test documentation
362 | 
363 | describe("DocumentationGenerator", () => {
364 | 	let generator: DocumentationGenerator;
365 | 
366 | 	beforeEach(() => {
367 | 		generator = new DocumentationGenerator();
                        ^
ReferenceError: DocumentationGenerator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:367:19)
(fail) DocumentationGenerator > Documentation Export > should export documentation to multiple formats
(fail) DocumentationGenerator > should export documentation to multiple formats
362 | 
363 | describe("DocumentationGenerator", () => {
364 | 	let generator: DocumentationGenerator;
365 | 
366 | 	beforeEach(() => {
367 | 		generator = new DocumentationGenerator();
                        ^
ReferenceError: DocumentationGenerator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/documentation/test-documentation.test.ts:367:19)
(fail) DocumentationGenerator > Test Coverage Integration > should integrate test docs with coverage data [0.02ms]
(fail) DocumentationGenerator > should integrate test docs with coverage data

lib/testing/builders/test-data-builder.test.ts:
1 | import { UserBuilder } from "./test-data-builder";
2 | 
3 | describe("TestDataBuilder", () => {
4 | 	describe("Base Builder Pattern", () => {
5 | 		it("should create a basic builder with default values", () => {
6 | 			const builder = new TestDataBuilder({
                           ^
ReferenceError: TestDataBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:6:24)
(fail) TestDataBuilder > Base Builder Pattern > should create a basic builder with default values [24.82ms]
15 | 				name: "default",
16 | 			});
17 | 		});
18 | 
19 | 		it("should allow overriding values", () => {
20 | 			const builder = new TestDataBuilder({
                            ^
ReferenceError: TestDataBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:20:24)
(fail) TestDataBuilder > Base Builder Pattern > should allow overriding values [0.35ms]
29 | 				name: "custom",
30 | 			});
31 | 		});
32 | 
33 | 		it("should support chaining", () => {
34 | 			const builder = new TestDataBuilder({ count: 0 });
                            ^
ReferenceError: TestDataBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:34:24)
(fail) TestDataBuilder > Base Builder Pattern > should support chaining [0.13ms]
78 | 		});
79 | 	});
80 | 
81 | 	describe("ProjectBuilder", () => {
82 | 		it("should create project with default values", () => {
83 | 			const project = new ProjectBuilder().build();
                            ^
ReferenceError: ProjectBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:83:24)
(fail) TestDataBuilder > ProjectBuilder > should create project with default values [0.12ms]
90 | 			expect(project.collaborators).toHaveLength(0);
91 | 			expect(project.createdAt).toBeInstanceOf(Date);
92 | 		});
93 | 
94 | 		it("should create project with collaborators", () => {
95 | 			const project = new ProjectBuilder().withCollaborators(3).build();
                            ^
ReferenceError: ProjectBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:95:24)
(fail) TestDataBuilder > ProjectBuilder > should create project with collaborators [0.03ms]
 97 | 			expect(project.collaborators).toHaveLength(3);
 98 | 			expect(project.collaborators[0]).toHaveProperty("id");
 99 | 		});
100 | 
101 | 		it("should create archived project", () => {
102 | 			const project = new ProjectBuilder().archived().build();
                             ^
ReferenceError: ProjectBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:102:24)
(fail) TestDataBuilder > ProjectBuilder > should create archived project [0.04ms]
104 | 			expect(project.status).toBe("archived");
105 | 		});
106 | 
107 | 		it("should create project with custom owner", () => {
108 | 			const owner = new UserBuilder().withEmail("owner@test.com").build();
109 | 			const project = new ProjectBuilder().withOwner(owner).build();
                             ^
ReferenceError: ProjectBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:109:24)
(fail) TestDataBuilder > ProjectBuilder > should create project with custom owner
112 | 		});
113 | 	});
114 | 
115 | 	describe("ApiResponseBuilder", () => {
116 | 		it("should create successful API response", () => {
117 | 			const response = new ApiResponseBuilder()
                              ^
ReferenceError: ApiResponseBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:117:25)
(fail) TestDataBuilder > ApiResponseBuilder > should create successful API response [0.01ms]
124 | 			expect(response.data).toEqual({ message: "Hello" });
125 | 			expect(response.error).toBeNull();
126 | 		});
127 | 
128 | 		it("should create error API response", () => {
129 | 			const response = new ApiResponseBuilder().error("Not found", 404).build();
                              ^
ReferenceError: ApiResponseBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:129:25)
(fail) TestDataBuilder > ApiResponseBuilder > should create error API response [0.06ms]
133 | 			expect(response.error).toBe("Not found");
134 | 			expect(response.data).toBeNull();
135 | 		});
136 | 
137 | 		it("should create loading state", () => {
138 | 			const response = new ApiResponseBuilder().loading().build();
                              ^
ReferenceError: ApiResponseBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:138:25)
(fail) TestDataBuilder > ApiResponseBuilder > should create loading state [0.03ms]
141 | 			expect(response.data).toBeNull();
142 | 		});
143 | 
144 | 		it("should create paginated response", () => {
145 | 			const users = UserBuilder.createMany(5);
146 | 			const response = new ApiResponseBuilder()
                              ^
ReferenceError: ApiResponseBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:146:25)
(fail) TestDataBuilder > ApiResponseBuilder > should create paginated response [0.12ms]
158 | 		});
159 | 	});
160 | 
161 | 	describe("Builder Factory", () => {
162 | 		it("should create builders from factory", () => {
163 | 			const factory = TestDataBuilder.createFactory();
                         ^
ReferenceError: TestDataBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:163:20)
(fail) TestDataBuilder > Builder Factory > should create builders from factory [0.80ms]
170 | 			expect(project).toHaveProperty("id");
171 | 			expect(response.success).toBe(true);
172 | 		});
173 | 
174 | 		it("should support preset configurations", () => {
175 | 			const factory = TestDataBuilder.createFactory();
                         ^
ReferenceError: TestDataBuilder is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/builders/test-data-builder.test.ts:175:20)
(fail) TestDataBuilder > Builder Factory > should support preset configurations [0.09ms]

lib/testing/lifecycle/test-lifecycle.test.ts:
 7 | 		manager = new TestLifecycleManager();
 8 | 	});
 9 | 
10 | 	describe("Hook Registration", () => {
11 | 		it("should register beforeEach hooks", () => {
12 | 			const hook = vi.fn();
                     ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:12:17)
(fail) TestLifecycleManager > Hook Registration > should register beforeEach hooks [0.81ms]
16 | 			expect(hooks).toHaveLength(1);
17 | 			expect(hooks[0].name).toBe("setup-db");
18 | 		});
19 | 
20 | 		it("should register afterEach hooks", () => {
21 | 			const hook = vi.fn();
                     ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:21:17)
(fail) TestLifecycleManager > Hook Registration > should register afterEach hooks [0.09ms]
25 | 			expect(hooks).toHaveLength(1);
26 | 			expect(hooks[0].name).toBe("cleanup-db");
27 | 		});
28 | 
29 | 		it("should register beforeAll hooks", () => {
30 | 			const hook = vi.fn();
                     ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:30:17)
(fail) TestLifecycleManager > Hook Registration > should register beforeAll hooks [0.09ms]
34 | 			expect(hooks).toHaveLength(1);
35 | 			expect(hooks[0].name).toBe("start-server");
36 | 		});
37 | 
38 | 		it("should register afterAll hooks", () => {
39 | 			const hook = vi.fn();
                     ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:39:17)
(fail) TestLifecycleManager > Hook Registration > should register afterAll hooks [0.43ms]
85 | 
86 | 			await expect(manager.executeBeforeEach()).rejects.toThrow("Hook failed");
87 | 		});
88 | 
89 | 		it("should support conditional hooks", async () => {
90 | 			const hook = vi.fn();
                     ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:90:17)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:89:42)
(fail) TestLifecycleManager > Hook Execution > should support conditional hooks [0.12ms]
133 | 
134 | describe("ResourceManager", () => {
135 | 	let resourceManager: ResourceManager;
136 | 
137 | 	beforeEach(() => {
138 | 		resourceManager = new ResourceManager();
                              ^
ReferenceError: ResourceManager is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:138:25)
(fail) ResourceManager > Resource Registration > should register database resource [0.12ms]
(fail) ResourceManager > Resource Registration > should register database resource
133 | 
134 | describe("ResourceManager", () => {
135 | 	let resourceManager: ResourceManager;
136 | 
137 | 	beforeEach(() => {
138 | 		resourceManager = new ResourceManager();
                              ^
ReferenceError: ResourceManager is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:138:25)
(fail) ResourceManager > Resource Registration > should register HTTP server resource [0.06ms]
(fail) ResourceManager > Resource Registration > should register HTTP server resource
133 | 
134 | describe("ResourceManager", () => {
135 | 	let resourceManager: ResourceManager;
136 | 
137 | 	beforeEach(() => {
138 | 		resourceManager = new ResourceManager();
                              ^
ReferenceError: ResourceManager is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:138:25)
(fail) ResourceManager > Resource Registration > should register file system resource [0.15ms]
(fail) ResourceManager > should register file system resource
133 | 
134 | describe("ResourceManager", () => {
135 | 	let resourceManager: ResourceManager;
136 | 
137 | 	beforeEach(() => {
138 | 		resourceManager = new ResourceManager();
                              ^
ReferenceError: ResourceManager is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:138:25)
(fail) ResourceManager > Resource Lifecycle > should setup resource only once [0.12ms]
(fail) ResourceManager > Resource Lifecycle > should setup resource only once
133 | 
134 | describe("ResourceManager", () => {
135 | 	let resourceManager: ResourceManager;
136 | 
137 | 	beforeEach(() => {
138 | 		resourceManager = new ResourceManager();
                              ^
ReferenceError: ResourceManager is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:138:25)
(fail) ResourceManager > Resource Lifecycle > should cleanup resources in reverse order [0.07ms]
(fail) ResourceManager > Resource Lifecycle > should cleanup resources in reverse order
133 | 
134 | describe("ResourceManager", () => {
135 | 	let resourceManager: ResourceManager;
136 | 
137 | 	beforeEach(() => {
138 | 		resourceManager = new ResourceManager();
                              ^
ReferenceError: ResourceManager is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:138:25)
(fail) ResourceManager > Resource Lifecycle > should handle cleanup failures gracefully [0.43ms]
(fail) ResourceManager > should handle cleanup failures gracefully
133 | 
134 | describe("ResourceManager", () => {
135 | 	let resourceManager: ResourceManager;
136 | 
137 | 	beforeEach(() => {
138 | 		resourceManager = new ResourceManager();
                              ^
ReferenceError: ResourceManager is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:138:25)
(fail) ResourceManager > Resource Dependencies > should setup dependent resources in correct order [0.04ms]
(fail) ResourceManager > Resource Dependencies > should setup dependent resources in correct order
133 | 
134 | describe("ResourceManager", () => {
135 | 	let resourceManager: ResourceManager;
136 | 
137 | 	beforeEach(() => {
138 | 		resourceManager = new ResourceManager();
                              ^
ReferenceError: ResourceManager is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:138:25)
(fail) ResourceManager > Resource Dependencies > should handle transitive dependencies
(fail) ResourceManager > should handle transitive dependencies
291 | 
292 | describe("SetupTeardownOrchestrator", () => {
293 | 	let orchestrator: SetupTeardownOrchestrator;
294 | 
295 | 	beforeEach(() => {
296 | 		orchestrator = new SetupTeardownOrchestrator();
                           ^
ReferenceError: SetupTeardownOrchestrator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:296:22)
(fail) SetupTeardownOrchestrator > Test Isolation > should isolate tests with separate contexts [0.04ms]
(fail) SetupTeardownOrchestrator > Test Isolation > should isolate tests with separate contexts
291 | 
292 | describe("SetupTeardownOrchestrator", () => {
293 | 	let orchestrator: SetupTeardownOrchestrator;
294 | 
295 | 	beforeEach(() => {
296 | 		orchestrator = new SetupTeardownOrchestrator();
                           ^
ReferenceError: SetupTeardownOrchestrator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:296:22)
(fail) SetupTeardownOrchestrator > Test Isolation > should cleanup test context after test
(fail) SetupTeardownOrchestrator > Test Isolation > should cleanup test context after test
291 | 
292 | describe("SetupTeardownOrchestrator", () => {
293 | 	let orchestrator: SetupTeardownOrchestrator;
294 | 
295 | 	beforeEach(() => {
296 | 		orchestrator = new SetupTeardownOrchestrator();
                           ^
ReferenceError: SetupTeardownOrchestrator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:296:22)
(fail) SetupTeardownOrchestrator > Test Isolation > should handle parallel test contexts
(fail) SetupTeardownOrchestrator > should handle parallel test contexts
291 | 
292 | describe("SetupTeardownOrchestrator", () => {
293 | 	let orchestrator: SetupTeardownOrchestrator;
294 | 
295 | 	beforeEach(() => {
296 | 		orchestrator = new SetupTeardownOrchestrator();
                           ^
ReferenceError: SetupTeardownOrchestrator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:296:22)
(fail) SetupTeardownOrchestrator > Global State Management > should manage global test state
(fail) SetupTeardownOrchestrator > Global State Management > should manage global test state
291 | 
292 | describe("SetupTeardownOrchestrator", () => {
293 | 	let orchestrator: SetupTeardownOrchestrator;
294 | 
295 | 	beforeEach(() => {
296 | 		orchestrator = new SetupTeardownOrchestrator();
                           ^
ReferenceError: SetupTeardownOrchestrator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:296:22)
(fail) SetupTeardownOrchestrator > Global State Management > should reset global state between test suites
(fail) SetupTeardownOrchestrator > Global State Management > should reset global state between test suites
291 | 
292 | describe("SetupTeardownOrchestrator", () => {
293 | 	let orchestrator: SetupTeardownOrchestrator;
294 | 
295 | 	beforeEach(() => {
296 | 		orchestrator = new SetupTeardownOrchestrator();
                           ^
ReferenceError: SetupTeardownOrchestrator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:296:22)
(fail) SetupTeardownOrchestrator > Global State Management > should persist global state across test contexts
(fail) SetupTeardownOrchestrator > should persist global state across test contexts
291 | 
292 | describe("SetupTeardownOrchestrator", () => {
293 | 	let orchestrator: SetupTeardownOrchestrator;
294 | 
295 | 	beforeEach(() => {
296 | 		orchestrator = new SetupTeardownOrchestrator();
                           ^
ReferenceError: SetupTeardownOrchestrator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:296:22)
(fail) SetupTeardownOrchestrator > Error Recovery > should recover from setup failures
(fail) SetupTeardownOrchestrator > Error Recovery > should recover from setup failures
291 | 
292 | describe("SetupTeardownOrchestrator", () => {
293 | 	let orchestrator: SetupTeardownOrchestrator;
294 | 
295 | 	beforeEach(() => {
296 | 		orchestrator = new SetupTeardownOrchestrator();
                           ^
ReferenceError: SetupTeardownOrchestrator is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/lifecycle/test-lifecycle.test.ts:296:22)
(fail) SetupTeardownOrchestrator > Error Recovery > should continue cleanup even if some cleanups fail
(fail) SetupTeardownOrchestrator > should continue cleanup even if some cleanups fail

lib/testing/cli/tdd-cli.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { promises as fs } from "fs";
2 | import path from "path";
3 | import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
4 | 
5 | // Mock file system operations
6 | vi.mock("fs", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("fs", () => ({
  promises: {
    writeFile: vi.fn(),
    readFile: vi.fn(),
    mkdir: vi.fn(),
    readdir: vi.fn(),
    stat: vi.fn(),
    access: vi.fn()
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/lib/testing/cli/tdd-cli.test.ts:6:4
      at loadAndEvaluateModule (2:1)
-------------------------------

Executing step: step1
Executing step: step2
Executing parallel step: parallel1
Executing parallel step: parallel2
Executing step: failing step

lib/testing/performance/performance-testing.test.ts:
58 | 		});
59 | 	});
60 | 
61 | 	describe("Component Rendering Benchmarks", () => {
62 | 		it("should measure component render time", async () => {
63 | 			const mockRender = vi.fn().mockImplementation(() => {
                           ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:63:23)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:62:46)
(fail) PerformanceBenchmark > Component Rendering Benchmarks > should measure component render time [14.03ms]
88 | 				{ data: [{ id: 1 }, { id: 2 }] },
89 | 				{ data: [{ id: 1 }, { id: 2 }, { id: 3 }] },
90 | 				{ data: [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }] },
91 | 			];
92 | 
93 | 			const result = await benchmark.measureComponentWithProps(
                                       ^
TypeError: benchmark.measureComponentWithProps is not a function. (In 'benchmark.measureComponentWithProps(Component, propsVariations)', 'benchmark.measureComponentWithProps' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:93:35)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:81:53)
(fail) PerformanceBenchmark > Component Rendering Benchmarks > should measure component with props changes [0.25ms]
102 | 		});
103 | 	});
104 | 
105 | 	describe("API Performance Testing", () => {
106 | 		it("should measure API response times", async () => {
107 | 			const mockFetch = vi.fn().mockImplementation(async () => {
                           ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:107:22)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:106:43)
(fail) PerformanceBenchmark > API Performance Testing > should measure API response times [8.92ms]
125 | 			expect(result.iterations).toBe(2);
126 | 			expect(mockFetch).toHaveBeenCalledTimes(5); // 3 warmup + 2 actual iterations
127 | 		});
128 | 
129 | 		it("should handle API errors gracefully", async () => {
130 | 			const mockFetch = vi.fn().mockRejectedValue(new Error("Network error"));
                           ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:130:22)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:129:45)
(fail) PerformanceBenchmark > API Performance Testing > should handle API errors gracefully [3.60ms]
146 | 					maxTime: 10, // 10ms threshold
147 | 					targetTime: 5, // 5ms target
148 | 				},
149 | 			});
150 | 
151 | 			expect(result.passedThresholds).toBe(true);
                                         ^
error: expect(received).toBe(expected)

Expected: true
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:151:36)
(fail) PerformanceBenchmark > Threshold Validation > should validate performance against thresholds [0.86ms]
166 | 					maxTime: 10, // 10ms threshold - should fail
167 | 					targetTime: 5, // 5ms target - should fail
168 | 				},
169 | 			});
170 | 
171 | 			expect(result.passedThresholds).toBe(false);
                                         ^
error: expect(received).toBe(expected)

Expected: false
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:171:36)
(fail) PerformanceBenchmark > Threshold Validation > should detect threshold violations [343.10ms]
191 | 
192 | 			const regression = benchmark.detectRegression(baseline, current, {
193 | 				threshold: 0.2,
194 | 			}); // 20% threshold
195 | 
196 | 			expect(regression.hasRegression).toBe(true);
                                          ^
error: expect(received).toBe(expected)

Expected: true
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:196:37)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:177:47)
(fail) PerformanceBenchmark > Regression Detection > should detect performance regressions [0.52ms]
215 | 
216 | 			const regression = benchmark.detectRegression(baseline, current, {
217 | 				threshold: 0.2,
218 | 			}); // 20% threshold
219 | 
220 | 			expect(regression.hasRegression).toBe(false);
                                          ^
error: expect(received).toBe(expected)

Expected: false
Received: undefined

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:220:37)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:201:52)
(fail) PerformanceBenchmark > Regression Detection > should ignore minor performance variations [0.12ms]
231 | 		profiler = new MemoryProfiler();
232 | 	});
233 | 
234 | 	describe("Memory Usage Tracking", () => {
235 | 		beforeEach(() => {
236 | 			profiler.resetMockMemory();
                  ^
TypeError: profiler.resetMockMemory is not a function. (In 'profiler.resetMockMemory()', 'profiler.resetMockMemory' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:236:13)
(fail) MemoryProfiler > Memory Usage Tracking > should measure memory usage during function execution [8.47ms]
(fail) MemoryProfiler > Memory Usage Tracking > should measure memory usage during function execution
231 | 		profiler = new MemoryProfiler();
232 | 	});
233 | 
234 | 	describe("Memory Usage Tracking", () => {
235 | 		beforeEach(() => {
236 | 			profiler.resetMockMemory();
                  ^
TypeError: profiler.resetMockMemory is not a function. (In 'profiler.resetMockMemory()', 'profiler.resetMockMemory' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:236:13)
(fail) MemoryProfiler > Memory Usage Tracking > should detect memory leaks [0.17ms]
(fail) MemoryProfiler > Memory Usage Tracking > should detect memory leaks
231 | 		profiler = new MemoryProfiler();
232 | 	});
233 | 
234 | 	describe("Memory Usage Tracking", () => {
235 | 		beforeEach(() => {
236 | 			profiler.resetMockMemory();
                  ^
TypeError: profiler.resetMockMemory is not a function. (In 'profiler.resetMockMemory()', 'profiler.resetMockMemory' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:236:13)
(fail) MemoryProfiler > Memory Usage Tracking > should handle memory cleanup properly [0.08ms]
(fail) MemoryProfiler > should handle memory cleanup properly
279 | 		});
280 | 	});
281 | 
282 | 	describe("Memory Snapshots", () => {
283 | 		beforeEach(() => {
284 | 			profiler.resetMockMemory();
                  ^
TypeError: profiler.resetMockMemory is not a function. (In 'profiler.resetMockMemory()', 'profiler.resetMockMemory' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:284:13)
(fail) MemoryProfiler > Memory Snapshots > should create memory snapshots [0.06ms]
(fail) MemoryProfiler > Memory Snapshots > should create memory snapshots
279 | 		});
280 | 	});
281 | 
282 | 	describe("Memory Snapshots", () => {
283 | 		beforeEach(() => {
284 | 			profiler.resetMockMemory();
                  ^
TypeError: profiler.resetMockMemory is not a function. (In 'profiler.resetMockMemory()', 'profiler.resetMockMemory' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:284:13)
(fail) MemoryProfiler > Memory Snapshots > should compare memory snapshots
(fail) MemoryProfiler > should compare memory snapshots
315 | 	});
316 | 
317 | 	describe("Garbage Collection Monitoring", () => {
318 | 		it("should monitor garbage collection events", async () => {
319 | 			// This test would need actual GC events in a real environment
320 | 			const gcStats = profiler.getGarbageCollectionStats();
                                  ^
TypeError: profiler.getGarbageCollectionStats is not a function. (In 'profiler.getGarbageCollectionStats()', 'profiler.getGarbageCollectionStats' is undefined)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:320:29)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:318:50)
(fail) MemoryProfiler > Garbage Collection Monitoring > should monitor garbage collection events
334 | 			await profiler.forceGarbageCollection();
335 | 
336 | 			const afterGC = await profiler.createSnapshot();
337 | 
338 | 			// After GC, memory usage might be lower (but our mock keeps incrementing)
339 | 			expect(afterGC.usedJSHeapSize).toBeGreaterThan(beforeGC.usedJSHeapSize); // Mock shows continued growth
                                        ^
error: Expected and actual values must be numbers or bigints
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:339:35)
(fail) MemoryProfiler > Garbage Collection Monitoring > should force garbage collection for testing [0.16ms]
343 | 
344 | describe("PerformanceReporter", () => {
345 | 	let reporter: PerformanceReporter;
346 | 
347 | 	beforeEach(() => {
348 | 		reporter = new PerformanceReporter();
                       ^
ReferenceError: PerformanceReporter is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:348:18)
(fail) PerformanceReporter > Report Generation > should generate performance report [0.10ms]
(fail) PerformanceReporter > Report Generation > should generate performance report
343 | 
344 | describe("PerformanceReporter", () => {
345 | 	let reporter: PerformanceReporter;
346 | 
347 | 	beforeEach(() => {
348 | 		reporter = new PerformanceReporter();
                       ^
ReferenceError: PerformanceReporter is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:348:18)
(fail) PerformanceReporter > Report Generation > should generate HTML report with graphs [0.03ms]
(fail) PerformanceReporter > Report Generation > should generate HTML report with graphs
343 | 
344 | describe("PerformanceReporter", () => {
345 | 	let reporter: PerformanceReporter;
346 | 
347 | 	beforeEach(() => {
348 | 		reporter = new PerformanceReporter();
                       ^
ReferenceError: PerformanceReporter is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:348:18)
(fail) PerformanceReporter > Report Generation > should generate JSON report for CI integration [0.03ms]
(fail) PerformanceReporter > should generate JSON report for CI integration
343 | 
344 | describe("PerformanceReporter", () => {
345 | 	let reporter: PerformanceReporter;
346 | 
347 | 	beforeEach(() => {
348 | 		reporter = new PerformanceReporter();
                       ^
ReferenceError: PerformanceReporter is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:348:18)
(fail) PerformanceReporter > Trend Analysis > should track performance trends over time [0.11ms]
(fail) PerformanceReporter > Trend Analysis > should track performance trends over time
343 | 
344 | describe("PerformanceReporter", () => {
345 | 	let reporter: PerformanceReporter;
346 | 
347 | 	beforeEach(() => {
348 | 		reporter = new PerformanceReporter();
                       ^
ReferenceError: PerformanceReporter is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:348:18)
(fail) PerformanceReporter > Trend Analysis > should detect performance improvements [0.08ms]
(fail) PerformanceReporter > should detect performance improvements
343 | 
344 | describe("PerformanceReporter", () => {
345 | 	let reporter: PerformanceReporter;
346 | 
347 | 	beforeEach(() => {
348 | 		reporter = new PerformanceReporter();
                       ^
ReferenceError: PerformanceReporter is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:348:18)
(fail) PerformanceReporter > Integration with CI/CD > should generate CI-friendly output [0.09ms]
(fail) PerformanceReporter > Integration with CI/CD > should generate CI-friendly output
343 | 
344 | describe("PerformanceReporter", () => {
345 | 	let reporter: PerformanceReporter;
346 | 
347 | 	beforeEach(() => {
348 | 		reporter = new PerformanceReporter();
                       ^
ReferenceError: PerformanceReporter is not defined
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/lib/testing/performance/performance-testing.test.ts:348:18)
(fail) PerformanceReporter > Integration with CI/CD > should provide exit codes for CI [0.02ms]
(fail) PerformanceReporter > should provide exit codes for CI

lib/monitoring/tests/monitoring.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'SlackChannel' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/monitoring/notifications/index.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


lib/letta/agents/brainstorm.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { beforeEach, describe, expect, it, vi } from "vitest";
2 | import { BrainstormAgent } from "./brainstorm";
3 | 
4 | // Mock the Letta client
5 | vi.mock("../client", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("../client", () => ({
  LettaClient: vi.fn().mockImplementation(() => ({
    createAgent: vi.fn(),
    sendMessage: vi.fn(),
    getMemory: vi.fn(),
    updateMemory: vi.fn(),
    deleteAgent: vi.fn()
  }))
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/lib/letta/agents/brainstorm.test.ts:5:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/features/example-feature/schemas.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'exampleItemSchema' not found in module '/Users/neo/Developer/experiments/vibex-app/src/features/example-feature/schemas.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


src/shared/schemas/validation.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'NonEmptyStringSchema' not found in module '/Users/neo/Developer/experiments/vibex-app/src/shared/schemas/validation.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


src/components/Auth/ClaudeAuthButton.test.tsx:

# Unhandled error between tests
-------------------------------
3 | import type React from "react";
4 | import { afterEach, beforeEach, describe, expect, it, vi } from "vitest";
5 | 
6 | // Mock the auth hook
7 | const mockUseClaudeAuth = vi.fn();
8 | vi.mock("@/src/hooks/useClaudeAuth", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/src/hooks/useClaudeAuth", () => ({
  useClaudeAuth: () => mockUseClaudeAuth()
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/components/Auth/ClaudeAuthButton.test.tsx:8:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/hooks/useZodForm/fieldHelpers.test.ts:
170 | 				field3: { message: undefined }, // Undefined message
171 | 			};
172 | 
173 | 			const errors = getFormErrors(mockForm);
174 | 
175 | 			expect(errors).toEqual({
                        ^
error: expect(received).toEqual(expected)

  {
    field1: "Error 1",
-   field2: "Invalid value",
-   field3: "Invalid value",
  }

- Expected  - 2
+ Received  + 0

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/fieldHelpers.test.ts:175:19)
(fail) fieldHelpers > getFormErrors > should handle errors without messages [0.67ms]
268 | 			});
269 | 
270 | 			const dirtyFields = getDirtyFields(mockForm);
271 | 
272 | 			// The implementation doesn't filter out false values, it includes all keys
273 | 			expect(dirtyFields).toEqual({
                             ^
error: expect(received).toEqual(expected)

  {
    field1: "value1",
-   field2: "value2",
    field3: "value3",
  }

- Expected  - 1
+ Received  + 0

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/fieldHelpers.test.ts:273:24)
(fail) fieldHelpers > getDirtyFields > should handle false dirty field values [0.07ms]
291 | 				age: 26,
292 | 			});
293 | 
294 | 			const changedFields = getChangedFields(mockForm, initialData);
295 | 
296 | 			expect(changedFields).toEqual({
                               ^
error: expect(received).toEqual(expected)

+ {}
- {
-   age: 26,
-   username: "new_user",
- }

- Expected  - 4
+ Received  + 1

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/fieldHelpers.test.ts:296:26)
(fail) fieldHelpers > getChangedFields > should return fields that have changed from initial data [0.05ms]
308 | 				field2: "value2", // New field
309 | 			});
310 | 
311 | 			const changedFields = getChangedFields(mockForm, initialData);
312 | 
313 | 			expect(changedFields).toEqual({
                               ^
error: expect(received).toEqual(expected)

+ {}
- {
-   field2: "value2",
- }

- Expected  - 3
+ Received  + 1

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/fieldHelpers.test.ts:313:26)
(fail) fieldHelpers > getChangedFields > should detect new fields added
321 | 				field2: "value2",
322 | 			});
323 | 
324 | 			const changedFields = getChangedFields(mockForm, {});
325 | 
326 | 			expect(changedFields).toEqual({
                               ^
error: expect(received).toEqual(expected)

+ {}
- {
-   field1: "value1",
-   field2: "value2",
- }

- Expected  - 4
+ Received  + 1

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/fieldHelpers.test.ts:326:26)
(fail) fieldHelpers > getChangedFields > should handle empty initial data [0.17ms]
353 | 				field3: null, // string -> null
354 | 			});
355 | 
356 | 			const changedFields = getChangedFields(mockForm, initialData);
357 | 
358 | 			expect(changedFields).toEqual({
                               ^
error: expect(received).toEqual(expected)

+ {}
- {
-   field1: "new value",
-   field3: null,
- }

- Expected  - 4
+ Received  + 1

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/fieldHelpers.test.ts:358:26)
(fail) fieldHelpers > getChangedFields > should handle null and undefined values correctly [0.05ms]
377 | 				obj: { a: 1 }, // Same object reference would be different
378 | 			});
379 | 
380 | 			const changedFields = getChangedFields(mockForm, initialData);
381 | 
382 | 			expect(changedFields).toEqual({
                               ^
error: expect(received).toEqual(expected)

+ {}
- {
-   arr: [
-     1,
-     2,
-     3
-   ],
-   bool: false,
-   obj: {
-     a: 1,
-   },
-   str: "world",
- }

- Expected  - 12
+ Received  + 1

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/fieldHelpers.test.ts:382:26)
(fail) fieldHelpers > getChangedFields > should handle complex value comparisons

src/hooks/useZodForm/storage.test.ts:

# Unhandled error between tests
-------------------------------
26 | 
27 | // Mock console
28 | const mockConsole = {
29 | 	error: vi.fn(),
30 | };
31 | mock.stubGlobal("console", mockConsole);
     ^
ReferenceError: mock is not defined
      at /Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/storage.test.ts:31:1
      at loadAndEvaluateModule (2:1)
-------------------------------


src/hooks/useZodForm/formState.test.ts:
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:26:22)
(fail) useFormState > should return correct state for pristine valid form [12.21ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:43:22)
(fail) useFormState > should detect errors correctly [0.72ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:55:22)
(fail) useFormState > should handle single error [0.50ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:69:22)
(fail) useFormState > should handle nested errors [0.35ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:82:22)
(fail) useFormState > should consider form invalid when there are errors despite isValid flag [0.67ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:91:22)
(fail) useFormState > should handle dirty state [0.48ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:106:22)
(fail) useFormState > should handle all states combined [1.15ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:118:32)
(fail) useFormState > should update when form state changes [1.04ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:142:32)
(fail) useFormState > should memoize results correctly [0.69ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:160:22)
(fail) useFormState > should handle empty error messages [0.76ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:178:22)
(fail) useFormState > should handle complex error structures [0.50ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:186:22)
(fail) useFormState > should handle form with no formState [0.79ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:208:32)
(fail) useFormState > should recalculate when isDirty changes [0.62ms]
24873 |           "font-weight:bold"
24874 |         );
24875 |     }
24876 |     exports.createRoot = function (container, options) {
24877 |       if (!isValidContainer(container))
24878 |         throw Error("Target container is not a DOM element.");
                                                                    ^
error: Target container is not a DOM element.
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/node_modules/react-dom/cjs/react-dom-client.development.js:24878:61)
      at createConcurrentRoot (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:147:27)
      at render (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:266:12)
      at renderHook (/Users/neo/Developer/experiments/vibex-app/node_modules/@testing-library/react/dist/pure.js:340:7)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/formState.test.ts:234:32)
(fail) useFormState > should handle validation state transitions [0.57ms]

src/hooks/useZodForm/validation.test.ts:

# Unhandled error between tests
-------------------------------
15 | 	validateAllFormFields,
16 | 	validateSingleField,
17 | } from "./validation";
18 | 
19 | // Mock react-hook-form
20 | vi.mock("react-hook-form", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("react-hook-form", () => ({
  useForm: vi.fn()
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/hooks/useZodForm/validation.test.ts:20:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/lib/auth/pkce.test.ts:

# Unhandled error between tests
-------------------------------
11 | 	vi,
12 | } from "vitest";
13 | import { generateCodeChallenge, generateCodeVerifier } from "./pkce";
14 | 
15 | // Mock crypto module
16 | vi.mock("crypto");
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("crypto")', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/lib/auth/pkce.test.ts:16:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/lib/auth/claude-auth.test.ts:

# Unhandled error between tests
-------------------------------
10 | } from "vitest";
11 | import { ClaudeAuthClient } from "./claude-auth";
12 | import * as pkce from "./pkce";
13 | 
14 | // Mock PKCE module
15 | vi.mock("./pkce", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("./pkce", () => ({
  generateCodeVerifier: vi.fn(),
  generateCodeChallenge: vi.fn()
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/lib/auth/claude-auth.test.ts:15:4
      at loadAndEvaluateModule (2:1)
-------------------------------


app/api/inngest/route.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'createHttpStatusTests' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/test-utils/common-mocks.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


components/ambient-agents/__tests__/visualization-engine.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { render, screen } from "@testing-library/react";
2 | import { describe, expect, it, vi } from "vitest";
3 | import { VisualizationEngine } from "../visualization-engine";
4 | 
5 | // Mock React Flow for testing
6 | vi.mock("@xyflow/react", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@xyflow/react", () => ({
  ReactFlow: ({ children }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "react-flow",
    children
  }, undefined, false, undefined, this),
  Controls: () => jsxDEV_7x81h0kn("div", {
    "data-testid": "react-flow-controls"
  }, undefined, false, undefined, this),
  MiniMap: () => jsxDEV_7x81h0kn("div", {
    "data-testid": "react-flow-minimap"
  }, undefined, false, undefined, this),
  Background: () => jsxDEV_7x81h0kn("div", {
    "data-testid": "react-flow-background"
  }, undefined, false, undefined, this),
  Panel: ({ children }) => jsxDEV_7x81h0kn("div", {
    "data-testid": "react-flow-panel",
    children
  }, undefined, false, undefined, this),
  useNodesState: () => [[], vi.fn()],
  useEdgesState: () => [[], vi.fn()],
  addEdge: vi.fn(),
  MarkerType: { ArrowClosed: "arrowclosed" }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ambient-agents/__tests__/visualization-engine.test.tsx:6:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/unit/features/pr-status-integration.test.tsx:

# Unhandled error between tests
-------------------------------
26 | 	mergePullRequest: vi.fn(),
27 | 	requestReview: vi.fn(),
28 | 	getPullRequestChecks: vi.fn(),
29 | };
30 | 
31 | vi.mock("@/lib/github-api", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/github-api", () => ({
  githubAPI: mockGitHubAPI
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/unit/features/pr-status-integration.test.tsx:31:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/unit/features/kanban-board.test.tsx:

# Unhandled error between tests
-------------------------------
error: Cannot find module '@radix-ui/react-popover' from '/Users/neo/Developer/experiments/vibex-app/components/ui/popover.tsx'
-------------------------------

flat index - Query time: 0.056135400000130176ms, Throughput: 17814.070978343098 QPS
ivf index - Query time: 0.059012499999880674ms, Throughput: 16945.562380885778 QPS
hnsw index - Query time: 0.026318750000064027ms, Throughput: 37995.72548079096 QPS

tests/integration/electric/offline-sync.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: export 'pgliteConfig' not found in './simple-config'
      at loadAndEvaluateModule (1:11)
-------------------------------


tests/integration/electric/electric.integration.test.ts:

# Unhandled error between tests
-------------------------------
109 | 	async execute(
110 | 		sql: string,
111 | 		params?: any[],
112 | 	): Promise<{ rowsAffected: number }> {
113 | 		if (!this.connected) {
114 | 			throw new Error("Not connected");
               ^
error: Not connected
      at execute (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:114:10)
      at execute (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:110:3)
      at cleanupData (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:188:21)
      at cleanupData (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:186:45)
      at teardown (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:174:14)
      at teardown (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:173:34)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:246:16)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:245:12)
-------------------------------

308 | 
309 | 			expect(result.rowsAffected).toBe(1);
310 | 		});
311 | 
312 | 		it("should handle query errors", async () => {
313 | 			await expect(client.query("INVALID SQL STATEMENT")).rejects.toThrow();
                                                                     ^
error: 

Expected promise that rejects
Received promise that resolved: Promise { <resolved> }

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:313:64)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:312:36)
(fail) Electric Integration Tests > Data Operations > should handle query errors [0.64ms]
312 | 		it("should handle query errors", async () => {
313 | 			await expect(client.query("INVALID SQL STATEMENT")).rejects.toThrow();
314 | 		});
315 | 
316 | 		it("should handle execution errors", async () => {
317 | 			await expect(client.execute("INVALID SQL")).rejects.toThrow();
                                                             ^
error: 

Expected promise that rejects
Received promise that resolved: Promise { <resolved> }

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:317:56)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:316:40)
(fail) Electric Integration Tests > Data Operations > should handle execution errors [13.08ms]

# Unhandled error between tests
-------------------------------
109 | 	async execute(
110 | 		sql: string,
111 | 		params?: any[],
112 | 	): Promise<{ rowsAffected: number }> {
113 | 		if (!this.connected) {
114 | 			throw new Error("Not connected");
               ^
error: Not connected
      at execute (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:114:10)
      at execute (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:110:3)
      at cleanupData (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:188:21)
      at cleanupData (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:186:45)
      at teardown (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:174:14)
      at teardown (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:173:34)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:246:16)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:245:12)
-------------------------------

514 | 		it("should handle transaction rollbacks", async () => {
515 | 			// This would typically test transaction rollback scenarios
516 | 			// For now, we'll test basic error handling
517 | 			await expect(
518 | 				client.execute("INVALID SQL THAT CAUSES ERROR"),
519 | 			).rejects.toThrow();
                   ^
error: 

Expected promise that rejects
Received promise that resolved: Promise { <resolved> }

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:519:14)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric.integration.test.ts:514:45)
(fail) Electric Integration Tests > Error Recovery > should handle transaction rollbacks [11.69ms]

tests/integration/electric/electric-sync.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { afterEach, beforeEach, describe, expect, test, vi } from "vitest";
2 | 
3 | // Mock Electric client before importing
4 | vi.mock("@electric-sql/client", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@electric-sql/client", () => ({
  Electric: vi.fn().mockImplementation(() => ({
    connect: vi.fn().mockResolvedValue(undefined),
    disconnect: vi.fn().mockResolvedValue(undefined),
    sync: {
      subscribe: vi.fn().mockReturnValue({
        unsubscribe: vi.fn()
      }),
      isConnected: vi.fn().mockReturnValue(true),
      getLastSyncTime: vi.fn().mockReturnValue(new Date)
    },
    db: {
      tasks: {
        findMany: vi.fn().mockResolvedValue([]),
        create: vi.fn().mockResolvedValue({ id: "test-task" }),
        update: vi.fn().mockResolvedValue({ id: "test-task" }),
        delete: vi.fn().mockResolvedValue({ id: "test-task" })
      }
    },
    notifier: {
      subscribe: vi.fn().mockReturnValue({
        unsubscribe: vi.fn()
      })
    }
  }))
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/electric/electric-sync.test.ts:4:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/integration/infrastructure/observability-events.integration.test.ts:

# Unhandled error between tests
-------------------------------
18 | 	type ObservabilityEventType,
19 | 	observabilityEvents,
20 | } from "../../../lib/observability/events";
21 | 
22 | // Mock OpenTelemetry
23 | vi.mock("@opentelemetry/api", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@opentelemetry/api", () => ({
  trace: {
    getTracer: vi.fn(() => ({
      startSpan: vi.fn(() => ({
        end: vi.fn(),
        setStatus: vi.fn(),
        spanContext: () => ({
          traceId: "mock-trace-id",
          spanId: "mock-span-id"
        })
      }))
    })),
    getActiveSpan: vi.fn(() => ({
      spanContext: () => ({
        traceId: "mock-trace-id",
        spanId: "mock-span-id"
      })
    }))
  },
  SpanKind: {
    INTERNAL: 0
  },
  SpanStatusCode: {
    ERROR: 2
  },
  context: {
    active: vi.fn()
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/infrastructure/observability-events.integration.test.ts:23:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/integration/infrastructure/base-api-handler.test.ts:

# Unhandled error between tests
-------------------------------
 9 | } from "../../../lib/api/base/handler";
10 | import { ResponseBuilder } from "../../../lib/api/base/response-builder";
11 | import { observability } from "../../../lib/observability";
12 | 
13 | // Mock observability
14 | vi.mock("@/lib/observability", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/observability", () => ({
  observability: {
    metrics: {
      httpRequestDuration: vi.fn()
    }
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/infrastructure/base-api-handler.test.ts:14:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/integration/infrastructure/response-builder.test.ts:

# Unhandled error between tests
-------------------------------
11 | 	type SuccessResponse,
12 | } from "../../../lib/api/base/response-builder";
13 | 
14 | // Mock crypto.randomUUID
15 | const mockUUID = "test-uuid-1234-5678-90ab-cdef";
16 | vi.stubGlobal("crypto", {
        ^
TypeError: vi.stubGlobal is not a function. (In 'vi.stubGlobal("crypto", {
  randomUUID: vi.fn(() => mockUUID)
})', 'vi.stubGlobal' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/infrastructure/response-builder.test.ts:16:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/integration/infrastructure/base-api-error.test.ts:

# Unhandled error between tests
-------------------------------
12 | 	ValidationError,
13 | } from "../../../lib/api/base/errors";
14 | import { observability } from "../../../lib/observability";
15 | 
16 | // Mock observability
17 | vi.mock("@/lib/observability", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/observability", () => ({
  observability: {
    metrics: {
      errorRate: vi.fn()
    },
    events: {
      collector: {
        collectEvent: vi.fn().mockResolvedValue(undefined)
      }
    }
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/infrastructure/base-api-error.test.ts:17:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/integration/infrastructure/base-api-service.test.ts:

# Unhandled error between tests
-------------------------------
12 | 	type ServiceOptions,
13 | } from "../../../lib/api/base/service";
14 | import { observability } from "../../../lib/observability";
15 | 
16 | // Mock observability
17 | vi.mock("@/lib/observability", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/observability", () => ({
  observability: {
    metrics: {
      queryDuration: vi.fn(),
      errorRate: vi.fn()
    },
    events: {
      collector: {
        collectEvent: vi.fn().mockResolvedValue(undefined)
      }
    }
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/tests/integration/infrastructure/base-api-service.test.ts:17:4
      at loadAndEvaluateModule (2:1)
-------------------------------


tests/alerts/transport/webhook-transport.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'WebhookTransport' not found in module '/Users/neo/Developer/experiments/vibex-app/lib/alerts/transport/webhook-transport.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


test/src/shared/schemas/validation.test.ts:
87 | 
88 | 			const result = EnvSchema.safeParse(process.env);
89 | 
90 | 			expect(result.success).toBe(false);
91 | 			if (!result.success) {
92 | 				expect(result.error.errors.length).toBeGreaterThan(0);
                             ^
TypeError: undefined is not an object (evaluating 'result.error.errors.length')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:92:25)
(fail) Zod Environment Schema Validation > EnvSchema Base Validation > should fail validation when required fields are missing [0.95ms]
133 | 			const result = EnvSchema.safeParse(process.env);
134 | 
135 | 			expect(result.success).toBe(false);
136 | 			if (!result.success) {
137 | 				expect(
138 | 					result.error.errors.some(
                        ^
TypeError: undefined is not an object (evaluating 'result.error.errors.some')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:138:19)
(fail) Zod Environment Schema Validation > EnvSchema Base Validation > should validate URL fields correctly [0.20ms]
215 | 			const result = EnvSchema.safeParse(process.env);
216 | 
217 | 			expect(result.success).toBe(false);
218 | 			if (!result.success) {
219 | 				expect(
220 | 					result.error.errors.some(
                        ^
TypeError: undefined is not an object (evaluating 'result.error.errors.some')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:220:19)
(fail) Zod Environment Schema Validation > EnvSchema Base Validation > should validate enum fields correctly [0.36ms]
234 | 			const result = EnvSchema.safeParse(process.env);
235 | 
236 | 			expect(result.success).toBe(false);
237 | 			if (!result.success) {
238 | 				expect(
239 | 					result.error.errors.some(
                        ^
TypeError: undefined is not an object (evaluating 'result.error.errors.some')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:239:19)
(fail) Zod Environment Schema Validation > EnvSchema Base Validation > should validate minimum length constraints [1.30ms]
258 | 			const result = EnvSchema.safeParse(process.env);
259 | 
260 | 			expect(result.success).toBe(false);
261 | 			if (!result.success) {
262 | 				expect(
263 | 					result.error.errors.some(
                        ^
TypeError: undefined is not an object (evaluating 'result.error.errors.some')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:263:19)
(fail) Zod Environment Schema Validation > EnvSchema Base Validation > should validate number ranges correctly [0.44ms]
307 | 
308 | 		it("should throw detailed error for validation failures", () => {
309 | 			process.env.NODE_ENV = "test";
310 | 			// Missing required keys
311 | 
312 | 			expect(() => validateEnv()).toThrow("Environment validation failed:");
                                     ^
error: expect(received).toThrow(expected)

Expected substring: "Environment validation failed:"
Received message: "undefined is not an object (evaluating 'error.errors.map')"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:312:32)
(fail) Zod Environment Schema Validation > validateEnv Function > should throw detailed error for validation failures [0.18ms]
322 | 			process.env.ELECTRIC_USER_ID = "test-user";
323 | 			process.env.ELECTRIC_API_KEY = "test-api-key";
324 | 			process.env.AUTH_SECRET = "test-secret-32-characters-long!!";
325 | 			// Missing LETTA_API_KEY and OPENAI_API_KEY
326 | 
327 | 			expect(() => validateEnv()).toThrow(
                                     ^
error: expect(received).toThrow(expected)

Expected substring: "Critical service validation failed:"
Received message: "undefined is not an object (evaluating 'error.errors.map')"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:327:32)
(fail) Zod Environment Schema Validation > validateEnv Function > should validate critical services requirements [0.18ms]
341 | 			process.env.ELECTRIC_USER_ID = "prod-user";
342 | 			process.env.ELECTRIC_API_KEY = "prod-api-key";
343 | 			process.env.AUTH_SECRET = "short"; // Too short for production
344 | 			process.env.LOGGING_REDACTION_ENABLED = "false"; // Should be enabled in prod
345 | 
346 | 			expect(() => validateEnv()).toThrow("Security validation failed:");
                                     ^
error: expect(received).toThrow(expected)

Expected substring: "Security validation failed:"
Received message: "undefined is not an object (evaluating 'error.errors.map')"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:346:32)
(fail) Zod Environment Schema Validation > validateEnv Function > should validate security requirements in production [0.15ms]
357 | 			process.env.ELECTRIC_AUTH_TOKEN = "test-token";
358 | 			process.env.ELECTRIC_USER_ID = "test-user";
359 | 			process.env.ELECTRIC_API_KEY = "test-api-key";
360 | 			process.env.AUTH_SECRET = "test-secret-32-characters-long!!";
361 | 
362 | 			expect(() => validateEnv()).not.toThrow();
                                         ^
error: expect(received).not.toThrow()

Error name: "TypeError"
Error message: "undefined is not an object (evaluating 'error.errors.map')"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:362:36)
(fail) Zod Environment Schema Validation > validateEnv Function > should allow missing database URL if Electric URL is provided [0.11ms]
315 | 		validateSecurityRequirements(parsed);
316 | 
317 | 		return parsed;
318 | 	} catch (error) {
319 | 		if (error instanceof z.ZodError) {
320 | 			const errorMessages = error.errors
                                     ^
TypeError: undefined is not an object (evaluating 'error.errors.map')
      at validateEnv (/Users/neo/Developer/experiments/vibex-app/src/shared/schemas/validation.ts:320:32)
      at validateDevelopmentEnv (/Users/neo/Developer/experiments/vibex-app/src/shared/schemas/validation.ts:404:14)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:416:17)
(fail) Zod Environment Schema Validation > Environment-Specific Validation Functions > validateDevelopmentEnv > should validate development environment correctly [0.36ms]
429 | 				process.env.ELECTRIC_AUTH_TOKEN = "test-token";
430 | 				process.env.ELECTRIC_USER_ID = "test-user";
431 | 				process.env.ELECTRIC_API_KEY = "test-api-key";
432 | 				process.env.AUTH_SECRET = "test-secret-32-characters-long!!";
433 | 
434 | 				expect(() => validateDevelopmentEnv()).toThrow(
                                                 ^
error: expect(received).toThrow(expected)

Expected substring: "Development environment validation called but NODE_ENV is not 'development'"
Received message: "Security validation failed:\nAt least one alert channel (webhook, Slack, or email) must be configured in production"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:434:44)
(fail) Zod Environment Schema Validation > Environment-Specific Validation Functions > validateDevelopmentEnv > should throw error if NODE_ENV is not development [0.95ms]
321 | 				.map((err) => `${err.path.join(".")}: ${err.message}`)
322 | 				.join("\n");
323 | 
324 | 			throw new Error(`Environment validation failed:\n${errorMessages}`);
325 | 		}
326 | 		throw error;
              ^
error: Security validation failed:
At least one alert channel (webhook, Slack, or email) must be configured in production
      at validateEnv (/Users/neo/Developer/experiments/vibex-app/src/shared/schemas/validation.ts:326:9)
      at validateProductionEnv (/Users/neo/Developer/experiments/vibex-app/src/shared/schemas/validation.ts:416:14)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:456:17)
(fail) Zod Environment Schema Validation > Environment-Specific Validation Functions > validateProductionEnv > should validate production environment correctly [0.95ms]
321 | 				.map((err) => `${err.path.join(".")}: ${err.message}`)
322 | 				.join("\n");
323 | 
324 | 			throw new Error(`Environment validation failed:\n${errorMessages}`);
325 | 		}
326 | 		throw error;
              ^
error: Security validation failed:
At least one alert channel (webhook, Slack, or email) must be configured in production
      at validateEnv (/Users/neo/Developer/experiments/vibex-app/src/shared/schemas/validation.ts:326:9)
      at validateProductionEnv (/Users/neo/Developer/experiments/vibex-app/src/shared/schemas/validation.ts:416:14)
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:476:5)
(fail) Zod Environment Schema Validation > Environment-Specific Validation Functions > validateProductionEnv > should show warnings for missing production recommendations [3.89ms]
529 | 				process.env.ELECTRIC_AUTH_TOKEN = "test-token";
530 | 				process.env.ELECTRIC_USER_ID = "test-user";
531 | 				process.env.ELECTRIC_API_KEY = "test-api-key";
532 | 				process.env.AUTH_SECRET = "test-secret-32-characters-long!!";
533 | 
534 | 				expect(() => validateTestEnv()).toThrow(
                                          ^
error: expect(received).toThrow(expected)

Expected substring: "Test environment validation called but NODE_ENV is not 'test'"
Received message: "Security validation failed:\nAt least one alert channel (webhook, Slack, or email) must be configured in production"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:534:37)
(fail) Zod Environment Schema Validation > Environment-Specific Validation Functions > validateTestEnv > should throw error if NODE_ENV is not test [0.15ms]
558 | 			process.env.ALERTS_ENABLED = "true";
559 | 			process.env.TELEMETRY_ENABLED = "true";
560 | 
561 | 			const summary = getEnvSummary();
562 | 
563 | 			expect(summary.environment).toBe("development");
                                     ^
error: expect(received).toBe(expected)

Expected: "development"
Received: "unknown"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:563:32)
(fail) Zod Environment Schema Validation > getEnvSummary Function > should provide comprehensive environment summary [0.79ms]
625 | 			process.env.ALERTS_ENABLED = "false";
626 | 			process.env.TELEMETRY_ENABLED = "false";
627 | 
628 | 			const summary = getEnvSummary();
629 | 
630 | 			expect(summary.securityStatus).toBe("Basic security only");
                                        ^
error: expect(received).toBe(expected)

Expected: "Basic security only"
Received: "Validation failed: undefined is not an object (evaluating 'error.errors.map')"

      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:630:35)
(fail) Zod Environment Schema Validation > getEnvSummary Function > should show basic security when no security features enabled [0.46ms]
639 | 			const result = EnvSchema.safeParse(process.env);
640 | 
641 | 			expect(result.success).toBe(false);
642 | 			if (!result.success) {
643 | 				expect(
644 | 					result.error.errors.some((err) =>
                        ^
TypeError: undefined is not an object (evaluating 'result.error.errors.some')
      at <anonymous> (/Users/neo/Developer/experiments/vibex-app/test/src/shared/schemas/validation.test.ts:644:19)
(fail) Zod Environment Schema Validation > Edge Cases and Error Handling > should handle invalid numeric strings gracefully [0.31ms]

src/features/example-feature/components/ExampleItem.test.tsx:

# Unhandled error between tests
-------------------------------
error: Cannot find module '../../../../tests/test-utils' from '/Users/neo/Developer/experiments/vibex-app/src/features/example-feature/components/ExampleItem.test.tsx'
-------------------------------


app/task/[id]/_utils/message-guards.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'getMessageById' not found in module '/Users/neo/Developer/experiments/vibex-app/app/task/[id]/_utils/message-guards.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


app/task/[id]/_components/task-loading-state.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { render, screen } from "@testing-library/react";
2 | import { vi } from "vitest";
3 | import { TaskLoadingState } from "./task-loading-state";
4 | 
5 | // Mock the TextShimmer component
6 | vi.mock("@/components/ui/text-shimmer", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/components/ui/text-shimmer", () => ({
  TextShimmer: ({
    children,
    className
  }) => jsxDEV_7x81h0kn("span", {
    className,
    "data-testid": "text-shimmer",
    children
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/app/task/[id]/_components/task-loading-state.test.tsx:6:4
      at loadAndEvaluateModule (2:1)
-------------------------------


app/task/[id]/_components/message-input.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'createTaskAction' not found in module '/Users/neo/Developer/experiments/vibex-app/app/actions/inngest.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


app/task/[id]/_components/chat-message.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { render, screen } from "@testing-library/react";
2 | import { vi } from "vitest";
3 | import { ChatMessage } from "./chat-message";
4 | 
5 | // Mock Lucide React icons
6 | vi.mock("lucide-react", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("lucide-react", () => ({
  Bot: ({ className, ...props }) => jsxDEV_7x81h0kn("svg", {
    className,
    "data-testid": "bot-icon",
    ...props
  }, undefined, false, undefined, this),
  User: ({ className, ...props }) => jsxDEV_7x81h0kn("svg", {
    className,
    "data-testid": "user-icon",
    ...props
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/app/task/[id]/_components/chat-message.test.tsx:6:4
      at loadAndEvaluateModule (2:1)
-------------------------------


app/task/[id]/_components/shell-output.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { render, screen } from "@testing-library/react";
2 | import { vi } from "vitest";
3 | import { ShellOutput } from "./shell-output";
4 | 
5 | // Mock the ScrollArea component
6 | vi.mock("@/components/ui/scroll-area", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/components/ui/scroll-area", () => ({
  ScrollArea: ({
    children,
    className
  }) => jsxDEV_7x81h0kn("div", {
    className,
    "data-testid": "scroll-area",
    children
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/app/task/[id]/_components/shell-output.test.tsx:6:4
      at loadAndEvaluateModule (2:1)
-------------------------------


app/task/[id]/_hooks/use-task-subscription-refactored.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'useTaskSubscription' not found in module '/Users/neo/Developer/experiments/vibex-app/app/task/[id]/_hooks/use-task-subscription-refactored.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


app/task/[id]/_hooks/use-message-processor.test.ts:

# Unhandled error between tests
-------------------------------
SyntaxError: export 'useResetMigration' not found in './use-migration'
      at link (unknown:1:11)
      at link (unknown:1:11)
      at linkAndEvaluateModule (unknown:1:11)
      at loadAndEvaluateModule (unknown:2:1)
      at processTicksAndRejections (unknown:7:39)
-------------------------------


components/ambient-agents/nodes/__tests__/agent-node.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import { Square } from "lucide-react";
3 | import React from "react";
4 | import { describe, expect, it, vi } from "vitest";
5 | 
6 | // Mock lucide-react
7 | vi.mock("lucide-react", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("lucide-react", () => ({
  Square: ({ className, ...props }) => jsxDEV_7x81h0kn("svg", {
    className,
    "data-testid": "square-icon",
    ...props
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/components/ambient-agents/nodes/__tests__/agent-node.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/components/ui/kibo-ui/code-block/index.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { CodeBlockSelectValue } from "./index";
2 | 
3 | // Mock dependencies
4 | vi.mock("@radix-ui/react-use-controllable-state", () => ({
    ^
ReferenceError: vi is not defined
      at /Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/code-block/index.test.tsx:4:1
      at loadAndEvaluateModule (2:1)
-------------------------------


src/components/ui/kibo-ui/ai/conversation.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'AIConversationContent' not found in module '/Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/ai/conversation.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


src/components/ui/kibo-ui/ai/response.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { render, screen } from "@testing-library/react";
2 | import { describe, expect, it, vi, beforeEach } from "vitest";
3 | import React from "react";
4 | 
5 | // Mock dependencies
6 | vi.mock("@/lib/utils", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/utils", () => ({
  cn: (...args) => args.filter(Boolean).join(" ")
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/ai/response.test.tsx:6:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/components/ui/kibo-ui/ai/suggestion.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import userEvent from "@testing-library/user-event";
3 | import type React from "react";
4 | import { beforeEach, describe, expect, it, vi } from "vitest";
5 | 
6 | // Mock dependencies
7 | vi.mock("@/lib/utils", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/utils", () => ({
  cn: (...args) => args.filter(Boolean).join(" ")
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/ai/suggestion.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/components/ui/kibo-ui/ai/input.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'AIInputTools' not found in module '/Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/ai/input.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


src/components/ui/kibo-ui/ai/tool.test.tsx:

# Unhandled error between tests
-------------------------------
2 | import React from "react";
3 | import { describe, expect, it, vi } from "vitest";
4 | import type { AIToolStatus } from "./tool";
5 | 
6 | // Mock dependencies - using @/ prefix for consistency
7 | vi.mock("@/components/ui/badge", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/components/ui/badge", () => ({
  Badge: ({ children, className, variant, ...props }) => jsxDEV_7x81h0kn("span", {
    className,
    "data-variant": variant,
    "data-testid": "badge",
    ...props,
    children
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/ai/tool.test.tsx:7:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/components/ui/kibo-ui/ai/reasoning.test.tsx:

# Unhandled error between tests
-------------------------------
error: Cannot find module '@radix-ui/react-collapsible' from '/Users/neo/Developer/experiments/vibex-app/components/ui/collapsible.tsx'
-------------------------------


src/components/ui/kibo-ui/ai/source.test.tsx:

# Unhandled error between tests
-------------------------------
 8 | 	AISourcesContent,
 9 | 	AISourcesTrigger,
10 | } from "./source";
11 | 
12 | // Mock dependencies
13 | vi.mock("lucide-react", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("lucide-react", () => ({
  BookIcon: ({ className }) => jsxDEV_7x81h0kn("span", {
    className,
    "data-testid": "book-icon",
    children: "\uD83D\uDCDA"
  }, undefined, false, undefined, this),
  ChevronDownIcon: ({ className }) => jsxDEV_7x81h0kn("span", {
    className,
    "data-testid": "chevron-icon",
    children: "\u2304"
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/ai/source.test.tsx:13:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/components/ui/kibo-ui/ai/branch.test.tsx:

# Unhandled error between tests
-------------------------------
 9 | 	AIBranchPrevious,
10 | 	AIBranchSelector,
11 | } from "./branch";
12 | 
13 | // Mock the Button component
14 | vi.mock("@/components/ui/button", () => ({
        ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/components/ui/button", () => ({
  Button: ({
    children,
    onClick,
    disabled,
    className,
    "aria-label": ariaLabel,
    ...props
  }) => jsxDEV_7x81h0kn("button", {
    "aria-label": ariaLabel,
    className,
    disabled,
    onClick,
    ...props,
    children
  }, undefined, false, undefined, this)
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/ai/branch.test.tsx:14:4
      at loadAndEvaluateModule (2:1)
-------------------------------


src/components/ui/kibo-ui/ai/message.test.tsx:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'AIMessage' not found in module '/Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/ai/message.tsx'.
      at loadAndEvaluateModule (1:11)
-------------------------------


src/components/ui/kibo-ui/kanban/index.test.tsx:

# Unhandled error between tests
-------------------------------
1 | import { KanbanProvider } from "./index";
2 | 
3 | // Mock dependencies
4 | vi.mock("@dnd-kit/core", () => ({
    ^
ReferenceError: vi is not defined
      at /Users/neo/Developer/experiments/vibex-app/src/components/ui/kibo-ui/kanban/index.test.tsx:4:1
      at loadAndEvaluateModule (2:1)
-------------------------------


app/task/[id]/_components/__tests__/task-client-page.test.tsx:

# Unhandled error between tests
-------------------------------
SyntaxError: export 'useResetMigration' not found in './use-migration'
      at link (unknown:1:11)
      at link (unknown:1:11)
      at linkAndEvaluateModule (unknown:1:11)
      at loadAndEvaluateModule (unknown:2:1)
      at processTicksAndRejections (unknown:7:39)
-------------------------------


app/api/auth/github/branches/route.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { NextRequest } from "next/server";
2 | import { beforeEach, describe, expect, it, vi } from "vitest";
3 | import { GET } from "./route";
4 | 
5 | // Mock GitHub auth utilities
6 | vi.mock("@/lib/github", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/github", () => ({
  GitHubAuth: vi.fn(() => ({
    fetchBranches: vi.fn()
  }))
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/app/api/auth/github/branches/route.test.ts:6:4
-------------------------------


app/api/auth/anthropic/callback/route.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { NextRequest } from "next/server";
2 | import { beforeEach, describe, expect, it, vi } from "vitest";
3 | import { GET } from "./route";
4 | 
5 | // Mock the authentication utilities
6 | vi.mock("@/lib/auth/anthropic", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/auth/anthropic", () => ({
  AuthAnthropic: {
    exchange: vi.fn()
  }
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/app/api/auth/anthropic/callback/route.test.ts:6:4
-------------------------------


app/api/auth/openai/logout/route.test.ts:

# Unhandled error between tests
-------------------------------
3 | 
4 | // Mock the POST function since it doesn't accept parameters
5 | const POST = vi.fn();
6 | 
7 | // Mock the authentication utilities
8 | vi.mock("@/lib/auth/openai-codex", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/auth/openai-codex", () => ({
  clearStoredToken: vi.fn(),
  revokeToken: vi.fn(),
  getStoredToken: vi.fn(),
  clearStoredState: vi.fn(),
  clearStoredCodeVerifier: vi.fn()
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/app/api/auth/openai/logout/route.test.ts:8:4
-------------------------------


app/api/auth/openai/status/route.test.ts:

# Unhandled error between tests
-------------------------------
1 | // Mock the CodexAuthenticator class
2 | const mockCodexAuthenticator = {
3 | 	isAuthenticated: vi.fn(),
                      ^
TypeError: undefined is not an object (evaluating 'vi.fn')
      at /Users/neo/Developer/experiments/vibex-app/app/api/auth/openai/status/route.test.ts:3:19
      at loadAndEvaluateModule (2:1)
-------------------------------


app/api/auth/openai/callback/route.test.ts:

# Unhandled error between tests
-------------------------------
1 | import { NextRequest } from "next/server";
2 | import { beforeEach, describe, expect, it, vi } from "vitest";
3 | import { GET } from "./route";
4 | 
5 | // Mock the authentication utilities
6 | vi.mock("@/lib/auth/openai-codex", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/auth/openai-codex", () => ({
  exchangeCodeForToken: vi.fn(),
  validateOAuthState: vi.fn(),
  sanitizeRedirectUrl: vi.fn(),
  handleAuthError: vi.fn()
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/app/api/auth/openai/callback/route.test.ts:6:4
-------------------------------


app/api/auth/openai/login/route.test.ts:

# Unhandled error between tests
-------------------------------
3 | 
4 | // Mock the POST function since it doesn't exist in the route
5 | const POST = vi.fn();
6 | 
7 | // Mock the authentication utilities
8 | vi.mock("@/lib/auth/openai-codex", () => ({
       ^
TypeError: vi.mock is not a function. (In 'vi.mock("@/lib/auth/openai-codex", () => ({
  generateAuthUrl: vi.fn(),
  generateCodeChallenge: vi.fn(),
  generateCodeVerifier: vi.fn(),
  generateState: vi.fn()
}))', 'vi.mock' is undefined)
      at /Users/neo/Developer/experiments/vibex-app/app/api/auth/openai/login/route.test.ts:8:4
-------------------------------

----------------------------------------------------------|---------|---------|-------------------
File                                                      | % Funcs | % Lines | Uncovered Line #s
----------------------------------------------------------|---------|---------|-------------------
All files                                                 |   23.52 |   39.59 |
 app/api/auth/anthropic/callback/route.ts                 |    0.00 |   52.08 | 26-32,60-67,71-78
 app/api/auth/github/branches/route.ts                    |    0.00 |    4.82 | 18-47,53-68,72-101,105-131,136-190
 app/api/auth/openai/callback/route.ts                    |    0.00 |   58.82 | 29-34,38-45
 app/api/auth/openai/status/route.ts                      |    0.00 |    6.33 | 8-59,64-85
 app/task/[id]/_components/chat-message.tsx               |    0.00 |   10.67 | 24-90
 app/task/[id]/_components/shell-output.tsx               |    0.00 |    5.88 | 15-62
 app/task/[id]/_components/task-loading-state.tsx         |    0.00 |    7.32 | 12-49
 components/ambient-agents/visualization-engine.tsx       |    0.00 |   10.53 | 21-48,53-58
 components/auth/auth-card-base.tsx                       |    0.00 |    4.41 | 32-161
 components/features/pr-integration/pr-action-buttons.tsx |    0.00 |    7.69 | 12-35
 components/features/pr-integration/pr-review-summary.tsx |    0.00 |    2.86 | 15-82
 components/features/pr-integration/pr-status-badge.tsx   |    0.00 |    4.55 | 10-30
 components/features/pr-integration/pr-status-card.tsx    |    0.00 |    8.82 | 12-42
 components/features/pr-integration/task-pr-linker.tsx    |    0.00 |    7.50 | 16-89
 components/forms/contact-form.tsx                        |    0.00 |    2.23 | 19-193
 components/forms/form-field.tsx                          |    0.00 |    0.00 | 20-87
 components/forms/new-task-form.tsx                       |    0.00 |    9.09 | 26-105
 components/markdown.tsx                                  |    0.00 |   15.90 | 34-115,123-125,128-130,133-135,138-140,143-149,152-187,191-197,200-206,209-215,218-224,227-233,236-242,245-251,255-261,264-269,272,275,278,291-314,324-335
 components/navigation/navbar.tsx                         |    0.00 |    6.52 | 14-56
 components/ui/avatar.tsx                                 |    0.00 |   43.75 | 11-17,26-29,38-44
 components/ui/badge.tsx                                  |    0.00 |   91.67 | 30-31
 components/ui/button.tsx                                 |    0.00 |   80.95 | 42-49
 components/ui/card.tsx                                   |    0.00 |   43.75 | 8-14,23-26,35-41,50-53,62,70-73
 components/ui/dialog.tsx                                 |    0.00 |   32.91 | 20-26,35-51,56-64,70-78,87-93,102-105
 components/ui/input.tsx                                  |    0.00 |   37.50 | 8-17
 components/ui/label.tsx                                  |    0.00 |   75.00 | 17-20
 components/ui/progress.tsx                               |    0.00 |   35.00 | 9-21
 components/ui/scroll-area.tsx                            |    0.00 |   29.73 | 11-21,29-43
 components/ui/select.tsx                                 |    0.00 |   27.43 | 18-30,38-47,55-64,73-97,105-108,117-132,140-143
 components/ui/separator.tsx                              |    0.00 |   38.10 | 12-24
 components/ui/skeleton.tsx                               |    0.00 |   27.27 | 3-10
 components/ui/table.tsx                                  |    0.00 |   38.03 | 8-14,22,30-33,42-48,57-63,72-78,87-93,102-105
 components/ui/tabs.tsx                                   |    0.00 |   41.67 | 13-19,28-34,43-49
 components/ui/textarea.tsx                               |    0.00 |   40.00 | 8-16
 components/ui/tooltip.tsx                                |    0.00 |   57.89 | 16-23
 db/config.ts                                             |    0.00 |   55.26 | 20-22,24,45-50,56-59,65-67
 db/schema.ts                                             |   76.60 |  100.00 | 
 lib/agent-memory/repository.ts                           |    0.00 |    5.15 | 27-142,149-161
 lib/ai/gemini-realtime.ts                                |    0.00 |    6.39 | 42-135,139-178,182-189,193,197-198,202,208-215,219-244,248-272
 lib/alerts/alert-manager.ts                              |    6.67 |    3.12 | 17-260,264-330
 lib/alerts/critical-error-detector.ts                    |   85.71 |   99.52 | 
 lib/alerts/types.ts                                      |  100.00 |  100.00 | 
 lib/api/base/errors.ts                                   |    0.00 |   44.93 | 13-27,34-40,49,55,61,67-70,76,82,88,94-98
 lib/api/base/handler.ts                                  |    0.00 |    6.52 | 34-94,101-103,110-174
 lib/api/base/response-builder.ts                         |    0.00 |   18.45 | 27-30,37-47,54-65,72-77,84-88,95,102,109-124,131,138,145,152-155,162,169-175,182-194
 lib/api/base/service.ts                                  |    0.00 |    7.23 | 15,18-21,25-84,93-104
 lib/auth.ts                                              |   84.00 |   96.90 | 156,191,223,255,313,360-361
 lib/auth/claude-auth.ts                                  |    0.00 |   35.29 | 6-14,18
 lib/auth/index.ts                                        |    0.00 |    8.42 | 47-78,85-139
 lib/auth/oauth-utils.ts                                  |    0.00 |    4.94 | 26-27,34-37,44-47,54-88,95-101,108-135,143-152,159-222
 lib/auth/openai-codex.ts                                 |    0.00 |   12.89 | 38-60,67-104,111-146,153-182,189-202,210-225,233,240,247,255,262,269,276,283,290,297,304
 lib/container-types.ts                                   |   42.86 |   25.23 | 51-74,85-98,107-123,133-157
 lib/github-api.ts                                        |    0.00 |    3.85 | 10-105,112-115
 lib/inngest.ts                                           |  100.00 |  100.00 | 
 lib/letta/agents/brainstorm.ts                           |    0.00 |    4.51 | 51-176,180,184-247,251-264,268-271,275-282,286-292,296-302,306-307
 lib/logging/correlation-id-manager.ts                    |   20.00 |   81.25 | 4-5
 lib/logging/sensitive-data-redactor.ts                   |    0.00 |   13.64 | 33-38,42-59,63-66,70-79
 lib/message-handlers.ts                                  |   66.67 |   71.72 | 59-76,84,132,140,149,156-157,264-280
 lib/metrics/alert-rules.ts                               |   75.00 |  100.00 | 
 lib/metrics/grafana-dashboards.ts                        |   75.00 |  100.00 | 
 lib/metrics/prometheus-client.ts                         |   62.50 |   69.13 | 97-104,108-115,156,160-168,172-182,186-194
 lib/migration/validation-service.ts                      |    0.00 |    2.57 | 51-293,300-333,340-397,404-425,432-645,653-698,705-732,739-760,767-818
 lib/observability/events.ts                              |   27.27 |   19.01 | 103-140,155-168,181-210,226-236,242-309,316-325,336-342,346-356,360-378,383-393,398-408
 lib/observability/index.ts                               |   25.00 |   33.44 | 19-23,30-34,38,115-156,188-255,262,269-271,278-322,329-331,338-373
 lib/observability/metrics.ts                             |    5.26 |   22.08 | 45-62,66-75,79,83-86,91-95,110-128,132-142,146-149,153-183,187-196,203-204,208-209,213-214
 lib/redis/config.ts                                      |    0.00 |   94.44 | 54-57
 lib/redis/job-queue-service.ts                           |    0.00 |    2.03 | 59-105,113-399,403,407
 lib/redis/lock-service.ts                                |    0.00 |    3.52 | 38-223,228,232,236-238
 lib/redis/metrics-service.ts                             |  100.00 |  100.00 | 
 lib/redis/mock-redis.ts                                  |  100.00 |  100.00 | 
 lib/redis/pubsub-service.ts                              |   88.89 |   70.83 | 50-63
 lib/redis/rate-limit-service.ts                          |    0.00 |    0.82 | 51-415
 lib/redis/redis-client.ts                                |   44.74 |   63.16 | 121-126,129-130,175-176,187-190,224-293,317-318,322-330,339-341
 lib/redis/session-service.ts                             |  100.00 |  100.00 | 
 lib/redis/types.ts                                       |  100.00 |  100.00 | 
 lib/stream-utils.ts                                      |  100.00 |  100.00 | 
 lib/telemetry.ts                                         |  100.00 |  100.00 | 
 lib/test-utils/common-mocks.ts                           |   41.67 |   17.69 | 10-33,40-64,71-104,120-123,127-128,132-135,163-173,180-196
 lib/test-utils/error-test-patterns.ts                    |   33.33 |   18.75 | 10-21,29-40,71-94,101-130
 lib/testing/builders/test-data-builder.ts                |   23.08 |   44.94 | 18,54,62,90-100,104,108,112,116-117,121,125,129,152-158,162,166-169,173,177,181,185-191,198,202,206,211-215,219-230,234-244,251-256,260,264-266,270
 lib/testing/documentation/test-documentation.ts          |   57.14 |   29.00 | 170-174,245-259,475,502-506,510-512,514-518,529-839,843-845,850-1118
 lib/testing/lifecycle/test-lifecycle.ts                  |   29.17 |   34.02 | 31-35,55-59,82-85,94-97,159-223,229,233-235,246,250,254,258-270,279-295,299-303,307,311,315,319-357,361,368-381,385-397,401-413,417-433
 lib/testing/performance/performance-benchmarker.ts       |   40.00 |   52.08 | 75-92,96-111,141-156,160-171,175-180
 lib/utils.ts                                             |  100.00 |  100.00 | 
 src/components/ui/kibo-ui/ai/branch.tsx                  |    0.00 |    9.38 | 18-22,33-60,70-96,106-117,151-168,173-190,201-208
 src/components/ui/kibo-ui/ai/source.tsx                  |    0.00 |    6.96 | 25-47,57-64,75-133,144-160
 src/features/example-feature/utils/example-utils.ts      |  100.00 |  100.00 | 
 src/hooks/useClaudeAuth.ts                               |    0.00 |    3.01 | 11-139
 src/hooks/useZodForm.ts                                  |    0.00 |    3.64 | 84-250,255-287,291-318,323-332
 src/hooks/useZodForm/fieldHelpers.ts                     |  100.00 |   98.15 | 
 src/hooks/useZodForm/formState.ts                        |    0.00 |    7.14 | 26-37,44-52,60-73,80-96
 src/hooks/useZodForm/storage.ts                          |    0.00 |    0.00 | 16-72
 src/hooks/useZodForm/validation.ts                       |    0.00 |    3.66 | 17-47,56-83,91-110
 src/lib/auth/claude-auth.ts                              |    0.00 |    5.61 | 28-39,48-130,139-144
 src/lib/auth/pkce.ts                                     |    0.00 |    6.38 | 10-18,27-43,52-61,71-78
 src/schemas/api-routes.ts                                |   60.00 |   98.31 | 270-273
 src/schemas/forms.ts                                     |   81.82 |  100.00 | 
 src/shared/schemas/validation.ts                         |   41.46 |   91.69 | 338,343,347,352,356-358,372,407-410,422,425,427-431,433-437,439-443,452-454
 stagehand.config.ts                                      |    0.00 |   40.65 | 92-183
 tests/e2e/fixtures/base.fixture.ts                       |    0.00 |    7.05 | 36-39,43-47,51-91,95-106,114-196
 tests/setup/crypto-polyfill.ts                           |   40.00 |   24.69 | 18-52,59-71,98-102,111,121-127
 tests/setup/integration-bun.ts                           |   64.81 |   82.68 | 55-59,61-62,100,103-104,111-119,124-129,160-165
----------------------------------------------------------|---------|---------|-------------------

 720 pass
 712 fail
 195 errors
 2136 expect() calls
Ran 1432 tests across 215 files. [54.29s]
